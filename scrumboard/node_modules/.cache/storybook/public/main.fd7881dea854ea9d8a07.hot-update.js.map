{"version":3,"file":"main.fd7881dea854ea9d8a07.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AAAA;AAMA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AApBA;AAsBA;;;;;;;;;;;;;;;;;;;;ACjCA;AAMA;AACA;AAAA;AAAA","sources":["webpack://scrumboard/./src/components/Pega_Extensions_Scrumboard/components/Badge/index.tsx","webpack://scrumboard/./src/components/Pega_Extensions_Scrumboard/components/Badge/styles.ts"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { ThemeContext } from 'styled-components';\r\nimport getCategoryBackgroundColor from '../../helpers/getCategoryBackgroundColor';\r\nimport IStatus from '../../interfaces/IStatus';\r\nimport ICategory from '../../interfaces/ICategory';\r\nimport { BadgeContainer } from './styles';\r\n\r\ninterface BadgeProps {\r\n  value: string; // Change 'category' to 'value' and specify the data type\r\n}\r\n\r\nconst Badge: React.FC<BadgeProps> = ({ value }) => {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const [color, setColor] = useState<string>(theme.colors.primary);\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      // You can replace this logic with your own as needed\r\n      // For example, you can call a function like getCategoryBackgroundColor\r\n      // to determine the color based on the 'value' prop.\r\n      const valueColor = '#7352CF';\r\n      setColor(valueColor);\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <BadgeContainer color={color}>\r\n      <p>{value}</p>\r\n    </BadgeContainer>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import styled from 'styled-components';\r\n\r\ninterface BadgeContainerProps{\r\n  color: string;\r\n}\r\n\r\nexport const BadgeContainer = styled.div<BadgeContainerProps>`\r\n  background-color: ${({color}) => color};\r\n  border-radius: 5px;\r\n  \r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 4px;\r\n\r\n  p {\r\n    color: #fff;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    padding: 4px 2px;\r\n  }\r\n`;\r\n"],"names":[],"sourceRoot":""}