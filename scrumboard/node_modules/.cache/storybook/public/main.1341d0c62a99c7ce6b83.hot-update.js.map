{"version":3,"file":"main.1341d0c62a99c7ce6b83.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AAAA;AAOA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAvBA;AAyBA","sources":["webpack://scrumboard/./src/components/Pega_Extensions_Scrumboard/components/Badge/index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { ThemeContext } from 'styled-components';\r\nimport getCategoryBackgroundColor from '../../helpers/getCategoryBackgroundColor';\r\nimport IStatus from '../../interfaces/IStatus';\r\nimport ICategory from '../../interfaces/ICategory';\r\nimport { BadgeContainer } from './styles';\r\n\r\ninterface BadgeProps {\r\n  value: string;\r\n  valuetype: string;\r\n}\r\n\r\nconst Badge: React.FC<BadgeProps> = ({ value }) => {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const [color, setColor] = useState<string>(theme.colors.primary);\r\n\r\n  useEffect(() => {\r\n    if (valuetype === 'category') {\r\n      // Set color to #7352CF for 'category'\r\n      setColor('#7352CF');\r\n    } else if (valuetype === 'status') {\r\n      // Set color to #61D856 for 'status'\r\n      setColor('#61D856');\r\n    } else {\r\n      // Set a default color if valuetype is neither 'category' nor 'status'\r\n      setColor(theme.colors.primary);\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <BadgeContainer color={color}>\r\n      <p>{value}</p>\r\n    </BadgeContainer>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n"],"names":[],"sourceRoot":""}