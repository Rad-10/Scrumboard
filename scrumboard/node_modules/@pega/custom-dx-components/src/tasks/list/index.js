import inquirer from 'inquirer';
import ora from 'ora';

import { showVersion } from '../../util.js';

import {
  listLocalComponents,
  SOURCE_OF_COMPONENT_TYPES,
  getComponentsFromServer,
  displayServerComponents,
  getListComponentsQuestions
} from './helper.js';

const getList = async (sourceOfComponents, answers) => {
  switch (sourceOfComponents) {
    case SOURCE_OF_COMPONENT_TYPES.LOCAL: {
      await listLocalComponents(sourceOfComponents);
      break;
    }
    case SOURCE_OF_COMPONENT_TYPES.SERVER: {
      const spinner = ora('Fetching components from server\n').start();
      const data = await getComponentsFromServer(answers);
      spinner.stop();
      await displayServerComponents(data, answers);

      break;
    }
    default: {
      console.log('Source of components needs to be either Local or Server');
      break;
    }
  }
};

export default async (options) => {
  showVersion();

  let sourceOfComponentsOption = SOURCE_OF_COMPONENT_TYPES.LOCAL;

  if (options.params[3] === SOURCE_OF_COMPONENT_TYPES.LOCAL) {
    sourceOfComponentsOption = options.params[3];
    await getList(sourceOfComponentsOption);
  } else if (options.params[3] === SOURCE_OF_COMPONENT_TYPES.SERVER) {
    sourceOfComponentsOption = options.params[3];
    const questions = await getListComponentsQuestions(options, sourceOfComponentsOption);
    const answers = await inquirer.prompt(questions);
    await getList(sourceOfComponentsOption, answers);
  } else {
    const questions = await getListComponentsQuestions(options);
    const answers = await inquirer.prompt(questions);
    const { sourceOfComponents } = answers;
    await getList(sourceOfComponents, answers);
  }
};
