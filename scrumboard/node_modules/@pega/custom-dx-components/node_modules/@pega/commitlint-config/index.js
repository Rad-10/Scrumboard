'use strict';

const plugin = require('@pega/commitlint-plugin');

const issuePrefixes = ['EPIC-', 'US-', 'BUG-', 'ISSUE-', 'TASK-'];

const /** @type {import('@commitlint/types').UserConfig} */ Configuration = {
    parserPreset: {
      name: '',
      path: '',
      parserOpts: {
        headerPattern: /^([a-z]+)(?:\(([^)]+)\))?!?: (.+)$/,
        headerCorrespondence: ['type', 'scope', 'subject'],
        referenceActions: 'AgileStudio:',
        issuePrefixes,
        issuePrefixesCaseSensitive: true,
        // cSpell:disable
        mergePattern: /^[Mm]erge/,
        revertPattern: /^[Rr]evert/
        // cSpell:enable
      }
    },

    rules: {
      'type-empty': [2, 'never'],
      'type-case': [2, 'always', 'lower-case'],
      'type-enum': [2, 'always', ['feature', 'fix', 'refactor', 'style', 'test', 'docs', 'pkg']],

      'subject-empty': [2, 'never'],
      'subject-case': [2, 'always', 'sentence-case'],
      'subject-full-stop': [2, 'always'],

      '@pega/header-reference': [2, 'never'],

      'body-max-length': [2, 'never', 0],

      'footer-leading-blank': [2, 'always'],

      '@pega/reference-action-enum': [
        2,
        'always',
        {
          actions: ['AgileStudio:'],
          caseSensitive: true
        }
      ],
      '@pega/reference-order': [2, 'always', { prefixes: issuePrefixes }],

      '@pega/spellcheck': [2, 'always']
    },

    plugins: [plugin]
  };

module.exports = Configuration;
