import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import Button from '../Button';
import Flex from '../Flex';
import Icon, { StyledIcon, registerIcon } from '../Icon';
import * as warnIcon from '../Icon/icons/warn.icon';
import Text from '../Text';
import { useI18n } from '../../hooks';
import { defaultThemeProp } from '../../theme';
registerIcon(warnIcon);
export const StyledErrorState = styled.div(({ theme }) => {
    return css `
    height: 100%;

    ${StyledIcon} {
      font-size: 1.5rem;
      height: 1.5rem;
      width: 1.5rem;
      color: ${theme.base.palette.urgent};
    }
  `;
});
StyledErrorState.defaultProps = defaultThemeProp;
const ErrorState = forwardRef((props, ref) => {
    const t = useI18n();
    const { message = t('unknown_error'), onRetry, ...restProps } = props;
    return (_jsxs(Flex, { ...restProps, as: StyledErrorState, ref: ref, container: { direction: 'column', alignItems: 'center', justify: 'center', gap: 1 }, children: [_jsx(Icon, { name: 'warn' }), _jsx(Text, { variant: 'secondary', children: message }), onRetry && (_jsx(Button, { variant: 'secondary', onClick: onRetry, children: t('try_again') }))] }));
});
export default ErrorState;
//# sourceMappingURL=ErrorState.js.map