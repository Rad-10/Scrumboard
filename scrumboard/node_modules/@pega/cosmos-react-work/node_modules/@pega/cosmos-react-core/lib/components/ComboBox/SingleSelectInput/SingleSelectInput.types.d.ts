import { ChangeEvent, KeyboardEvent, ReactNode } from 'react';
import { FormControlProps } from '../../FormControl';
import ComboBoxProps, { Selected } from '../ComboBox.types';
export default interface SingleSelectInputProps {
    /** List of items to be represented as pills. */
    selected?: Selected;
    /** Input value */
    value?: string;
    /** Callback invoked when user accepts custom value by pressing enter. */
    onNew?: (text: string) => void;
    /** Callback fired when internal input value changes. */
    onChange?: (e: ChangeEvent<HTMLInputElement>) => void;
    /** Callback fired on every key stroke on input field. */
    onKeyDown?: (e: KeyboardEvent<HTMLInputElement>) => void;
    /** Callback fired when AI suggestion is accepted/rejected */
    onResolveSuggestion?: FormControlProps['onResolveSuggestion'];
    /** Makes the input non editable and non clickable. The browser defaults to false. */
    readOnly?: FormControlProps['readOnly'];
    /** Disable the control. The browser defaults to false. */
    disabled?: FormControlProps['disabled'];
    /** Set visual state based on a validation state. */
    status?: FormControlProps['status'];
    /** Placeholder visible on empty input. */
    placeholder?: string;
    /** Additional actions related to the input. */
    actions?: ReactNode;
    /** A visual to render a preview for the selected item */
    visual?: ComboBoxProps['visual'];
}
//# sourceMappingURL=SingleSelectInput.types.d.ts.map