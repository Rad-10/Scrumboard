{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/components/Location/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { hasProp, loadScript } from '../../utils';\n\nimport {\n  Bias,\n  CoordsCannotBeParsedError,\n  GeocoderFailedError,\n  GeolocationUnsupportedError,\n  GoogleMapsAPINotFoundError,\n  IsNotAnObjectError,\n  LatLng,\n  LocationNotFoundError,\n  MapsProvider,\n  ProviderNotSupportedError,\n  ProviderOpts,\n  QUERY_FIELDS,\n  QUERY_TYPES\n} from './types';\n\nconst GOOGLE_MAPS_SCRIPT_ID = 'google-map';\n\nconst providers: {\n  [key: string]: MapsProvider;\n} = {\n  google: {\n    name: 'Google',\n    loadedPromise: null,\n    loadedApiKey: '',\n    loadAPI(opts) {\n      const params = new URLSearchParams(\n        Object.entries({\n          key: opts.apiKey,\n          region: opts.region,\n          language: opts.language,\n          libraries: 'places'\n        }).filter(([, value]) => value !== undefined)\n      ).toString();\n\n      const loadedScript = document.getElementById(GOOGLE_MAPS_SCRIPT_ID);\n      if (loadedScript) {\n        loadedScript.remove();\n        // https://stackoverflow.com/questions/29930274/fixing-you-have-included-the-google-maps-api-multiple-times-on-this-page-this\n        delete (window as any).google;\n      }\n\n      return new Promise((resolve, reject) => {\n        loadScript(\n          `https://maps.googleapis.com/maps/api/js?${params}`,\n          function onLoad(this: HTMLScriptElement) {\n            this.id = GOOGLE_MAPS_SCRIPT_ID;\n            return resolve();\n          },\n          () => reject(new Error(GoogleMapsAPINotFoundError))\n        );\n      });\n    }\n  },\n  undefined: {\n    name: 'undefined',\n    loadedPromise: null,\n    loadedApiKey: '',\n    loadAPI: data => Promise.reject(new Error(`${ProviderNotSupportedError}: ${data.name}`))\n  }\n};\n\nexport async function loadMapsAPI(name: string = '', opts?: ProviderOpts): Promise<void> {\n  if (typeof opts !== 'object' || !opts) {\n    throw new Error(IsNotAnObjectError);\n  }\n\n  const provider = providers[name] ?? providers.undefined;\n\n  if (!provider.loadedPromise || provider.loadedApiKey !== opts?.apiKey) {\n    provider.loadedApiKey = opts?.apiKey;\n    provider.loadedPromise = provider.loadAPI(opts);\n  }\n  return provider.loadedPromise;\n}\n\nexport async function getNavigatorPosition(): Promise<LatLng> {\n  if (!navigator.geolocation) throw new Error(GeolocationUnsupportedError);\n\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(\n      currentLocation => {\n        resolve({\n          latitude: currentLocation.coords.latitude,\n          longitude: currentLocation.coords.longitude\n        });\n      },\n      error => reject(new Error(error.message))\n    );\n  });\n}\n\nexport function toGoogleLatLng(coords: LatLng): google.maps.LatLng {\n  return new google.maps.LatLng(coords.latitude, coords.longitude);\n}\n\n/** Returns an array of place prediction objects ('place' can be an establishment, geographic location, or prominent point of interest)\n * and  session token (valid for multiple queries, followed by one place selection).\n */\nexport async function getPlacePredictions(\n  location: string,\n  bias: Bias = {}\n): Promise<{\n  placePredictions: google.maps.places.AutocompletePrediction[];\n  token: google.maps.places.AutocompleteSessionToken;\n}> {\n  const autocompleteService = new google.maps.places.AutocompleteService();\n  const optionalParams: Partial<google.maps.places.AutocompletionRequest> = {};\n  if (bias?.location) {\n    if (bias?.location.center === 'current') {\n      await getNavigatorPosition()\n        .then(coords => {\n          optionalParams.location = toGoogleLatLng(coords);\n          optionalParams.radius = bias.location!.radius;\n        })\n        // no-op user didn't allow location\n        .catch(() => {});\n    } else {\n      optionalParams.location = toGoogleLatLng(bias.location.center);\n      optionalParams.radius = bias.location.radius;\n    }\n  }\n\n  if (bias?.bounds) {\n    const [sw, ne] = bias.bounds;\n    optionalParams.bounds = new google.maps.LatLngBounds(toGoogleLatLng(sw), toGoogleLatLng(ne));\n  }\n  return new Promise((resolve, reject) => {\n    const token = new google.maps.places.AutocompleteSessionToken();\n    autocompleteService.getPlacePredictions(\n      {\n        input: location,\n        types: QUERY_TYPES,\n        sessionToken: token,\n        ...optionalParams\n      },\n      (placePredictions, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          resolve({ placePredictions: placePredictions ?? [], token });\n        } else {\n          reject(new Error(LocationNotFoundError));\n        }\n      }\n    );\n  });\n}\n\nexport async function getPlace(\n  location: string,\n  mapElement: HTMLDivElement = document.createElement('div')\n): Promise<LatLng> {\n  const placesService = new google.maps.places.PlacesService(mapElement);\n  const { placePredictions, token } = await getPlacePredictions(location);\n  return new Promise((resolve, reject) => {\n    placesService.getDetails(\n      { placeId: placePredictions[0]?.place_id, fields: QUERY_FIELDS, sessionToken: token },\n      (place, pStatus) => {\n        if (pStatus === google.maps.places.PlacesServiceStatus.OK) {\n          resolve({\n            latitude: place?.geometry?.location?.lat() || NaN,\n            longitude: place?.geometry?.location?.lng() || NaN\n          });\n        } else {\n          reject(new Error(LocationNotFoundError));\n        }\n      }\n    );\n  });\n}\n\nexport async function getPlaceById(\n  placeId: string,\n  sessionToken: google.maps.places.AutocompleteSessionToken = new google.maps.places.AutocompleteSessionToken(),\n  mapElement: HTMLDivElement = document.createElement('div')\n): Promise<{ name?: string; address?: string; latitude?: number; longitude?: number }> {\n  const placesService = new google.maps.places.PlacesService(mapElement);\n  return new Promise((resolve, reject) => {\n    placesService.getDetails({ placeId, fields: QUERY_FIELDS, sessionToken }, (place, pStatus) => {\n      if (pStatus === google.maps.places.PlacesServiceStatus.OK) {\n        resolve({\n          name: place?.name,\n          address: place?.formatted_address,\n          latitude: place?.geometry?.location?.lat() || NaN,\n          longitude: place?.geometry?.location?.lng() || NaN\n        });\n      } else {\n        reject(new Error(LocationNotFoundError));\n      }\n    });\n  });\n}\n\n/** Returns coordinations for given input: either coords, address or current position.  */\nexport async function getCoords(\n  coords: string | LatLng,\n  mapElement?: HTMLDivElement\n): Promise<LatLng> {\n  if (coords === '' || coords === undefined) throw new Error();\n  if (coords === 'current') return getNavigatorPosition();\n\n  let location: LatLng;\n  if (typeof coords === 'string') {\n    const [lat, lng] = coords.split(',', 2).map(Number);\n    if (Number.isNaN(lat) || Number.isNaN(lng) || lat === undefined || lng === undefined)\n      return getPlace(coords, mapElement);\n    location = { latitude: lat, longitude: lng };\n  } else {\n    location = coords;\n  }\n\n  if (Number.isFinite(location.latitude) && Number.isFinite(location.longitude)) return location;\n\n  throw new Error(CoordsCannotBeParsedError);\n}\n\nexport async function getAddress(\n  coords: LatLng\n): Promise<{ name: string; address?: string; latitude?: number; longitude?: number }> {\n  const location = {\n    lat: coords.latitude,\n    lng: coords.longitude\n  };\n  const geocoder = new google.maps.Geocoder();\n  return new Promise((resolve, reject) => {\n    geocoder.geocode(\n      { location },\n      (results: google.maps.GeocoderResult[] | null, status: google.maps.GeocoderStatus) => {\n        if (status === 'OK') {\n          const [result] = results ?? [];\n          if (result) {\n            resolve({\n              name: result.formatted_address,\n              address: result.formatted_address,\n              ...(result.geometry && {\n                latitude: result.geometry.location.lat(),\n                longitude: result.geometry.location.lng()\n              })\n            });\n          } else {\n            resolve({\n              name: `${coords.latitude}, ${coords.longitude}`,\n              latitude: coords.latitude,\n              longitude: coords.longitude\n            });\n          }\n        } else {\n          reject(new Error(`${GeocoderFailedError}: ${status}`));\n        }\n      }\n    );\n  });\n}\n\nexport const isLatLngObject = (obj: unknown): obj is google.maps.LatLng => {\n  return (\n    !!obj &&\n    typeof obj === 'object' &&\n    hasProp(obj, 'lat') &&\n    typeof obj.lat === 'function' &&\n    hasProp(obj, 'lng') &&\n    typeof obj.lng === 'function'\n  );\n};\n"]}