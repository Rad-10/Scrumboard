import { jsx as _jsx } from "react/jsx-runtime";
import { useState } from 'react';
import styled from 'styled-components';
import { defaultThemeProp } from '../../theme';
import { debounce } from '../../utils';
import Flex, { StyledFlex } from '../Flex/Flex';
import RadioCheck from '../RadioCheck';
import CardContent from './CardContent';
import { StyledCard } from './Card';
const defaultProps = {
    defaultChecked: false
};
const StyledSelectableCard = styled(StyledCard) `
  border: 0.0625rem solid
    ${props => (props.checked ? props.theme.base.palette.interactive : '#f4f4f4')};

  &:hover {
    border: 0.0625rem solid
      ${props => (props.checked ? props.theme.base.palette.interactive : 'gray')};
  }

  ${StyledFlex}${StyledFlex}:nth-child(1) {
    margin-right: 0.625rem;
  }

  ${StyledFlex}${StyledFlex}:nth-child(2) {
    margin-top: -0.1875rem;
  }
`;
StyledSelectableCard.defaultProps = defaultThemeProp;
const SelectableCard = (props) => {
    const { type, defaultChecked, onChange, children } = props;
    const [checked, changeChecked] = useState(!!defaultChecked);
    const onCardClick = () => {
        changeChecked(!checked);
        if (onChange) {
            onChange({ checked: !checked });
        }
    };
    const debouncedClickListener = () => debounce(onCardClick, 100)();
    return (_jsx(StyledSelectableCard, { type: type, interactive: true, checked: checked, onClick: () => debouncedClickListener(), children: _jsx(CardContent, { children: _jsx(Flex, { container: { alignItems: 'start' }, children: _jsx("div", { children: _jsx(RadioCheck, { checked: checked, type: type, label: children, onChange: () => debouncedClickListener() }) }) }) }) }));
};
SelectableCard.defaultProps = defaultProps;
export default SelectableCard;
//# sourceMappingURL=SelectableCard.js.map