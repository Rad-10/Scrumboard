{"version":3,"file":"AppShellSearch.js","sourceRoot":"","sources":["../../../src/components/AppShell/AppShellSearch.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC, useEffect, useRef, useState, useContext, FormEvent } from 'react';\n\nimport { useBreakpoint, useI18n } from '../../hooks';\nimport Icon from '../Icon';\nimport SearchInput from '../SearchInput';\n\nimport NavigationListItemWrapper from './NavigationListItemWrapper';\nimport { AppShellProps, NavListItemWrapperProps } from './AppShell.types';\nimport {\n  StyledAppShellSearchButton,\n  StyledAppshellSearchContainer,\n  StyledAppShellSearchDecoration,\n  StyledSearch\n} from './AppShellSearch.styles';\nimport AppShellContext from './AppShellContext';\n\nexport interface AppShellSearchProps {\n  collapsed: boolean;\n  searchLabel: string;\n  searchInput: AppShellProps['searchInput'];\n}\n\nexport const AppShellSearch: FC<AppShellSearchProps> = ({\n  collapsed,\n  searchLabel,\n  searchInput\n}) => {\n  const btnElRef = useRef<HTMLButtonElement>(null);\n  const formElRef = useRef<HTMLFormElement>(null);\n  const searchRef = useRef<HTMLInputElement>();\n  const t = useI18n();\n  const [menuOpen, setMenuOpen] = useState(false);\n  const isMediumOrAbove = useBreakpoint('md');\n  const { navState, mobileNavOpen } = useContext(AppShellContext);\n\n  const onMenuToggle: NavListItemWrapperProps['onMenuToggle'] = state => {\n    setMenuOpen(state === 'open');\n  };\n\n  useEffect(() => {\n    const onTab = (e: KeyboardEvent) => {\n      if (menuOpen && e.key === 'Tab') {\n        e.preventDefault();\n        searchRef.current?.focus();\n      }\n    };\n    btnElRef.current?.addEventListener('keydown', onTab);\n    return () => {\n      btnElRef.current?.removeEventListener('keydown', onTab);\n    };\n  }, [searchRef, menuOpen]);\n\n  const searchFormProps = {\n    role: 'search',\n    'aria-label': searchLabel,\n    onSubmit: (e: FormEvent) => e.preventDefault()\n  };\n\n  return (\n    <StyledSearch collapsed={collapsed} isMediumOrAbove={isMediumOrAbove}>\n      {navState === 'closed' && !mobileNavOpen ? (\n        <NavigationListItemWrapper\n          childElementRef={formElRef}\n          label={t('search_placeholder_default')}\n          tooltipLabel={t('search_placeholder_default')}\n          onMenuToggle={onMenuToggle}\n          content={\n            <StyledAppshellSearchContainer>\n              <SearchInput {...searchInput} resultsPopover={false} ref={searchRef} />\n            </StyledAppshellSearchContainer>\n          }\n        >\n          <form {...searchFormProps} ref={formElRef}>\n            <StyledAppShellSearchButton ref={btnElRef}>\n              <StyledAppShellSearchDecoration>\n                <Icon name='search' />\n              </StyledAppShellSearchDecoration>\n            </StyledAppShellSearchButton>\n          </form>\n        </NavigationListItemWrapper>\n      ) : (\n        <form {...searchFormProps}>\n          <SearchInput {...searchInput} />\n        </form>\n      )}\n    </StyledSearch>\n  );\n};\n"]}