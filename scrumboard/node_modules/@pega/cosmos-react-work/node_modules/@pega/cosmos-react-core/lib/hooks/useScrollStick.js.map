{"version":3,"file":"useScrollStick.js","sourceRoot":"","sources":["../../src/hooks/useScrollStick.ts"],"names":[],"mappings":"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","sourcesContent":["import { useRef, useLayoutEffect } from 'react';\n\nexport interface ScrollStickOptions {\n  elements: string | HTMLElement[];\n  scrollContainer?: Stickers['scrollContainer'];\n  offset?: number;\n}\n\ninterface Sticker {\n  element: HTMLElement;\n  top: number;\n  bottom: number;\n  height: number;\n  isStuck: boolean;\n  priorStickHeight: number;\n}\n\ntype ElementsOption = string | HTMLElement[];\n\nconst onBeforeunload = () => {\n  window.scrollTo(0, 0);\n};\n\nclass Stickers {\n  scrollContainer: HTMLElement | Window;\n  offset: number;\n  #scrollDebounce: number;\n  #resizeDebounce: number;\n  #isWindowScroll: boolean;\n  #scrollIntervalStart: number;\n  #scrollIntervalChange: number;\n  #scrollDirection: number;\n  #priorScrollY: number;\n  #resizeTimeout: number;\n  #scrollEndTimeout: number;\n  #isScrolling: boolean;\n  #vpHeightSnapshot: number;\n  #sfHeightSnapshot: number;\n  #stickers: Sticker[];\n  #scrollHandler: () => void;\n  #resizeHandler: () => void;\n\n  constructor({ elements, scrollContainer = window, offset = 0 }: ScrollStickOptions) {\n    this.scrollContainer = scrollContainer;\n    this.offset = offset;\n\n    this.#scrollDebounce = 100;\n    this.#resizeDebounce = 300;\n    this.#resizeTimeout = NaN;\n    this.#scrollEndTimeout = NaN;\n    this.#priorScrollY = NaN;\n    this.#isScrolling = false;\n    this.#vpHeightSnapshot = NaN;\n    this.#sfHeightSnapshot = NaN;\n    this.#scrollHandler = () => {};\n    this.#resizeHandler = () => {};\n\n    this.#isWindowScroll = this.scrollContainer === window;\n\n    // Only gets reset after scroll stop timeout fires\n    this.#scrollIntervalStart = this.getScrollY();\n\n    // Used to determine scroll change within debounced scroll handler\n    this.#scrollIntervalChange = 0;\n\n    // Used to determine scroll direction by +1(page down) -1(page up)\n    this.#scrollDirection = 0;\n\n    this.#stickers = this.setStickers(elements);\n    this.snapshotItemRects();\n    this.addHandlers();\n  }\n\n  setStickers(elements: ElementsOption) {\n    this.#stickers = (\n      typeof elements === 'string'\n        ? Array.from(document.querySelectorAll<HTMLElement>(elements))\n        : elements\n    ).map(element => ({\n      element,\n      isStuck: false,\n      top: NaN,\n      bottom: NaN,\n      height: NaN,\n      priorStickHeight: NaN\n    }));\n\n    return this.#stickers;\n  }\n\n  addHandlers() {\n    this.rmHandlers();\n    this.#scrollHandler = this.onScroll.bind(this);\n    this.#resizeHandler = this.onResize.bind(this);\n    this.scrollContainer.addEventListener('scroll', this.#scrollHandler);\n    window.addEventListener('resize', this.#resizeHandler);\n    // Not sure we need this. Maybe when DOM was persisted...\n    window.addEventListener('beforeunload', onBeforeunload);\n  }\n\n  rmHandlers() {\n    this.scrollContainer.removeEventListener('scroll', this.#scrollHandler);\n    window.removeEventListener('resize', this.#resizeHandler);\n    window.removeEventListener('beforeunload', onBeforeunload);\n  }\n\n  snapshotItemRects() {\n    this.#stickers.forEach(sticker => {\n      const rect = sticker.element.getBoundingClientRect();\n      sticker.top = rect.top;\n      sticker.bottom = rect.bottom;\n      sticker.height = rect.height;\n    });\n  }\n\n  onScroll() {\n    clearTimeout(this.#scrollEndTimeout);\n\n    const currentScrollY = this.getScrollY();\n\n    this.#priorScrollY = !Number.isNaN(this.#priorScrollY)\n      ? this.#priorScrollY\n      : this.#scrollIntervalStart;\n\n    // Diff between priorScrollY and new currentScrollY to determine direction\n    this.#scrollDirection = currentScrollY - this.#priorScrollY > 0 ? 1 : -1;\n\n    // How much scroll changed + or - within the debounce interval\n    this.#scrollIntervalChange = currentScrollY - this.#scrollIntervalStart;\n\n    // Update old to new for next scroll event\n    this.#priorScrollY = currentScrollY;\n\n    // When scrolling has stopped\n    this.#scrollEndTimeout = window.setTimeout(() => {\n      // Reset for next scroll starting point\n      this.#scrollIntervalStart = this.#priorScrollY;\n\n      // Reset until next scroll\n      this.#vpHeightSnapshot = NaN;\n      this.#sfHeightSnapshot = NaN;\n\n      this.#isScrolling = false;\n    }, this.#scrollDebounce);\n\n    // Additional scroll calls always have to test for stick state change\n    if (this.#isScrolling) {\n      this.testForStick();\n      return;\n    }\n\n    // Only reaches here on first call and we note as in a scrolling state\n    this.#isScrolling = true;\n\n    // grab the current rect points for stickers to test against while scrolling\n    this.snapshotItemRects();\n\n    /**\n     * Get once and cache until scroll settles\n     * Unlikely to change and avoids additional reflows on scroll\n     */\n    this.#vpHeightSnapshot = this.getViewportHeight();\n    this.#sfHeightSnapshot = this.getScrollFrameHeight();\n\n    this.testForStick();\n  }\n\n  onResize() {\n    clearTimeout(this.#resizeTimeout);\n    this.#resizeTimeout = window.setTimeout(() => {\n      this.snapshotItemRects();\n      this.#stickers.forEach(sticker => {\n        if (sticker.isStuck) this.addStick(sticker);\n      });\n    }, this.#resizeDebounce);\n  }\n\n  getScrollY() {\n    return this.#isWindowScroll\n      ? (this.scrollContainer as Window).scrollY\n      : (this.scrollContainer as HTMLElement).scrollTop;\n  }\n\n  getViewportHeight() {\n    // If we have a height snapshot use it since this has likely been called on scroll\n    if (!Number.isNaN(this.#vpHeightSnapshot)) {\n      return this.#vpHeightSnapshot;\n    }\n\n    return Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  }\n\n  getScrollFrameHeight() {\n    // If we have a height snapshot use it since this has likely been called on scroll\n    if (!Number.isNaN(this.#sfHeightSnapshot)) {\n      return this.#sfHeightSnapshot;\n    }\n\n    const viewportHeight = this.getViewportHeight();\n    let sfh = viewportHeight;\n\n    if (!this.#isWindowScroll) {\n      sfh = viewportHeight - (this.scrollContainer as HTMLElement).getBoundingClientRect().top;\n    }\n\n    return sfh;\n  }\n\n  testBottomInView(sticker: Sticker) {\n    const vph = this.getViewportHeight();\n    const sfh = this.getScrollFrameHeight();\n    const sic = this.#scrollIntervalChange;\n\n    return sfh + sic + (vph - sfh) >= sticker.bottom + this.offset;\n  }\n\n  testForStick() {\n    // Don't do anything if scrolling up\n    if (this.#scrollDirection === -1) return;\n\n    this.#stickers.forEach(sticker => {\n      const bottomIsInView = this.testBottomInView(sticker);\n      const hasHeightChange =\n        !Number.isNaN(sticker.priorStickHeight) && sticker.height !== sticker.priorStickHeight;\n\n      if (bottomIsInView) {\n        if (!sticker.isStuck || hasHeightChange) {\n          window.requestAnimationFrame(() => this.addStick(sticker));\n        }\n      } else if (sticker.isStuck && hasHeightChange) {\n        const marginTop = this.getScrollY() + sticker.top - this.offset;\n\n        window.requestAnimationFrame(() => {\n          this.removeStick(sticker);\n          sticker.element.style.marginTop = `${marginTop}px`;\n        });\n      }\n    });\n\n    return this;\n  }\n\n  addStick(sticker: Sticker) {\n    sticker.element.style.position = 'sticky';\n    sticker.element.style.marginTop = '';\n    sticker.element.style.top = `${this.getStickTop(sticker)}px`;\n    sticker.priorStickHeight = sticker.height;\n    sticker.isStuck = true;\n    return this;\n  }\n\n  removeStick(sticker: Sticker) {\n    sticker.element.style.position = '';\n    sticker.element.style.marginTop = '';\n    sticker.element.style.top = '';\n    sticker.isStuck = false;\n    return this;\n  }\n\n  getStickTop(sticker: Sticker) {\n    const spHeight = this.getScrollFrameHeight();\n    let offset = this.offset;\n\n    if (sticker.height + this.offset > spHeight) {\n      offset = spHeight - sticker.height - offset;\n    }\n\n    return offset;\n  }\n\n  cleanup() {\n    this.rmHandlers();\n    this.#stickers.forEach(this.removeStick);\n  }\n}\n\n/**\n * @example useScrollStick({ elements: [myColumnElements] | '.my-columns', offset: 20 });\n * @param options An object to set the sticky elements, the scroll container and an stuck offset in pixels.\n * @returns void.\n */\nconst useScrollStick = (options?: ScrollStickOptions): void => {\n  const instance = useRef<Stickers>();\n\n  useLayoutEffect(() => {\n    if (options?.elements) {\n      instance.current = new Stickers(options);\n    }\n\n    return () => {\n      instance.current?.cleanup();\n      instance.current = undefined;\n    };\n  }, [options]);\n};\n\nexport default useScrollStick;\n"]}