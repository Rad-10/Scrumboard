{"version":3,"file":"gradients.js","sourceRoot":"","sources":["../../src/styles/gradients.ts"],"names":[],"mappings":"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","sourcesContent":["// cspell:words deutan\n\nimport { mix } from 'polished';\n\ninterface ColorStop {\n  /** CSS color string. */\n  color: string;\n  /** Position along the gradient expressed as a number from 0 to 1. */\n  position: number;\n}\n\ntype LinearGradient = ColorStop[];\n\nexport const gradientMap = {\n  grayscale: [\n    { color: 'hsl(0, 100%, 100%)', position: 0 },\n    { color: 'hsl(0, 100%, 0%)', position: 1 }\n  ],\n  'persian-blue': [\n    { color: 'hsl(210, 50%, 94%)', position: 0 },\n    { color: 'hsl(210, 46%, 63%)', position: 1 / 3 },\n    { color: 'hsl(206, 100%, 33%)', position: 2 / 3 },\n    { color: 'hsl(210, 100%, 27%)', position: 1 }\n  ],\n  'persian-green': [\n    { color: 'hsl(175, 35%, 94%)', position: 0 },\n    { color: 'hsl(175, 42%, 65%)', position: 1 / 3 },\n    { color: 'hsl(175, 100%, 33%)', position: 2 / 3 },\n    { color: 'hsl(175, 100%, 27%)', position: 1 }\n  ],\n  'pastel-orange': [\n    { color: 'hsl(36, 100%, 97%)', position: 0 },\n    { color: 'hsl(36, 100%, 79%)', position: 1 / 3 },\n    { color: 'hsl(36, 100%, 64%)', position: 2 / 3 },\n    { color: 'hsl(36, 99%, 61%)', position: 1 }\n  ],\n  'japanese-laurel': [\n    { color: 'hsl(135, 21%, 94%)', position: 0 },\n    { color: 'hsl(135, 24%, 61%)', position: 1 / 3 },\n    { color: 'hsl(135, 54%, 33%)', position: 2 / 3 },\n    { color: 'hsl(135, 60%, 26%)', position: 1 }\n  ],\n  'mango-tango': [\n    { color: 'hsl(23, 100%, 96%)', position: 0 },\n    { color: 'hsl(23, 100%, 78%)', position: 1 / 3 },\n    { color: 'hsl(23, 100%, 62%)', position: 2 / 3 },\n    { color: 'hsl(23, 100%, 53%)', position: 1 }\n  ],\n  valencia: [\n    { color: 'hsl(1, 87%, 96%)', position: 0 },\n    { color: 'hsl(1, 72%, 75%)', position: 1 / 3 },\n    { color: 'hsl(1, 67%, 56%)', position: 2 / 3 },\n    { color: 'hsl(1, 82%, 41%)', position: 1 }\n  ],\n  'fuchsia-blue': [\n    { color: 'hsl(259, 45%, 96%)', position: 0 },\n    { color: 'hsl(259, 45%, 78%)', position: 1 / 3 },\n    { color: 'hsl(259, 43%, 56%)', position: 2 / 3 },\n    { color: 'hsl(259, 40%, 49%)', position: 1 }\n  ],\n  'faded-red': [\n    { color: 'hsl(360, 100%, 95%)', position: 0 },\n    { color: 'hsl(360, 100%, 85%)', position: 1 / 3 },\n    { color: 'hsl(360, 100%, 75%)', position: 2 / 3 },\n    { color: 'hsl(360, 100%, 70%)', position: 1 }\n  ],\n  rope: [\n    { color: 'hsl(25, 31%, 93%)', position: 0 },\n    { color: 'hsl(25, 32%, 62%)', position: 1 / 3 },\n    { color: 'hsl(25, 59%, 35%)', position: 2 / 3 },\n    { color: 'hsl(25, 64%, 30%)', position: 1 }\n  ],\n  silver: [\n    { color: 'hsl(15, 18%, 97%)', position: 0 },\n    { color: 'hsl(15, 9%, 79%)', position: 1 / 3 },\n    { color: 'hsl(15, 11%, 65%)', position: 2 / 3 },\n    { color: 'hsl(15, 9%, 58%)', position: 1 }\n  ],\n  'blue-yellow': [\n    { color: 'hsl(56, 100%, 93%)', position: 0 },\n    { color: 'hsl(144, 46%, 79%)', position: 2 / 10 },\n    { color: 'hsl(185, 53%, 58%)', position: 4 / 10 },\n    { color: 'hsl(191, 56%, 52%)', position: 5 / 10 },\n    { color: 'hsl(195, 62%, 48%)', position: 6 / 10 },\n    { color: 'hsl(206, 67%, 37%)', position: 8 / 10 },\n    { color: 'hsl(215, 62%, 30%)', position: 1 }\n  ],\n  'green-yellow': [\n    { color: 'hsl(56, 100%, 93%)', position: 0 },\n    { color: 'hsl(88, 61%, 85%)', position: 2 / 10 },\n    { color: 'hsl(125, 47%, 78%)', position: 4 / 10 },\n    { color: 'hsl(148, 45%, 65%)', position: 5 / 10 },\n    { color: 'hsl(159, 47%, 50%)', position: 6 / 10 },\n    { color: 'hsl(173, 80%, 30%)', position: 8 / 10 },\n    { color: 'hsl(178, 73%, 22%)', position: 1 }\n  ],\n  'ruby-yellow': [\n    { color: 'hsl(56, 100%, 93%)', position: 0 },\n    { color: 'hsl(40, 100%, 83%)', position: 2 / 10 },\n    { color: 'hsl(19, 100%, 75%)', position: 4 / 10 },\n    { color: 'hsl(3, 100%, 73%)', position: 5 / 10 },\n    { color: 'hsl(350, 81%, 62%)', position: 6 / 10 },\n    { color: 'hsl(343, 54%, 55%)', position: 8 / 10 },\n    { color: 'hsl(330, 40%, 36%)', position: 1 }\n  ],\n  'purple-blue': [\n    { color: 'hsl(190, 42%, 97%)', position: 0 },\n    { color: 'hsl(205, 51%, 84%)', position: 2 / 10 },\n    { color: 'hsl(212, 47%, 73%)', position: 4 / 10 },\n    { color: 'hsl(219, 41%, 70%)', position: 5 / 10 },\n    { color: 'hsl(253, 32%, 66%)', position: 6 / 10 },\n    { color: 'hsl(272, 27%, 49%)', position: 8 / 10 },\n    { color: 'hsl(272, 37%, 32%)', position: 1 }\n  ],\n  'violet-rose': [\n    { color: 'hsl(18, 100%, 98%)', position: 0 },\n    { color: 'hsl(359, 100%, 91%)', position: 2 / 10 },\n    { color: 'hsl(336, 96%, 77%)', position: 4 / 10 },\n    { color: 'hsl(325, 73%, 65%)', position: 5 / 10 },\n    { color: 'hsl(319, 58%, 58%)', position: 6 / 10 },\n    { color: 'hsl(287, 38%, 45%)', position: 8 / 10 },\n    { color: 'hsl(259, 43%, 35%)', position: 1 }\n  ],\n  'negative-attention-positive': [\n    { color: 'hsl(2, 67%, 56%)', position: 0 },\n    { color: 'hsl(21, 87%, 60%)', position: 2 / 10 },\n    { color: 'hsl(36, 100%, 64%)', position: 4 / 10 },\n    { color: 'hsl(50, 95%, 75%)', position: 5 / 10 },\n    { color: 'hsl(85, 72%, 67%)', position: 6 / 10 },\n    { color: 'hsl(120, 49%, 60%)', position: 8 / 10 },\n    { color: 'hsl(135, 53%, 33%)', position: 1 }\n  ],\n  'negative-attention-positive-protan': [\n    { color: 'hsl(344, 67%, 44%)', position: 0 },\n    { color: 'hsl(351, 66%, 59%)', position: 2 / 10 },\n    { color: 'hsl(360, 100%, 84%)', position: 4 / 10 },\n    { color: 'hsl(0, 0%, 89%)', position: 5 / 10 },\n    { color: 'hsl(110, 46%, 80%)', position: 6 / 10 },\n    { color: 'hsl(120, 49%, 60%)', position: 8 / 10 },\n    { color: 'hsl(135, 53%, 33%)', position: 1 }\n  ],\n  'negative-attention-positive-deutan': [\n    { color: 'hsl(315, 64%, 45%)', position: 0 },\n    { color: 'hsl(313, 83%, 62%)', position: 2 / 10 },\n    { color: 'hsl(313, 100%, 80%)', position: 4 / 10 },\n    { color: 'hsl(0, 0%, 89%)', position: 5 / 10 },\n    { color: 'hsl(110, 46%, 80%)', position: 6 / 10 },\n    { color: 'hsl(120, 49%, 60%)', position: 8 / 10 },\n    { color: 'hsl(135, 53%, 33%)', position: 1 }\n  ],\n  'hot-cold': [\n    { color: 'hsl(212, 100%, 27%)', position: 0 },\n    { color: 'hsl(213, 40%, 49%)', position: 2 / 10 },\n    { color: 'hsl(210, 45%, 69%)', position: 4 / 10 },\n    { color: 'hsl(0, 0%, 89%)', position: 5 / 10 },\n    { color: 'hsl(360, 100%, 84%)', position: 6 / 10 },\n    { color: 'hsl(351, 66%, 59%)', position: 8 / 10 },\n    { color: 'hsl(344, 67%, 44%)', position: 1 }\n  ],\n  'two-extremes': [\n    { color: 'hsl(240, 30%, 39%)', position: 0 },\n    { color: 'hsl(271, 27%, 63%)', position: 2 / 10 },\n    { color: 'hsl(293, 25%, 87%)', position: 4 / 10 },\n    { color: 'hsl(0, 0%, 89%)', position: 5 / 10 },\n    { color: 'hsl(171, 37%, 86%)', position: 6 / 10 },\n    { color: 'hsl(167, 41%, 51%)', position: 8 / 10 },\n    { color: 'hsl(163, 44%, 16%)', position: 1 }\n  ]\n};\n\nexport const colorInGradient = ([...gradient]: LinearGradient, targetPosition: number): string => {\n  // Return transparent for an empty gradient.\n  if (gradient.length === 0) return 'transparent';\n\n  // Return the color for single element gradient.\n  if (gradient.length === 1) return gradient[0].color;\n\n  // Clamp position to interval from 0 to 1.\n  targetPosition = Math.min(Math.max(targetPosition, 0), 1);\n\n  // Extend the the start of the gradient to 0 if necessary.\n  if (gradient[0].position !== 0) gradient.unshift({ color: gradient[0].color, position: 0 });\n\n  // Extend the the end of the gradient to 1 if necessary.\n  if (gradient[gradient.length - 1].position !== 1)\n    gradient.push({ color: gradient[gradient.length - 1].color, position: 1 });\n\n  for (let i = 0; i < gradient.length; i += 1) {\n    const current = gradient[i];\n\n    // If target position is the same as the current position, return the color at the current position.\n    if (targetPosition === current.position) return current.color;\n\n    // If target position is less than the current position, it must be between the previous position and current position.\n    if (targetPosition < current.position) {\n      const previous = gradient[i - 1];\n\n      // Calculate how far the targetPosition is between the previousPosition and the currentPosition.\n      const percentage =\n        (targetPosition - previous.position) / (current.position - previous.position);\n\n      try {\n        return mix(percentage, current.color, previous.color);\n      } catch {\n        // Polished mix throws on invalid color.\n        return 'transparent';\n      }\n    }\n  }\n\n  // Failsafe return.\n  return 'transparent';\n};\n\nexport const colorInGradientByName = (\n  name: keyof typeof gradientMap,\n  targetPosition: number\n): string => {\n  return colorInGradient(gradientMap[name] ?? [], targetPosition);\n};\n\nexport const colorsForCategories = (\n  count: number,\n  {\n    gradients = (\n      [\n        'persian-blue',\n        'persian-green',\n        'pastel-orange',\n        'japanese-laurel',\n        'mango-tango',\n        'valencia',\n        'fuchsia-blue',\n        'faded-red',\n        'rope',\n        'silver'\n      ] as const\n    ).map(name => gradientMap[name]),\n    steps = [2 / 3, 1 / 3, 1, 0, 1 / 2]\n  }: { gradients?: LinearGradient[]; steps?: number[] } = {}\n): string[] => {\n  // Colors per gradient\n  const perGradient = Math.floor(count / gradients.length);\n\n  // Number of gradients with 1 extra color\n  const extra = count % gradients.length;\n\n  const colors: string[] = [];\n\n  for (let i = 0; i < gradients.length; i += 1) {\n    for (let j = 0; j < (i < extra ? perGradient + 1 : perGradient); j += 1) {\n      colors.push(colorInGradient(gradients[i], steps[j % steps.length]));\n    }\n  }\n\n  return colors;\n};\n\nexport const nlpColors = (\n  [\n    ['persian-blue', 1],\n    ['persian-green', 1],\n    ['pastel-orange', 1],\n    ['japanese-laurel', 1],\n    ['mango-tango', 1],\n    ['valencia', 1],\n    ['fuchsia-blue', 1],\n    ['faded-red', 1],\n    ['rope', 1],\n    ['silver', 1],\n    ['blue-yellow', 1],\n    ['blue-yellow', 5 / 10],\n    ['green-yellow', 1],\n    ['blue-yellow', 3 / 10],\n    ['green-yellow', 7 / 10],\n    ['ruby-yellow', 1],\n    ['ruby-yellow', 6 / 10],\n    ['purple-blue', 1],\n    ['two-extremes', 9 / 10],\n    ['persian-blue', 1 / 2],\n    ['hot-cold', 1],\n    ['persian-green', 1 / 2],\n    ['pastel-orange', 1 / 2],\n    ['japanese-laurel', 1 / 2],\n    ['mango-tango', 1 / 2],\n    ['valencia', 1 / 2],\n    ['fuchsia-blue', 1 / 2],\n    ['faded-red', 1 / 2],\n    ['rope', 1 / 2],\n    ['silver', 1 / 2],\n    ['blue-yellow', 7 / 10],\n    ['blue-yellow', 4 / 10],\n    ['green-yellow', 5 / 10],\n    ['ruby-yellow', 5 / 10],\n    ['purple-blue', 7 / 10],\n    ['purple-blue', 5 / 10],\n    ['violet-rose', 5 / 10],\n    ['two-extremes', 8 / 10],\n    ['ruby-yellow', 4 / 10],\n    ['violet-rose', 7 / 10],\n    ['negative-attention-positive-deutan', 8 / 10]\n  ] as const\n).map(([gradient, position]) => colorInGradient(gradientMap[gradient], position));\n\nexport const toLinearGradient = (\n  gradient: LinearGradient,\n  { direction = '180deg' }: { direction?: string } = {}\n): string => {\n  if (gradient.length === 0) return 'transparent';\n  if (gradient.length === 1) return gradient[0].color;\n\n  return `linear-gradient(${direction}, ${gradient\n    .map(({ color, position }) => `${color} ${position * 100}%`)\n    .join(', ')})`;\n};\n"]}