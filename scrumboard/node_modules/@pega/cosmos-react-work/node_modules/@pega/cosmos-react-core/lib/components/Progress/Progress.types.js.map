{"version":3,"file":"Progress.types.js","sourceRoot":"","sources":["../../../src/components/Progress/Progress.types.ts"],"names":[],"mappings":"","sourcesContent":["import { Ref } from 'react';\n\nimport { BaseProps, NoChildrenProp } from '../../types';\nimport { BackdropProps } from '../Backdrop/Backdrop';\n\nexport interface ProgressProps extends BaseProps, NoChildrenProp {\n  /**\n   * Determines which variant should be rendered.\n   * @default \"ring\"\n   */\n  variant?: 'ring' | 'bar' | 'ellipsis';\n  /**\n   * Minimum possible value.\n   * @default 0\n   */\n  minValue?: number;\n  /**\n   * Maximum possible value.\n   * @default 100\n   */\n  maxValue?: number;\n  /** Current progress value within the range specified, or the default range of 0-100. */\n  value?: number;\n  /** Provides a message to the user along with the component. */\n  message?: string;\n  /**\n   * Determines the placement of the component.\n   * @default \"global\"\n   */\n  placement?: 'global' | 'local' | 'inline';\n  /**\n   * When true, fade in occurs when component mounts.\n   * When false, mounted component fades out then re-renders self and returns null, removing itself from the DOM.\n   * This is technically not the same as unmounting via parent.\n   * @default true\n   */\n  visible?: boolean;\n  /** Called when the css transition ends on the way in. */\n  onTransitionEndIn?: BackdropProps['onAfterTransitionIn'];\n  /** Called when the css transition ends on the way out...A good time to unmount! */\n  onTransitionEndOut?: BackdropProps['onAfterTransitionOut'];\n  /** Ref for the wrapping element. */\n  ref?: Ref<HTMLDivElement>;\n}\n"]}