{"version":3,"file":"ModalManager.js","sourceRoot":"","sources":["../../../src/components/Modal/ModalManager.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  useReducer,\n  useMemo,\n  useEffect,\n  useContext,\n  FunctionComponent,\n  ComponentType,\n  Dispatch,\n  Context,\n  memo\n} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { createUID, windowIsAvailable } from '../../utils';\nimport { useConfiguration, useScrollToggle } from '../../hooks';\nimport { OmitStrict } from '../../types';\nimport '../../init';\n\nimport DockedModals from './DockedModals';\nimport {\n  ModalMethods,\n  ModalOptions,\n  ModalObject,\n  ModalManagerProps,\n  ModalState,\n  ModalManagerContextValue\n} from './Modal.types';\nimport { ModalContext, ModalManagerContext } from './Contexts';\n\ndeclare module '../../init' {\n  export interface CosmosGlobals {\n    modalManagerContext?: Context<ModalManagerContextValue>;\n  }\n}\n\ntype ModalAction =\n  | 'create'\n  | 'update'\n  | 'minimize'\n  | 'maximize'\n  | 'dock'\n  | 'activate'\n  | 'dismiss'\n  | 'unmount';\n\ntype ModalReducerPayload<P extends object> =\n  | { action: 'create'; modal: ModalObject<P> }\n  | {\n      action: 'update';\n      modal: Partial<OmitStrict<ModalObject<P>, 'props'>> &\n        Pick<ModalObject, 'id'> & { props: Partial<ModalObject<P>['props']> };\n    }\n  | {\n      action: Exclude<ModalAction, 'create' | 'update'>;\n      modal: Pick<ModalObject, 'id'>;\n    };\n\nconst reducer = <P extends object>(\n  modals: ModalObject[],\n  payload: ModalReducerPayload<P>\n): ModalObject<any>[] => {\n  switch (payload.action) {\n    case 'create':\n      return [\n        ...modals.map(modal => {\n          if (\n            (!payload.modal.options.alert &&\n              payload.modal.state === 'open' &&\n              !modal.options.alert &&\n              modal.state === 'open' &&\n              modal.options.minimizable) ||\n            payload.modal.options.dockable\n          ) {\n            modal.state = 'minimized';\n          }\n\n          return modal;\n        }),\n        payload.modal\n      ];\n\n    case 'unmount':\n      return modals.filter(modal => modal.id !== payload.modal.id);\n\n    case 'dismiss':\n      return modals.map(modal => {\n        modal.state = modal.id === payload.modal.id ? 'closed' : modal.state;\n        return modal;\n      });\n\n    case 'update':\n      return modals.map(modal => {\n        modal.props =\n          modal.id === payload.modal.id ? { ...modal.props, ...payload.modal.props } : modal.props;\n        return modal;\n      });\n\n    case 'activate':\n      return modals.map(modal => {\n        if (modal.id === payload.modal.id && !modal.options.dockable) {\n          modal.state = 'open';\n        } else if (modal.id === payload.modal.id && modal.options.dockable) {\n          modal.state = 'docked';\n        } else if (!modal.options.alert && modal.state === 'open' && modal.options.minimizable) {\n          modal.state = 'minimized';\n        }\n\n        return modal;\n      });\n\n    case 'minimize':\n      return modals.map(modal => {\n        modal.state =\n          modal.id === payload.modal.id && modal.options.minimizable ? 'minimized' : modal.state;\n        return modal;\n      });\n\n    case 'maximize':\n      return modals.map(modal => {\n        modal.state =\n          modal.id === payload.modal.id && modal.options.maximizable ? 'maximized' : modal.state;\n        return modal;\n      });\n\n    case 'dock':\n      return modals.map(modal => {\n        modal.state =\n          modal.id === payload.modal.id && modal.options.dockable ? 'docked' : 'minimized';\n        return modal;\n      });\n\n    default:\n      return modals;\n  }\n};\n\nconst WrappedModal = memo(\n  ({\n    Component,\n    id,\n    options: { alert, dismissible, dockable, minimizable, maximizable },\n    state,\n    methods,\n    props,\n    top\n  }: ModalObject & { top: boolean }) => (\n    <ModalContext.Provider\n      value={{\n        id,\n        alert,\n        dismissible,\n        minimizable,\n        maximizable,\n        dockable,\n        state,\n        top,\n        initialized: true,\n        ...methods\n      }}\n    >\n      <Component {...props} />\n    </ModalContext.Provider>\n  )\n);\n\nconst RenderModals = ({ modals }: { modals: ModalObject[] }) => {\n  const { open, minimized, alerts } = modals.reduce<{\n    open: ModalObject[];\n    minimized: ModalObject[];\n    alerts: ModalObject[];\n  }>(\n    (obj, modal) => {\n      if (modal.options.alert) obj.alerts.push(modal);\n      else if (modal.state === 'minimized' || modal.state === 'docked') {\n        obj.minimized.push(modal);\n      } else obj.open.push(modal);\n\n      return obj;\n    },\n    { open: [], minimized: [], alerts: [] }\n  );\n\n  return (\n    <>\n      {open.map((modal, i) => (\n        <WrappedModal\n          {...modal}\n          top={alerts.length === 0 && i === open.length - 1}\n          key={modal.id}\n        />\n      ))}\n      {minimized.length > 0 && (\n        <DockedModals>\n          {minimized.map(modal => (\n            <WrappedModal {...modal} top={false} key={modal.id} />\n          ))}\n        </DockedModals>\n      )}\n      {alerts.map((modal, i) => (\n        <WrappedModal {...modal} top={i === open.length - 1} key={modal.id} />\n      ))}\n    </>\n  );\n};\n\nconst ModalManager: FunctionComponent<ModalManagerProps> = ({ children }) => {\n  const [modals, dispatch] = useReducer(reducer, []);\n  const { disableScroll, enableScroll } = useScrollToggle();\n\n  const providerValue = useMemo(\n    () => ({\n      create: <P extends object>(\n        Component: ComponentType<P>,\n        props?: P,\n        options?: ModalOptions\n      ) => {\n        const id = options?.id || createUID();\n        const initiatorRef = document.activeElement ? new WeakRef(document.activeElement) : null;\n\n        const methods: ModalMethods<P> = {\n          dismiss: () => {\n            dispatch({ action: 'dismiss', modal: { id } });\n            options?.onDismiss?.(id);\n            // cSpell:words deref\n            const initiator = initiatorRef?.deref();\n            if (\n              initiator?.isConnected &&\n              (initiator instanceof HTMLElement || initiator instanceof SVGElement)\n            ) {\n              initiator.focus();\n            }\n          },\n          update: updateProps => {\n            (dispatch as Dispatch<ModalReducerPayload<P>>)({\n              action: 'update',\n              modal: { id, props: updateProps }\n            });\n          },\n          minimize: () => {\n            dispatch({ action: 'minimize', modal: { id } });\n            options?.onMinimize?.(id);\n          },\n          maximize: () => {\n            dispatch({ action: 'maximize', modal: { id } });\n            options?.onMaximize?.(id);\n          },\n          dock: () => {\n            dispatch({ action: 'dock', modal: { id } });\n            options?.onDock?.(id);\n          },\n          activate: () => {\n            dispatch({ action: 'activate', modal: { id } });\n            options?.onActivate?.(id);\n          },\n          unmount: () => {\n            dispatch({ action: 'unmount', modal: { id } });\n          }\n        };\n\n        let defaultState: ModalState;\n        if (options?.defaultMinimized) {\n          defaultState = 'minimized';\n        } else if (options?.dockable) {\n          defaultState = 'docked';\n        } else {\n          defaultState = 'open';\n        }\n\n        (dispatch as Dispatch<ModalReducerPayload<P>>)({\n          action: 'create',\n          modal: {\n            id,\n            methods,\n            Component,\n            props,\n            state: defaultState,\n            options: {\n              alert: false,\n              minimizable: false,\n              maximizable: false,\n              dockable: false,\n              defaultMinimized: false,\n              unmountWhenMinimized: true,\n              ...options,\n              dismissible: !!(options?.alert ? false : options?.dismissible ?? true)\n            }\n          }\n        });\n\n        return methods;\n      },\n      ModalContext,\n      initialized: true\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (modals.some(modal => modal.state === 'open' && !modal.options.dockable)) {\n      disableScroll();\n    } else {\n      enableScroll();\n    }\n  }, [modals]);\n\n  const { portalTarget } = useConfiguration();\n\n  const context = windowIsAvailable\n    ? window.cosmos.modalManagerContext ?? ModalManagerContext\n    : ModalManagerContext;\n  const priorCtx = useContext(context);\n\n  // Don't create additional Modal portals.\n  if (priorCtx.initialized) return <context.Provider value={priorCtx}>{children}</context.Provider>;\n\n  return (\n    <context.Provider value={providerValue}>\n      {children}\n      {modals.length > 0 &&\n        portalTarget &&\n        createPortal(<RenderModals modals={modals} />, portalTarget)}\n    </context.Provider>\n  );\n};\n\nexport default ModalManager;\n"]}