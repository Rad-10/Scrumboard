{"version":3,"file":"Tabs.types.js","sourceRoot":"","sources":["../../../src/components/Tabs/Tabs.types.ts"],"names":[],"mappings":"","sourcesContent":["import { MouseEvent } from 'react';\n\nimport type { BaseProps, NoChildrenProp } from '../../types';\n\nexport interface Tab {\n  /** The name that will be displayed on the Tab. */\n  name: string;\n  /** The id that is referenced when a Tab is activated. */\n  id: string;\n  /** A link to navigate to when the Tab is clicked. */\n  href?: string;\n  /** If a count is provided, the Count Badge will be rendered alongside the Tab name. */\n  count?: number;\n  /** Disables the tab if true */\n  disabled?: boolean;\n}\n\nexport interface TabsProps extends BaseProps, NoChildrenProp {\n  /** An array of Tab data used to render the individual tabs.\n   * @default []\n   */\n  tabs: Tab[];\n  /** The type handles what direction the tabs will be rendered in.\n   * @default \"horizontal\"\n   */\n  type?: 'horizontal' | 'vertical';\n  /** Handles the color scheme of the tabs, the inverted type is for tabs on a dark background.\n   * @default false\n   * @deprecated\n   */\n  inverted?: boolean;\n  /** The currentTabId tells the tab list which Tab should be active. */\n  currentTabId: string;\n  /** The onTabClick will take a callback function that is called every time a new tab is clicked and returns an id as well as the click event. */\n  onTabClick?: (id: string, event?: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => void;\n}\n"]}