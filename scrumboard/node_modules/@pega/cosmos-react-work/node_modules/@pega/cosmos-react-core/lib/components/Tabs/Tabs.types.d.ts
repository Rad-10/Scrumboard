import { MouseEvent } from 'react';
import type { BaseProps, NoChildrenProp } from '../../types';
export interface Tab {
    /** The name that will be displayed on the Tab. */
    name: string;
    /** The id that is referenced when a Tab is activated. */
    id: string;
    /** A link to navigate to when the Tab is clicked. */
    href?: string;
    /** If a count is provided, the Count Badge will be rendered alongside the Tab name. */
    count?: number;
    /** Disables the tab if true */
    disabled?: boolean;
}
export interface TabsProps extends BaseProps, NoChildrenProp {
    /** An array of Tab data used to render the individual tabs.
     * @default []
     */
    tabs: Tab[];
    /** The type handles what direction the tabs will be rendered in.
     * @default "horizontal"
     */
    type?: 'horizontal' | 'vertical';
    /** Handles the color scheme of the tabs, the inverted type is for tabs on a dark background.
     * @default false
     * @deprecated
     */
    inverted?: boolean;
    /** The currentTabId tells the tab list which Tab should be active. */
    currentTabId: string;
    /** The onTabClick will take a callback function that is called every time a new tab is clicked and returns an id as well as the click event. */
    onTabClick?: (id: string, event?: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) => void;
}
//# sourceMappingURL=Tabs.types.d.ts.map