{"version":3,"file":"useAfterInitialEffect.js","sourceRoot":"","sources":["../../src/hooks/useAfterInitialEffect.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAkC,MAAM,OAAO,CAAC;AAE1E;;;;GAIG;AACH,MAAM,qBAAqB,GAAG,CAAC,EAAkB,EAAE,YAA4B,EAAE,EAAE;IACjF,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAE1B,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,GAAG,CAAC,OAAO;YAAE,OAAO,EAAE,EAAE,CAAC;QAC7B,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;IACrB,CAAC,EAAE,YAAY,CAAC,CAAC;AACnB,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import { useEffect, useRef, EffectCallback, DependencyList } from 'react';\n\n/**\n * @example useAfterInitialEffect(cb, dependencies);\n * @param cb The function that should be executed whenever this hook is called. [React EffectCallback](https://reactjs.org/docs/hooks-reference.html#useeffect)\n * @param dependencies A list of variables or functions that will initiate this hook when they are updated.\n */\nconst useAfterInitialEffect = (cb: EffectCallback, dependencies: DependencyList) => {\n  const ref = useRef(false);\n\n  useEffect(() => {\n    if (ref.current) return cb();\n    ref.current = true;\n  }, dependencies);\n};\n\nexport default useAfterInitialEffect;\n"]}