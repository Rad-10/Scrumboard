{"version":3,"file":"StandardTree.types.js","sourceRoot":"","sources":["../../../src/components/Tree/StandardTree.types.ts"],"names":[],"mappings":"","sourcesContent":["import type { MouseEvent, KeyboardEvent } from 'react';\n\nimport type { Action, PropsWithDefaults } from '../../types';\n\nimport type { TreeProps, TreeNode } from './Tree';\n\nexport interface StandardTreeNode extends TreeNode {\n  nodes?: StandardTreeNode[];\n  label: string;\n  icon?: string;\n  expanded?: boolean;\n  loading?: boolean;\n  actions?: Action[];\n  onClick?: (id: TreeNode['id'], e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void;\n}\n\nexport interface StandardTreeProps extends TreeProps<StandardTreeNode> {\n  currentNodeId?: TreeNode['id'];\n  lined?: boolean;\n  onNodeClick?: (\n    id: TreeNode['id'],\n    e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  ) => void;\n  onNodeToggle?: (\n    id: TreeNode['id'],\n    e?: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>\n  ) => void;\n}\n\nexport interface StandardTreeContextProps extends StandardTreeProps {\n  firstNodeId?: TreeNode['id'];\n  lastNodeId?: TreeNode['id'];\n  focusedNodeId?: TreeNode['id'];\n  changeFocusedNodeId: (id: TreeNode['id'], type?: 'up' | 'down' | 'left' | 'right') => void;\n}\n\nexport type StandardTreePropsWithDefaults = PropsWithDefaults<StandardTreeContextProps, 'lined'>;\n"]}