{"version":3,"file":"Lightbox.types.js","sourceRoot":"","sources":["../../../src/components/Lightbox/Lightbox.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ReactNode, SyntheticEvent } from 'react';\n\nimport { NoChildrenProp, BaseProps } from '../../types';\nimport { BackdropProps } from '../Backdrop/Backdrop';\nimport { ImageProps } from '../Image';\n\nexport interface LightboxProps extends NoChildrenProp, BaseProps {\n  /** A list of compatible content to present in the lightbox. */\n  items: LightboxItem[];\n  /**\n   * The index of the item to present on mount.\n   * @default 0\n   * */\n  defaultIndex?: number;\n  /** Allow cycling through the items in either direction. */\n  cycle?: true;\n  /** Called when an item's file is loaded. */\n  onItemLoad?: (id: LightboxItem['id'], e: SyntheticEvent<HTMLImageElement>) => void;\n  /** Called when an item's file encounters an error while loading. */\n  onItemError?: (id: LightboxItem['id'], e: SyntheticEvent<HTMLImageElement>) => void;\n  /** Called when the user navigates between items. */\n  onNavigate?: (id: LightboxItem['id']) => void;\n  /** Called when a download action is triggered for an item's file. */\n  onItemDownload?: (id: LightboxItem['id']) => void;\n  /** Called after the lightbox has transitioned out. */\n  onAfterClose?: BackdropProps['onAfterTransitionOut'];\n  /** A ref to the underlying root element of the lightbox. */\n  ref?: BackdropProps['ref'];\n}\n\nexport interface LightboxItem {\n  /** A unique identifier for the item. */\n  id: string;\n  /** The item's name e.g. filename. */\n  name: string;\n  /** Text to describe the item. */\n  description: ImageProps['alt'];\n  /** URL for the item's binary file. */\n  src: string;\n  /** Additional info about the item. */\n  metadata?: ReactNode[];\n  /** A ref to the item's underlying element. */\n  ref?: ImageProps['ref'];\n}\n"]}