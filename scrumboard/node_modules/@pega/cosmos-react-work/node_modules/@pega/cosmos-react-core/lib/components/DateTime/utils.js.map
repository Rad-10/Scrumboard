{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/components/DateTime/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { TranslationFunction, TranslationPack } from '../../i18n';\nimport { cap } from '../../utils';\n\nimport { AbsoluteVariant, DateTimeFormat, DateTimeVariant } from './DateTime.types';\nimport {\n  ClockFormat,\n  getEndOfWeek,\n  getQuarter,\n  getStartOfWeek,\n  getWeek,\n  getWeekYear\n} from './Input/utils';\n\nconst unitsInMs = {\n  year: 24 * 60 * 60 * 1000 * 365,\n  month: (24 * 60 * 60 * 1000 * 365) / 12,\n  day: 24 * 60 * 60 * 1000,\n  hour: 60 * 60 * 1000,\n  minute: 60 * 1000,\n  second: 1000\n} as const;\n\ntype TimeUnit = keyof typeof unitsInMs;\n\ninterface TimeShort {\n  hour: 'numeric';\n  minute: 'numeric';\n  hour12: boolean | undefined;\n}\ninterface TimeLong extends TimeShort {\n  second: 'numeric';\n}\n\ninterface DateTimeFormatOptions {\n  t: TranslationFunction<TranslationPack>;\n  locale: string;\n  format: DateTimeFormat;\n  variant: DateTimeVariant;\n  timeZone?: string;\n  clockFormat?: ClockFormat;\n}\n\nexport function formatDateTime(\n  value: Date,\n  { t, locale, format, variant, clockFormat, timeZone }: DateTimeFormatOptions\n) {\n  const timeShort: TimeShort = {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: clockFormat ? clockFormat === 12 : undefined\n  };\n\n  const timeLong: TimeLong = {\n    ...timeShort,\n    second: 'numeric'\n  };\n\n  const formatMapping = {\n    date: {\n      short: { year: 'numeric', month: 'short', day: 'numeric' } as const,\n      long: { year: 'numeric', month: 'long', day: 'numeric' } as const,\n      numeric: { year: 'numeric', month: 'numeric', day: 'numeric' } as const\n    },\n    datetime: {\n      short: { year: 'numeric', month: 'short', day: 'numeric', ...timeShort } as const,\n      long: { year: 'numeric', month: 'long', day: 'numeric', ...timeLong } as const,\n      numeric: { year: 'numeric', month: 'numeric', day: 'numeric', ...timeShort } as const\n    },\n    time: {\n      short: timeShort,\n      long: timeLong,\n      numeric: timeShort\n    },\n    month: {\n      short: { month: 'short' } as const,\n      long: { month: 'long' } as const,\n      numeric: { month: 'numeric' } as const\n    },\n    year: {\n      short: { year: 'numeric' } as const,\n      long: { year: 'numeric' } as const,\n      numeric: { year: '2-digit' } as const\n    },\n    monthyear: {\n      short: { year: 'numeric', month: 'short' } as const,\n      long: { year: 'numeric', month: 'long' } as const,\n      numeric: { year: 'numeric', month: 'numeric' } as const\n    },\n    week: {\n      short: { month: 'short', day: 'numeric' } as const,\n      long: { month: 'long', day: 'numeric' } as const,\n      numeric: { month: 'numeric', day: 'numeric' } as const\n    },\n    relative: {\n      short: { style: 'long', numeric: 'auto' } as const,\n      long: { style: 'long', numeric: 'auto' } as const,\n      numeric: { style: 'short', numeric: 'auto' } as const\n    }\n  };\n\n  const getFormattedDate = (date: Date, dateVariant: Exclude<AbsoluteVariant, 'quarteryear'>) => {\n    return new Intl.DateTimeFormat(locale, {\n      ...formatMapping[dateVariant][format],\n      timeZone\n    }).format(date);\n  };\n\n  const relativeTimeFormatter = (relativeValue: number, unit: TimeUnit) => {\n    return new Intl.RelativeTimeFormat(locale, formatMapping.relative[format]).format(\n      relativeValue,\n      unit\n    );\n  };\n\n  const getRelativeTime = (date: Date) => {\n    let elapsed = date.getTime() - Date.now();\n    // Deliberately reduce precision to 1 minute\n    if (Math.abs(elapsed) < 60000) elapsed = 0;\n    const unit = (Object.keys(unitsInMs).find(u => Math.abs(elapsed) >= unitsInMs[u as TimeUnit]) ||\n      'second') as TimeUnit;\n    return relativeTimeFormatter(Math.round(elapsed / unitsInMs[unit]), unit);\n  };\n\n  const getFormattedWeek = (date: Date) => {\n    const displayNames = new Intl.DisplayNames(locale, {\n      style: 'long',\n      type: 'dateTimeField'\n    }) as Intl.DateTimeDisplayNames;\n    const startDate = getFormattedDate(getStartOfWeek(date), 'week');\n    const endDate = getFormattedDate(getEndOfWeek(date), 'week');\n    return `${cap(displayNames.of('weekOfYear'))} ${getWeek(date)}, ${getWeekYear(\n      date\n    )} (${startDate} - ${endDate})`;\n  };\n\n  const getFormattedQuarterYear = (date: Date) => {\n    const formattedYear = getFormattedDate(date, 'year');\n    const quarterNumber = getQuarter(date);\n    return `${t(`date_quarter_q${quarterNumber}`, [formattedYear])}`;\n  };\n\n  switch (variant) {\n    case 'relative':\n      return getRelativeTime(value);\n    case 'week':\n      return getFormattedWeek(value);\n    case 'quarteryear':\n      return getFormattedQuarterYear(value);\n    default:\n      return getFormattedDate(value, variant);\n  }\n}\n\nconst dayInMs = 24 * 60 * 60 * 1000;\nconst hourInMs = 60 * 60 * 1000;\nconst minuteInMs = 60 * 1000;\nconst secondInMs = 1000;\n\ninterface DurationFormatOptions {\n  locale: string;\n  significantUnits: 4 | 3 | 2 | 1;\n}\n\nexport function formatDuration(\n  valueInMs: number,\n  { locale, significantUnits }: DurationFormatOptions\n) {\n  const numberFormatterSeconds = new Intl.NumberFormat(locale, {\n    style: 'unit',\n    unit: 'second',\n    unitDisplay: 'narrow'\n  });\n  const sign = valueInMs < 0 ? '-' : '';\n  const absMs = Math.abs(valueInMs);\n  if (absMs < secondInMs) {\n    return numberFormatterSeconds.format(0);\n  }\n\n  const durationParts = [\n    { unit: 'day', value: Math.floor(absMs / dayInMs) },\n    { unit: 'hour', value: Math.floor((absMs % dayInMs) / hourInMs) },\n    { unit: 'minute', value: Math.floor((absMs % hourInMs) / minuteInMs) },\n    { unit: 'second', value: Math.floor((absMs % minuteInMs) / secondInMs) }\n  ];\n\n  const result = [];\n  for (let i = 0; result.length < significantUnits && i < durationParts.length; i += 1) {\n    if (durationParts[i].value > 0) {\n      result.push(\n        new Intl.NumberFormat(locale, {\n          style: 'unit',\n          unit: durationParts[i].unit,\n          unitDisplay: 'narrow'\n        }).format(durationParts[i].value)\n      );\n    }\n  }\n  return `${sign}${result.join(' ')}`;\n}\n"]}