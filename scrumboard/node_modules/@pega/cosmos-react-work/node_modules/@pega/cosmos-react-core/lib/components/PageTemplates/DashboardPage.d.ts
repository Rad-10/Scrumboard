import { FunctionComponent, ReactNode } from 'react';
import { ForwardProps } from '../../types';
import { PageTemplateProps, PageLayoutProps } from './PageTemplates';
export interface DashboardPageProps extends PageTemplateProps {
    a: ReactNode;
    b: ReactNode;
    c: ReactNode;
    filters?: ReactNode[];
    fitToViewport?: boolean;
}
export interface DashboardPageLayoutProps extends PageLayoutProps {
    filters?: ReactNode[];
    filterPosition?: 'block-start' | 'inline-start' | 'inline-end';
    fitToViewport?: boolean;
    regionFullWidth: ReactNode[];
}
export declare const StyledFilterRegion: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledDashboardRegion: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledDashboardPageLayout: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
    scrollContent: boolean | undefined;
    minContentHeight?: number | undefined;
} & Pick<DashboardPageProps, "fitToViewport">, never>;
declare const DashboardPage: FunctionComponent<DashboardPageProps & ForwardProps>;
export default DashboardPage;
//# sourceMappingURL=DashboardPage.d.ts.map