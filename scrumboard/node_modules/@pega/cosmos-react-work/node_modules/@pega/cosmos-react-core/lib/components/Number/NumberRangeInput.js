import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef, useCallback } from 'react';
import { useConsolidatedRef, useI18n, useFocusWithin } from '../../hooks';
import { StyledRangeInputContainer } from '../Input/Input.styles';
import FormField from '../FormField';
import Flex from '../Flex';
import NumberInput from './NumberInput';
const NumberRangeInput = forwardRef(({ value = {}, onChange, onBlur, onFocus, label, fromLabel, toLabel, labelHidden, placeholder, disabled, readOnly, required, unit, showDecimal, numberOfDecimals, showGroupSeparators, min, max, step, variant, fromAdditionalInfo, toAdditionalInfo, autoFocus, ...restProps }, ref) => {
    const t = useI18n();
    const onFocusChange = useCallback((focused) => {
        (focused ? onFocus : onBlur)?.({ start: value.start ?? '', end: value.end ?? '' });
    }, [onBlur, value.start, value.end]);
    const containerRef = useConsolidatedRef(ref);
    useFocusWithin([containerRef], onFocusChange);
    const commonProps = {
        placeholder,
        readOnly,
        required,
        unit,
        showDecimal,
        numberOfDecimals,
        showGroupSeparators,
        min,
        max,
        variant
    };
    return (_jsx(FormField, { as: 'fieldset', ...restProps, ref: containerRef, container: { wrap: 'nowrap' }, labelHidden: labelHidden, labelAs: 'legend', label: label, disabled: disabled, required: required, readOnly: readOnly, children: _jsxs(Flex, { container: true, as: StyledRangeInputContainer, children: [_jsx(NumberInput, { ...commonProps, value: value.start, onChange: fromValue => onChange({ start: fromValue, end: value.end ?? '' }), label: fromLabel, "aria-label": `${t('range_from_numeric') + (label ? ` - ${label}` : '')}`, additionalInfo: fromAdditionalInfo, autoFocus: autoFocus }), _jsx(NumberInput, { ...commonProps, value: value.end, onChange: toValue => onChange({ start: value.start ?? '', end: toValue }), label: toLabel, "aria-label": `${t('range_to_numeric') + (label ? ` - ${label}` : '')}`, additionalInfo: toAdditionalInfo })] }) }));
});
export default NumberRangeInput;
//# sourceMappingURL=NumberRangeInput.js.map