{"version":3,"file":"useDirection.js","sourceRoot":"","sources":["../../src/hooks/useDirection.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEhC,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AASlD,MAAM,YAAY,GAAG,GAAkC,EAAE;IACvD,MAAM,EAAE,SAAS,EAAE,GAAG,gBAAgB,EAAE,CAAC;IACzC,OAAO,OAAO,CAAsB,GAAG,EAAE;QACvC,OAAO,SAAS,KAAK,KAAK;YACxB,CAAC,CAAC;gBACE,KAAK,EAAE,MAAM;gBACb,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,IAAI;gBACT,GAAG,EAAE,KAAK;aACX;YACH,CAAC,CAAC;gBACE,KAAK,EAAE,OAAO;gBACd,GAAG,EAAE,MAAM;gBACX,GAAG,EAAE,KAAK;gBACV,GAAG,EAAE,IAAI;aACV,CAAC;IACR,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AAEF,eAAe,YAAY,CAAC","sourcesContent":["import { useMemo } from 'react';\n\nimport useConfiguration from './useConfiguration';\n\nexport interface DirectionProperties {\n  start: 'left' | 'right';\n  end: 'left' | 'right';\n  rtl: boolean;\n  ltr: boolean;\n}\n\nconst useDirection = (): Readonly<DirectionProperties> => {\n  const { direction } = useConfiguration();\n  return useMemo<DirectionProperties>(() => {\n    return direction === 'ltr'\n      ? {\n          start: 'left',\n          end: 'right',\n          ltr: true,\n          rtl: false\n        }\n      : {\n          start: 'right',\n          end: 'left',\n          ltr: false,\n          rtl: true\n        };\n  }, [direction]);\n};\n\nexport default useDirection;\n"]}