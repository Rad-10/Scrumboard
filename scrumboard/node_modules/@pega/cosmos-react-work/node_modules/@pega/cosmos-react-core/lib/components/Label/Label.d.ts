import { FunctionComponent, ReactNode, Ref } from 'react';
import { BaseProps, ForwardProps } from '../../types';
export interface LabelProps extends BaseProps {
    /**
     * Id for the label.
     * @default undefined
     */
    id?: string;
    /**
     * HTML tag to render the label as.
     * @default "label"
     */
    as?: 'label' | 'legend' | 'div' | 'span';
    /** Use to associate with a form-element's id. */
    htmlFor?: string;
    /**
     * Visually hides the label.
     * @default false
     */
    labelHidden?: boolean;
    /** Content/text for the label. */
    children: ReactNode;
    /** Ref for the wrapping element. */
    ref?: Ref<HTMLLabelElement | HTMLLegendElement | HTMLDivElement | HTMLSpanElement>;
}
export declare const StyledLabel: import("styled-components").StyledComponent<"label", import("styled-components").DefaultTheme, Pick<LabelProps, "htmlFor" | "labelHidden">, never>;
declare const Label: FunctionComponent<LabelProps & ForwardProps>;
export default Label;
//# sourceMappingURL=Label.d.ts.map