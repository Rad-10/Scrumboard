import { FC, MouseEvent, KeyboardEvent } from 'react';
import { ForwardProps } from '../../types';
export interface SelectableProps {
    /** An id that is used by the onSelect and onRemove functions if they are provided. */
    id: string;
    /** The content of the Badge. */
    children: string;
    /** Takes an ID that represents the Badge. This function is called when the Badge is clicked. */
    onSelect?: (id: string) => void;
    /** Takes an ID that represents the Badge. This function is called when the Badge is closed by clicking the X. */
    onRemove?: (id: string) => void;
    /** Event handler called when the Badge is clicked. */
    onClick?: (event: MouseEvent) => void;
    /** Event handler fired on every keyup event. */
    onKeyUp?: (event: KeyboardEvent) => void;
}
export declare const StyledSelectable: import("styled-components").StyledComponent<"button", import("styled-components").DefaultTheme, {}, never>;
declare const Selectable: FC<SelectableProps & ForwardProps>;
export default Selectable;
//# sourceMappingURL=Selection.d.ts.map