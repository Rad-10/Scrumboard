{"version":3,"file":"ComboBoxInput.js","sourceRoot":"","sources":["../../../src/components/ComboBox/ComboBoxInput.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAA2C,MAAM,OAAO,CAAC;AAK5E,OAAO,iBAAiB,MAAM,uCAAuC,CAAC;AACtE,OAAO,gBAAgB,MAAM,qCAAqC,CAAC;AAkBnE,MAAM,aAAa,GAAyD,UAAU,CACpF,CAAC,KAA0C,EAAE,GAA0B,EAAE,EAAE;IACzE,MAAM,EACJ,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,eAAe,EACf,cAAc,EACd,yBAAyB,EACzB,GAAG,SAAS,EACb,GAAG,KAAK,CAAC;IAEV,OAAO,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC,CAC/B,KAAC,gBAAgB,IACf,QAAQ,EAAE,QAAsB,EAChC,KAAK,EAAE,KAAK,KACR;YACF,GAAG;YACH,QAAQ;YACR,cAAc;YACd,eAAe;YACf,yBAAyB;SAC1B,KACG,SAAS,GACb,CACH,CAAC,CAAC,CAAC,CACF,KAAC,iBAAiB,IAChB,GAAG,EAAE,GAAG,EACR,QAAQ,EAAE,QAAoB,EAC9B,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,KACV,SAAS,GACb,CACH,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import { forwardRef, FunctionComponent, Ref, PropsWithoutRef } from 'react';\n\nimport { BaseProps, ForwardProps } from '../../types';\nimport { MenuItemProps } from '../Menu/Menu.types';\n\nimport SingleSelectInput from './SingleSelectInput/SingleSelectInput';\nimport MultiSelectInput from './MultiSelectInput/MultiSelectInput';\nimport type { MultiSelectInputProps } from './MultiSelectInput/MultiSelectInput.types';\nimport ComboBoxProps, { Selected } from './ComboBox.types';\n\ninterface ComboBoxInputProps extends BaseProps {\n  mode?: 'multi-select' | 'single-select';\n  selected?: Selected | Selected[];\n  value?: ComboBoxProps['value'];\n  visual?: ComboBoxProps['visual'];\n  onRemove?: (id: MenuItemProps['id'], index: number) => void;\n  /** Callback on selected item pseudo focus */\n  onSelectedFocus?: MultiSelectInputProps['onSelectedFocus'];\n  /** Callback on selected item pseudo blur */\n  onSelectedBlur?: MultiSelectInputProps['onSelectedBlur'];\n  /** Pause evaluation of selected item descendants */\n  pauseDescendantEvaluation?: MultiSelectInputProps['pauseDescendantEvaluation'];\n}\n\nconst ComboBoxInput: FunctionComponent<ComboBoxInputProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<ComboBoxInputProps>, ref: Ref<HTMLInputElement>) => {\n    const {\n      value,\n      mode,\n      selected,\n      visual,\n      onRemove,\n      onSelectedFocus,\n      onSelectedBlur,\n      pauseDescendantEvaluation,\n      ...restProps\n    } = props;\n\n    return mode === 'multi-select' ? (\n      <MultiSelectInput\n        selected={selected as Selected[]}\n        value={value}\n        {...{\n          ref,\n          onRemove,\n          onSelectedBlur,\n          onSelectedFocus,\n          pauseDescendantEvaluation\n        }}\n        {...restProps}\n      />\n    ) : (\n      <SingleSelectInput\n        ref={ref}\n        selected={selected as Selected}\n        value={value}\n        visual={visual}\n        {...restProps}\n      />\n    );\n  }\n);\n\nexport default ComboBoxInput;\n"]}