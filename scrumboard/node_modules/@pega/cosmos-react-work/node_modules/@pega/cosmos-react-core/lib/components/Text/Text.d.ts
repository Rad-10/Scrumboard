import { FunctionComponent, ReactNode, Ref } from 'react';
import { BaseProps, ForwardProps, AsProp } from '../../types';
export interface TextProps extends BaseProps, AsProp {
    /** Text content. */
    children: ReactNode;
    /**
     * Typographical sizes and styles.
     * @default "primary"
     */
    variant?: 'primary' | 'secondary' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
    /**
     * Render text with semantic color based on a status.
     */
    status?: 'error' | 'warning' | 'success';
    /** Ref for the wrapping element. */
    ref?: Ref<HTMLSpanElement | HTMLHeadingElement>;
}
export declare const StyledText: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, import("../../types").OmitStrict<TextProps, "variant"> & Required<Pick<TextProps, "variant">>, never>;
declare const Text: FunctionComponent<TextProps & ForwardProps>;
export default Text;
//# sourceMappingURL=Text.d.ts.map