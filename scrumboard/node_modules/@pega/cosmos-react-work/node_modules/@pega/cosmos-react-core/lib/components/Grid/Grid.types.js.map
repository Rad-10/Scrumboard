{"version":3,"file":"Grid.types.js","sourceRoot":"","sources":["../../../src/components/Grid/Grid.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ReactNode, Ref } from 'react';\n\nimport { BaseProps, AsProp, RequireAtLeastOne } from '../../types';\n\nexport interface GridContainerProps {\n  /**\n   * Display the grid as an inline-grid.\n   * @default false\n   */\n  inline?: boolean;\n  /** Padding on the container represented as a multiplier or set of multipliers to the base spacing value in the theme. */\n  pad?:\n    | number\n    | [topRightBottomLeft: number]\n    | [topBottom: number, rightLeft: number]\n    | [top: number, rightLeft: number, bottom: number]\n    | [top: number, right: number, bottom: number, left: number];\n  /** [grid-template-columns](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-template-columns-rows) */\n  cols?: string;\n  /** [grid-auto-columns](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-auto-columns-rows) */\n  autoCols?: string;\n  /** [grid-template-rows](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-template-columns-rows) */\n  rows?: string;\n  /** [grid-auto-rows](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-auto-columns-rows) */\n  autoRows?: string;\n  /** [grid-auto-flow](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-auto-flow) */\n  autoFlow?: 'row' | 'column' | 'row dense' | 'column dense';\n  /** [grid-template-area](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-template-areas) */\n  areas?: string;\n  /** [grid-template](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-template) */\n  template?: string;\n  /**\n   * Defines how much equal space to place between columns represented as a multiplier to the base spacing value in the theme.\n   * [column-gap](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row-gap)\n   */\n  colGap?: number;\n  /**\n   * Defines how much equal space to place between rows represented as a multiplier to the base spacing value in the theme.\n   * [row-gap](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row-gap)\n   */\n  rowGap?: number;\n  /**\n   * Defines how much equal space to place between both rows and columns represented as a multiplier to the base spacing value in the theme.\n   * [gap](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-gap)\n   */\n  gap?: number;\n  /**\n   * [justify-items](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-items)\n   * @default \"stretch\"\n   */\n  justifyItems?: 'start' | 'end' | 'center' | 'stretch';\n  /**\n   * [justify-content](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-content)\n   * @default \"start\"\n   */\n  justifyContent?: 'start' | 'end' | 'center' | 'stretch' | 'around' | 'between' | 'evenly';\n  /**\n   * [align-items](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-items)\n   * @default \"stretch\"\n   */\n  alignItems?: 'stretch' | 'start' | 'end' | 'center';\n  /**\n   * [align-content](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-content)\n   * @default \"start\"\n   */\n  alignContent?: 'start' | 'end' | 'center' | 'stretch' | 'around' | 'between' | 'evenly';\n}\n\nexport interface GridItemProps {\n  /** [grid-column-start](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row-start-end) */\n  colStart?: string;\n  /** [grid-column-end](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row-start-end) */\n  colEnd?: string;\n  /** [grid-column](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row) */\n  colStartEnd?: string;\n  /** [grid-row-start](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row-start-end) */\n  rowStart?: string;\n  /** [grid-row-end](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row-start-end) */\n  rowEnd?: string;\n  /** [grid-row](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-column-row) */\n  rowStartEnd?: string;\n  /** [grid-area](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-area) */\n  area?: string;\n  /**\n   * [justify-self](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self)\n   * @default \"stretch\"\n   */\n  justifySelf?: 'start' | 'end' | 'center' | 'stretch';\n  /**\n   * [align-self](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self)\n   * @default \"stretch\"\n   */\n  alignSelf?: 'stretch' | 'start' | 'end' | 'center';\n}\n\nexport interface BaseGridProps {\n  /** Creates a [grid container.](https://css-tricks.com/snippets/css/complete-guide-grid/#prop-display) */\n  container?: GridContainerProps | true;\n  /** Designate as a Grid item to leverage grid item props. */\n  item?: GridItemProps;\n}\n\ntype BreakpointGridProps = RequireAtLeastOne<BaseGridProps, 'container' | 'item'>;\n\ntype GridProps = RequireAtLeastOne<\n  BaseGridProps &\n    BaseProps &\n    AsProp & {\n      /** Any ReactNode to use as grid items. To leverage item based props, use Grid with \"item\" prop. */\n      children?: ReactNode;\n      /** Ref for the grid element. */\n      ref?: Ref<Element>;\n      /** Override props for the grid at extra small screen size. */\n      xs?: BreakpointGridProps;\n      /** Override props for the grid at small screen size. */\n      sm?: BreakpointGridProps;\n      /** Override props for the grid at medium screen size. */\n      md?: BreakpointGridProps;\n      /** Override props for the grid at large screen size. */\n      lg?: BreakpointGridProps;\n      /** Override props for the grid at extra large screen size. */\n      xl?: BreakpointGridProps;\n    },\n  'container' | 'item' | 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n>;\n\nexport default GridProps;\n"]}