{"version":3,"file":"TimeRangeInput.js","sourceRoot":"","sources":["../../../../src/components/DateTime/Input/TimeRangeInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { forwardRef, FunctionComponent, Ref, useCallback, useRef } from 'react';\n\nimport Flex from '../../Flex';\nimport { FormControlProps } from '../../FormControl';\nimport { useConsolidatedRef, useFocusWithin, useI18n } from '../../../hooks';\nimport DateTimeProps, {\n  DateRangeCallbackParameter,\n  DateTimeCallbackParameter,\n  DateTimeProperties\n} from '../DateTime.types';\nimport { ForwardProps } from '../../../types';\nimport { StyledRangeInputContainer } from '../../Input/Input.styles';\nimport { MinuteInterval } from '../Picker/TimePicker';\nimport FormField from '../../FormField';\n\nimport { ClockFormat, parseToDate } from './utils';\nimport TimeInput from './TimeInput';\nimport DateTimeInput from './DateTimeInput';\n\nexport interface TimeRangeInputProps extends DateTimeProperties {\n  /** Object of range boundaries. */\n  value?: { start?: DateTimeProps['value']; end?: DateTimeProps['value'] };\n  /** Callback fired when inputs value changes. */\n  onChange: (value: DateRangeCallbackParameter) => void;\n  /** Callback fired when the component gets focused. */\n  onFocus?: (value: DateRangeCallbackParameter) => void;\n  /** Callback fired when the component loses focus. */\n  onBlur?: (value: DateRangeCallbackParameter) => void;\n  /** Pass a string or a fragment with an Icon and string for first part of TimeRangeInput. */\n  fromLabel?: FormControlProps['label'];\n  /** Pass a string or a fragment with an Icon and string for second part of TimeRangeInput. */\n  toLabel?: FormControlProps['label'];\n  /** Pass an object with \"heading\" and \"content\" properties to show AdditionalInfo for second part of DataRangeInput. */\n  toAdditionalInfo?: FormControlProps['additionalInfo'];\n  /** Pass an object with \"heading\" and \"content\" properties to show AdditionalInfo for first part of DataRangeInput. */\n  fromAdditionalInfo?: FormControlProps['additionalInfo'];\n  /** Controls which input is displayed */\n  mode: 'time' | 'datetime';\n  /**\n   * Display the time with seconds.\n   * @default false\n   */\n  withSeconds?: boolean;\n  /**\n   * Defines interval for time picker options (in minutes).\n   * @default 30\n   */\n  pickerInterval?: MinuteInterval;\n  /**\n   * Defines clock format that overrides locale based format\n   */\n  clockFormat?: ClockFormat;\n}\n\nconst convertToCallbackParameter = (v?: number): DateTimeCallbackParameter => {\n  return {\n    valueAsISOString: v === undefined || Number.isNaN(v) ? '' : new Date(v).toISOString(),\n    valueAsTimestamp: v\n  };\n};\n\nconst TimeRangeInput: FunctionComponent<TimeRangeInputProps & ForwardProps> = forwardRef(\n  (\n    {\n      value = {},\n      onChange,\n      onFocus,\n      onBlur,\n      label,\n      fromLabel,\n      toLabel,\n      labelHidden,\n      required,\n      readOnly,\n      disabled,\n      min,\n      max,\n      withSeconds,\n      pickerInterval,\n      clockFormat,\n      mode,\n      status,\n      fromAdditionalInfo,\n      toAdditionalInfo,\n      autoFocus,\n      ...restProps\n    }: TimeRangeInputProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const t = useI18n();\n\n    const startDateRef = useRef(value.start ? parseToDate(value.start).getTime() : undefined);\n    const endDateRef = useRef(value.end ? parseToDate(value.end).getTime() : undefined);\n\n    const onFocusChange = useCallback(\n      (focused: boolean) => {\n        (focused ? onFocus : onBlur)?.({\n          start: convertToCallbackParameter(startDateRef.current),\n          end: convertToCallbackParameter(endDateRef.current)\n        });\n      },\n      [onFocus, onBlur]\n    );\n\n    const containerRef = useConsolidatedRef(ref);\n    useFocusWithin([containerRef], onFocusChange);\n\n    const commonProps = {\n      required,\n      readOnly,\n      disabled,\n      min,\n      max,\n      status,\n      withSeconds,\n      pickerInterval,\n      clockFormat\n    };\n\n    return (\n      <FormField\n        as='fieldset'\n        {...restProps}\n        container={{ wrap: 'nowrap' }}\n        ref={containerRef}\n        labelAs='legend'\n        label={label}\n        labelHidden={labelHidden}\n        disabled={disabled}\n        required={required}\n        readOnly={readOnly}\n        status={status}\n      >\n        <Flex container as={StyledRangeInputContainer}>\n          {mode === 'time' ? (\n            <>\n              <TimeInput\n                {...commonProps}\n                value={value.start}\n                onBlur={changedValue => {\n                  startDateRef.current = !changedValue.state\n                    ? changedValue.valueAsTimestamp\n                    : undefined;\n                  onChange({\n                    start: changedValue,\n                    end: convertToCallbackParameter(endDateRef.current)\n                  });\n                }}\n                label={fromLabel}\n                aria-label={`${t('range_from_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={fromAdditionalInfo}\n                autoFocus={autoFocus}\n              />\n              <TimeInput\n                {...commonProps}\n                value={value.end}\n                onBlur={changedValue => {\n                  endDateRef.current = !changedValue.state\n                    ? changedValue.valueAsTimestamp\n                    : undefined;\n                  onChange({\n                    start: convertToCallbackParameter(startDateRef.current),\n                    end: changedValue\n                  });\n                }}\n                label={toLabel}\n                aria-label={`${t('range_to_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={toAdditionalInfo}\n              />\n            </>\n          ) : (\n            <>\n              <DateTimeInput\n                {...commonProps}\n                value={value.start}\n                onBlur={changedValue => {\n                  startDateRef.current = !changedValue.state\n                    ? changedValue.valueAsTimestamp\n                    : undefined;\n                  onChange({\n                    start: changedValue,\n                    end: convertToCallbackParameter(endDateRef.current)\n                  });\n                }}\n                label={fromLabel}\n                aria-label={`${t('range_from_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={fromAdditionalInfo}\n              />\n              <DateTimeInput\n                {...commonProps}\n                value={value.end}\n                onBlur={changedValue => {\n                  endDateRef.current = !changedValue.state\n                    ? changedValue.valueAsTimestamp\n                    : undefined;\n                  onChange({\n                    start: convertToCallbackParameter(startDateRef.current),\n                    end: changedValue\n                  });\n                }}\n                label={toLabel}\n                aria-label={`${t('range_to_datetime') + (label ? ` - ${label}` : '')}`}\n                additionalInfo={toAdditionalInfo}\n              />\n            </>\n          )}\n        </Flex>\n      </FormField>\n    );\n  }\n);\nexport default TimeRangeInput;\n"]}