import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import Button from '../Button';
import Icon, { registerIcon } from '../Icon';
import * as plusIcon from '../Icon/icons/plus.icon';
import { useI18n } from '../../hooks';
import { defaultThemeProp } from '../../theme';
import FieldGroup, { StyledFieldGroup } from './FieldGroup';
registerIcon(plusIcon);
const StyledFieldGroupList = styled.div(({ theme }) => css `
      margin-block-start: ${theme.base.spacing};

      ${StyledFieldGroup} {
        margin-block-start: 0;
      }
    `);
StyledFieldGroupList.defaultProps = defaultThemeProp;
export const StyledListItem = styled(FieldGroup)(({ theme }) => css `
      padding: ${theme.base.spacing} 0 calc(2 * ${theme.base.spacing});
      border-bottom: 0.0625rem solid ${theme.base.palette['border-line']};
      margin-block-end: calc(2 * ${theme.base.spacing});

      legend {
        margin-block-end: 0;
      }
    `);
StyledListItem.defaultProps = defaultThemeProp;
const StyledAddButton = styled(Button)(({ theme }) => css `
      margin-top: ${theme.base.spacing};
    `);
StyledAddButton.defaultProps = defaultThemeProp;
const FieldGroupList = forwardRef(({ items, onAdd, onDelete, ...restProps }, ref) => {
    const t = useI18n();
    return (_jsxs(StyledFieldGroupList, { ref: ref, ...restProps, children: [items.map(({ id, children, name, onDelete: itemOnDelete, ...restItemProps }) => {
                return (_jsx(StyledListItem, { name: name, ...restItemProps, actions: onDelete || itemOnDelete
                        ? [
                            {
                                id: 'delete',
                                text: t('delete'),
                                icon: 'trash',
                                iconOnly: true,
                                onClick: () => {
                                    itemOnDelete?.(id);
                                    onDelete?.(id);
                                }
                            }
                        ]
                        : undefined, children: children }, id));
            }), onAdd && (_jsxs(StyledAddButton, { variant: 'link', onClick: onAdd, children: [_jsx(Icon, { name: 'plus' }), " ", t('add')] }))] }));
});
export default FieldGroupList;
//# sourceMappingURL=FieldGroupList.js.map