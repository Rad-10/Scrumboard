import { jsx as _jsx } from "react/jsx-runtime";
import { forwardRef } from 'react';
import { useI18n } from '../../../../hooks';
import FormField from '../../../FormField';
import Time from './Time';
import NumberUnit from './NumberUnit';
import { Format } from './DurationInput.types';
const DurationInput = forwardRef((props, ref) => {
    const { id, label, labelHidden, required, status, disabled, onChange, format = Format.Seconds, onSelect, additionalInfo, ...restProps } = props;
    const t = useI18n();
    const Comp = format === Format.Formatted ? (_jsx(Time, { ...{ status, disabled, onChange }, ...restProps })) : (_jsx(NumberUnit, { ...{ format, status, disabled, onChange, onSelect }, ...restProps }));
    return label ? (_jsx(FormField, { as: 'fieldset', labelAs: 'legend', info: format === Format.Formatted && t('time_format_info'), status: status, ...{
            label,
            labelHidden,
            id,
            required,
            disabled,
            ref,
            additionalInfo
        }, children: Comp })) : (Comp);
});
export default DurationInput;
//# sourceMappingURL=DurationInput.js.map