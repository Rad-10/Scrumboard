import type { TranslationFunction, TranslationPack } from '../../../i18n';
import { DateParts } from './DateTimeInput.types';
export declare const getWeekYear: (date: Date) => number;
export declare const getDayOfWeek: (date: Date, calendarType?: string) => number;
export declare const getWeekdays: (calendarType: string) => Date[];
export declare const getWeek: (date: Date, calendarType?: string) => number;
export declare const getCalendarTypeFromLocale: (localeTag?: string) => string;
export declare const getDateOfISOWeek: (week: number, year: number) => Date;
export declare const parseToDate: (value: string | number | Date) => Date;
export declare type QuarterNumber = 1 | 2 | 3 | 4;
export declare function getQuarter(date: string | number | Date): QuarterNumber;
export declare const getDateFormat: (localeTag?: string, options?: Intl.DateTimeFormatOptions | undefined, labelFormat?: boolean) => string[];
export declare const getStartOfWeek: (date: Date, calendarType?: string) => Date;
export declare const getEndOfWeek: (date: Date, calendarType?: string) => Date;
export declare const convertWeekYearToDate: ({ week, year }: DateParts<string | undefined>) => DateParts<string> | undefined;
export declare type ClockFormat = 12 | 24;
export declare const is12HClockFormat: (localeTag?: string) => boolean;
export declare const getLocalizedMonths: (localeTag?: string) => string[];
export declare const getLocalizedWeekDays: (localeTag?: string) => {
    [key: number]: string;
};
export declare const MS_IN_SECOND = 1000;
export declare const MS_IN_MINUTE: number;
export declare const MS_IN_HOUR: number;
export declare const MS_IN_DAY: number;
export declare const msToTimeFormat: (ms: number) => {
    hour?: number;
    minute?: number;
    second?: number;
};
export declare const timeFormatToMs: ({ hour, minute, second }: {
    hour: number;
    minute: number;
    second: number;
}) => number;
export declare const msToTimeUnit: (ms: number, format: string) => number;
export declare const timeUnitToMs: (count: number, format: string) => number;
export declare const getTimeOptions: (withSeconds: boolean, is12h?: boolean) => {
    readonly hour12: boolean;
    readonly second?: "numeric" | undefined;
    readonly hour: "numeric";
    readonly minute: "numeric";
};
export declare const validateDate: (year: number, month: number, day: number) => boolean;
export declare const validateTime: (hour: number, minute: number, second: number, is12h: boolean) => boolean;
export declare const toUTCDateString: (date: Date, format?: Intl.DateTimeFormat) => string;
export declare const isISODate: (value: string) => boolean;
export declare const isTime: (value: string) => boolean;
export declare const parseLocaleTextToDateParams: (value: string, localeTag: string) => number[] | undefined;
export declare const parsePastedTextToDate: (value: string, localeTag: string, currentDate: Date) => Date | undefined;
export declare const generatePickerButtonAriaLabel: (date: Date | undefined, type: 'date' | 'datetime' | 'week', locale: string, translateFn: TranslationFunction<TranslationPack>, open: boolean) => string;
//# sourceMappingURL=utils.d.ts.map