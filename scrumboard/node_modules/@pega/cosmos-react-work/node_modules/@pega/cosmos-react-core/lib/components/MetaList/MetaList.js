import { jsx as _jsx } from "react/jsx-runtime";
import { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import Text from '../Text';
import Flex from '../Flex';
export const StyledMetaList = styled.ul(({ wrapItems }) => {
    return css `
    list-style: none;
    overflow: hidden;

    ${!wrapItems &&
        css `
      white-space: nowrap;
    `}
  `;
});
export const StyledMetaListItem = styled.li(({ wrapItems }) => {
    return css `
    min-width: 0;
    display: inline-block;

    ${wrapItems
        ? css `
          overflow-wrap: break-word;
        `
        : css `
          white-space: nowrap;
          text-overflow: ellipsis;
          overflow: hidden;
        `}

    &[role='separator'] {
      -webkit-user-select: none;
      user-select: none;
    }
  `;
});
const MetaList = forwardRef((props, ref) => {
    const { items, wrapItems = true, ...restProps } = props;
    return (_jsx(Flex, { as: StyledMetaList, container: { colGap: 0.5, alignItems: 'center', wrap: wrapItems ? 'wrap' : 'nowrap' }, wrapItems: wrapItems, ref: ref, ...restProps, children: items.flatMap((item, i, arr) => item
            ? [
                _jsx(Text, { as: StyledMetaListItem, variant: 'secondary', wrapItems: wrapItems, children: item }, `${i + 0}`)
            ].concat(i !== arr.length - 1
                ? [
                    _jsx(Text, { as: StyledMetaListItem, role: 'separator', variant: 'secondary', children: "\u2022" }, `${i + 0}-sep`)
                ]
                : [])
            : []) }));
});
export default MetaList;
//# sourceMappingURL=MetaList.js.map