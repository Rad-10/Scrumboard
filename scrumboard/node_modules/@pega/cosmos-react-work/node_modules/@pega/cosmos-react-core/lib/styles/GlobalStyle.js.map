{"version":3,"file":"GlobalStyle.js","sourceRoot":"","sources":["../../src/styles/GlobalStyle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAC;AAC/B,OAAO,EAAE,iBAAiB,EAAE,GAAG,EAAgB,MAAM,mBAAmB,CAAC;AAEzE,OAAO,EAAE,iBAAiB,EAAY,MAAM,SAAS,CAAC;AAEtD,MAAM,CAAC,MAAM,mBAAmB,GAAG;;;;;;;;CAQlC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAgB,EAAE,EAAE;IAC1E,OAAO;;;;;;wBAMe,KAAK;;GAE1B,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,EACrC,IAAI,EAAE,EACJ,WAAW,EAAE,YAAY,EACzB,YAAY,EAAE,aAAa,EAC3B,aAAa,EAAE,UAAU,EACzB,OAAO,EAAE,EAAE,kBAAkB,EAAE,eAAe,EAAE,EAChD,aAAa,EAAE,UAAU,EAC1B,EACD,UAAU,EAAE,EAAE,IAAI,EAAE,EACP,EAAE,EAAE;IACjB,yBAAyB;IACzB,MAAM,QAAQ,GAAG,iBAAiB,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;IAEhE,OAAO;;;;;;mBAMU,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAa,CAAC;qBAC7C,UAAU;eAChB,eAAe;qBACT,UAAU;;GAE5B,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;IAC7C,MAAM,EACJ,IAAI,EAAE,EACJ,kBAAkB,EAAE,eAAe,EACnC,eAAe,EAAE,YAAY,EAC7B,OAAO,EAAE,EACP,kBAAkB,EAAE,UAAU,EAC9B,iBAAiB,EAAE,cAAc,EACjC,iBAAiB,EAAE,cAAc,EACjC,uBAAuB,EAAE,mBAAmB,EAC7C,EACD,YAAY,EAAE,EAAE,eAAe,EAAE,WAAW,EAAE,EAC/C,EACD,UAAU,EAAE,EACV,cAAc,EAAE,EAAE,kBAAkB,EAAE,eAAe,EAAE,EACxD,EACF,GAAG,KAAK,CAAC;IACV,OAAO,GAAG,CAAA;MACN,mBAAmB;;;;;;;eAOV,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,eAAe,CAAC;;;;MAItD,eAAe;QACjB,GAAG,CAAA;;2BAEoB,cAAc,IAAI,cAAc;;;;;;;;;;;;;8BAa7B,cAAc;;;;8BAId,cAAc;;;;;;;wCAOJ,YAAY;0CACV,cAAc;;;;0CAId,mBAAmB;;;;;;;;;;;;;;;;;;KAkBxD;;MAEC,sBAAsB,CAAC,KAAK,CAAC;;QAE3B,sBAAsB,CAAC,KAAK,CAAC;;;;;;;;;;;;GAYlC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { mix } from 'polished';\nimport { createGlobalStyle, css, DefaultTheme } from 'styled-components';\n\nimport { calculateFontSize, FontSize } from './utils';\n\nexport const globalSpacingStyles = `\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const createGlobalRootStyles = ({ base: { scale } }: DefaultTheme) => {\n  return `\n    :root,\n    :host {\n      height: 100%;\n      -webkit-text-size-adjust: 100%;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      font-size: calc(${scale} * 1rem);\n    }\n  `;\n};\n\nexport const createGlobalBodyStyles = ({\n  base: {\n    'font-size': baseFontSize,\n    'font-scale': baseFontScale,\n    'font-family': fontFamily,\n    palette: { 'foreground-color': foregroundColor },\n    'line-height': lineHeight\n  },\n  components: { text }\n}: DefaultTheme) => {\n  // Can't call a hook here\n  const fontSize = calculateFontSize(baseFontSize, baseFontScale);\n\n  return `\n    body,\n    :host {\n      min-height: 100%;\n      margin: 0;\n      padding: 0;\n      font-size: ${fontSize[text.primary['font-size'] as FontSize]};\n      font-family: ${fontFamily};\n      color: ${foregroundColor};\n      line-height: ${lineHeight};\n    }\n  `;\n};\n\nexport default createGlobalStyle(({ theme }) => {\n  const {\n    base: {\n      'custom-scrollbar': customScrollbar,\n      'border-radius': borderRadius,\n      palette: {\n        'foreground-color': foreground,\n        'scrollbar-track': scrollbarTrack,\n        'scrollbar-thumb': scrollbarThumb,\n        'scrollbar-thumb-hover': scrollbarThumbHover\n      },\n      transparency: { 'transparent-3': transparent }\n    },\n    components: {\n      'form-control': { 'background-color': backgroundColor }\n    }\n  } = theme;\n  return css`\n    ${globalSpacingStyles}\n\n    body {\n      overscroll-behavior: none;\n    }\n\n    ::placeholder {\n      color: ${mix(transparent, foreground, backgroundColor)};\n      opacity: unset;\n    }\n\n    ${customScrollbar &&\n    css`\n      * {\n        scrollbar-color: ${scrollbarThumb} ${scrollbarTrack};\n        scrollbar-width: thin;\n      }\n\n      @supports not ((scrollbar-width: thin) or (scrollbar-color: black white)) {\n        /* stylelint-disable unit-allowed-list */\n\n        *::-webkit-scrollbar {\n          width: 12px;\n          height: 12px;\n        }\n\n        *::-webkit-scrollbar-track {\n          background-color: ${scrollbarTrack};\n        }\n\n        *::-webkit-scrollbar-corner {\n          background-color: ${scrollbarTrack};\n          border-bottom-right-radius: inherit;\n        }\n\n        *::-webkit-scrollbar-thumb {\n          background-color: transparent;\n          border: 3px solid transparent;\n          border-radius: calc(1.125 * ${borderRadius});\n          box-shadow: inset 0 0 2px 4px ${scrollbarThumb};\n        }\n\n        *::-webkit-scrollbar-thumb:hover {\n          box-shadow: inset 0 0 2px 4px ${scrollbarThumbHover};\n        }\n\n        *::-webkit-scrollbar-track:horizontal {\n          border-bottom-left-radius: inherit;\n        }\n\n        *::-webkit-scrollbar-track:vertical {\n          border-top-right-radius: inherit;\n        }\n\n        /* stylelint-disable-next-line selector-pseudo-class-no-unknown */\n        *::-webkit-scrollbar-track:not(:corner-present) {\n          border-bottom-right-radius: inherit;\n        }\n\n        /* stylelint-enable unit-allowed-list */\n      }\n    `}\n\n    ${createGlobalRootStyles(theme)}\n\n      ${createGlobalBodyStyles(theme)}\n\n      input,\n      button,\n      select,\n      optgroup,\n      textarea {\n      margin: 0;\n      font-family: inherit;\n      font-size: inherit;\n      line-height: inherit;\n    }\n  `;\n});\n"]}