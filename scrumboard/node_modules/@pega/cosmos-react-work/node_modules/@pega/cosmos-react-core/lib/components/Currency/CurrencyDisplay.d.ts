import { FunctionComponent, Ref } from 'react';
import { BaseProps, ForwardProps, NoChildrenProp } from '../../types';
export interface CurrencyDisplayProps extends BaseProps, NoChildrenProp {
    /** Number value. */
    value?: number | bigint;
    /** Three letter currency shorthand ISO code. If not provided or invalid, component renders only the number. */
    currencyISOCode?: string;
    /** Options to define formatting. */
    formattingOptions?: {
        currency?: 'symbol' | 'code' | 'name';
        /**
         * Determines negative value notation: using minus sign or parentheses.
         * @default 'minus-sign'
         */
        negative?: 'minus-sign' | 'parentheses';
        /**
         * Value display notation.
         * @default 'standard'
         */
        notation?: 'standard' | 'compact';
        /**
         * Fixed number of fraction digits. Maximum is 20, default is currency dependant.
         * @default variable
         */
        fractionDigits?: number;
        /** Determines whether group separators should be shown.
         * @default true
         */
        groupSeparators?: boolean;
    };
    /** Ref for the wrapping element. */
    ref?: Ref<HTMLAnchorElement>;
}
declare const CurrencyDisplay: FunctionComponent<CurrencyDisplayProps & ForwardProps>;
export default CurrencyDisplay;
//# sourceMappingURL=CurrencyDisplay.d.ts.map