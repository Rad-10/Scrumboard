import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import Icon, { registerIcon } from '../Icon';
import { defaultThemeProp } from '../../theme';
import HTML from '../HTML';
import Button from '../Button';
import Dialog, { useDialog } from '../Dialog';
import * as informationIcon from '../Icon/icons/information.icon';
import { useI18n } from '../../hooks';
import { StyledDialog } from '../Dialog/Dialog';
registerIcon(informationIcon);
export const StyledAdditionalInfo = styled.div(({ theme }) => css `
    & > ${StyledDialog} {
      max-width: ${theme.base['content-width'].md};
    }
  `);
StyledAdditionalInfo.defaultProps = defaultThemeProp;
const AdditionalInfo = forwardRef(({ heading, children, ...restProps }, ref) => {
    const { target, events } = useDialog();
    const t = useI18n();
    return (_jsxs(StyledAdditionalInfo, { ref: ref, ...restProps, children: [_jsx(Button, { variant: 'simple', label: t('additional_info'), compact: true, icon: true, ...events, children: _jsx(Icon, { name: 'information' }) }), _jsx(Dialog, { heading: heading, target: target, children: typeof children === 'string' ? _jsx(HTML, { content: children }) : children })] }));
});
export default AdditionalInfo;
//# sourceMappingURL=AdditionalInfo.js.map