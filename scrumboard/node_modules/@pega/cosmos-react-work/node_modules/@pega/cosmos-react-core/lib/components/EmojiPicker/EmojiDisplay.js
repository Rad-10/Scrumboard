import { jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
import { useContext } from 'react';
import styled from 'styled-components';
import emojiRegex from 'emoji-regex';
import { getEmojiDataFromNative, Emoji } from 'emoji-mart';
import data from 'emoji-mart/data/all.json';
import { replaceMatchWithElement } from '../../utils';
import { EmojiContext } from './EmojiPicker';
const StyledEmojiDisplay = styled.span `
  .emoji-mart-emoji {
    line-height: 1;
    vertical-align: middle;
  }
`;
const EmojiDisplay = props => {
    const { content, size = 20, ...restProps } = props;
    const regex = emojiRegex();
    let msgArr = [];
    const { set: emojiSet } = useContext(EmojiContext);
    if (typeof content === 'string' && emojiSet) {
        const renderEmoji = (eMatch) => {
            const emojiData = getEmojiDataFromNative(eMatch, emojiSet, data);
            return emojiData && _jsx(Emoji, { set: emojiSet, emoji: emojiData, size: size });
        };
        if (content.split(regex).length > 1) {
            msgArr = replaceMatchWithElement(content, regex, renderEmoji);
        }
    }
    return emojiSet && msgArr.length >= 1 ? (_jsx(StyledEmojiDisplay, { ...restProps, children: msgArr })) : (_jsx(_Fragment, { children: content }));
};
export default EmojiDisplay;
//# sourceMappingURL=EmojiDisplay.js.map