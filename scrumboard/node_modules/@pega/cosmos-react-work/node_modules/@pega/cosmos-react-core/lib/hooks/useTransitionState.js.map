{"version":3,"file":"useTransitionState.js","sourceRoot":"","sources":["../../src/hooks/useTransitionState.ts"],"names":[],"mappings":"AAAA,OAAO,EAA4B,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEnF,MAAM,CAAC,MAAM,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC;IAChD,GAAG,EAAE,WAAW;IAChB,MAAM,EAAE,WAAW;IACnB,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,YAAY;CACb,CAAC,CAAC;AAEZ,MAAM,CAAC,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC;IAC3C,GAAG,EAAE,QAAQ;IACb,MAAM,EAAE,SAAS;IACjB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;CACV,CAAC,CAAC;AAEZ,MAAM,kBAAkB,GAAG,CAKzB,EACA,GAAG,EACH,QAAQ,EACR,MAAM,GAAG;IACP,GAAG,EAAE,KAAY;IACjB,MAAM,EAAE,QAAkB;IAC1B,IAAI,EAAE,MAAc;IACpB,OAAO,EAAE,SAAoB;CAC9B,EACD,YAAY,GAAG,MAAM,CAAC,GAAG,EAa1B,EAAE,EAAE;IACH,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAsB,GAAG,EAAE,CAC3D,YAAY,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAC9C,CAAC;IAEF,MAAM,eAAe,GAAG,WAAW,CACjC,CAAC,CAAkB,EAAE,EAAE;QACrB,IAAI,CAAC,CAAC,YAAY,KAAK,QAAQ,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,aAAa;YAAE,OAAO;QACxE,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACxD,CAAC,EACD,CAAC,QAAQ,CAAC,CACX,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC;QACvB,IAAI,CAAC,EAAE;YAAE,OAAO;QAEhB,EAAE,CAAC,gBAAgB,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;QACtD,OAAO,GAAG,EAAE;YACV,EAAE,CAAC,mBAAmB,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;QAC3D,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,eAAe,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IAEnC,MAAM,GAAG,GAAG,WAAW,CAAC,CAAC,SAAqB,EAAE,EAAE;QAChD,QAAQ,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,SAAS,KAAK,MAAM,CAAC,IAAI,IAAI,GAAG,KAAK,MAAM;gBAAE,OAAO,QAAQ,CAAC;YACjE,IAAI,SAAS,KAAK,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,KAAK;gBAAE,OAAO,SAAS,CAAC;YAChE,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE;QAC9B,QAAQ,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,SAAS;gBAAE,OAAO,QAAQ,CAAC;YACxD,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,QAAQ;gBAAE,OAAO,SAAS,CAAC;YACzD,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,CAAkC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;AAChF,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import { CSSProperties, RefObject, useCallback, useEffect, useState } from 'react';\n\nexport const expandCollapseStates = Object.freeze({\n  low: 'collapsed',\n  rising: 'expanding',\n  high: 'expanded',\n  falling: 'collapsing'\n} as const);\n\nexport const openCloseStates = Object.freeze({\n  low: 'closed',\n  rising: 'opening',\n  high: 'open',\n  falling: 'closing'\n} as const);\n\nconst useTransitionState = <\n  Low extends string = 'low',\n  Rising extends string = 'rising',\n  High extends string = 'high',\n  Falling extends string = 'falling'\n>({\n  ref,\n  property,\n  states = {\n    low: 'low' as Low,\n    rising: 'rising' as Rising,\n    high: 'high' as High,\n    falling: 'falling' as Falling\n  },\n  defaultState = states.low\n}: {\n  ref: RefObject<HTMLElement>;\n  property: keyof CSSProperties;\n} & (\n  | {\n      states: { low: Low; rising: Rising; high: High; falling: Falling };\n      defaultState?: Low | High;\n    }\n  | {\n      states?: { low: 'low'; rising: 'rising'; high: 'high'; falling: 'falling' };\n      defaultState?: 'low' | 'high';\n    }\n)) => {\n  const [state, setState] = useState<keyof typeof states>(() =>\n    defaultState === states.high ? 'high' : 'low'\n  );\n\n  const onTransitionEnd = useCallback(\n    (e: TransitionEvent) => {\n      if (e.propertyName !== property || e.target !== e.currentTarget) return;\n      setState(cur => (cur === 'falling' ? 'low' : 'high'));\n    },\n    [property]\n  );\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n\n    el.addEventListener('transitionend', onTransitionEnd);\n    return () => {\n      el.removeEventListener('transitionend', onTransitionEnd);\n    };\n  }, [onTransitionEnd, ref.current]);\n\n  const set = useCallback((wantsToGo: Low | High) => {\n    setState(cur => {\n      if (wantsToGo === states.high && cur !== 'high') return 'rising';\n      if (wantsToGo === states.low && cur !== 'low') return 'falling';\n      return cur;\n    });\n  }, []);\n\n  const toggle = useCallback(() => {\n    setState(cur => {\n      if (cur === 'low' || cur === 'falling') return 'rising';\n      if (cur === 'high' || cur === 'rising') return 'falling';\n      return cur;\n    });\n  }, []);\n\n  return { state: states[state] as Low | Rising | High | Falling, set, toggle };\n};\n\nexport default useTransitionState;\n"]}