interface ColorStop {
    /** CSS color string. */
    color: string;
    /** Position along the gradient expressed as a number from 0 to 1. */
    position: number;
}
declare type LinearGradient = ColorStop[];
export declare const gradientMap: {
    grayscale: {
        color: string;
        position: number;
    }[];
    'persian-blue': {
        color: string;
        position: number;
    }[];
    'persian-green': {
        color: string;
        position: number;
    }[];
    'pastel-orange': {
        color: string;
        position: number;
    }[];
    'japanese-laurel': {
        color: string;
        position: number;
    }[];
    'mango-tango': {
        color: string;
        position: number;
    }[];
    valencia: {
        color: string;
        position: number;
    }[];
    'fuchsia-blue': {
        color: string;
        position: number;
    }[];
    'faded-red': {
        color: string;
        position: number;
    }[];
    rope: {
        color: string;
        position: number;
    }[];
    silver: {
        color: string;
        position: number;
    }[];
    'blue-yellow': {
        color: string;
        position: number;
    }[];
    'green-yellow': {
        color: string;
        position: number;
    }[];
    'ruby-yellow': {
        color: string;
        position: number;
    }[];
    'purple-blue': {
        color: string;
        position: number;
    }[];
    'violet-rose': {
        color: string;
        position: number;
    }[];
    'negative-attention-positive': {
        color: string;
        position: number;
    }[];
    'negative-attention-positive-protan': {
        color: string;
        position: number;
    }[];
    'negative-attention-positive-deutan': {
        color: string;
        position: number;
    }[];
    'hot-cold': {
        color: string;
        position: number;
    }[];
    'two-extremes': {
        color: string;
        position: number;
    }[];
};
export declare const colorInGradient: ([...gradient]: LinearGradient, targetPosition: number) => string;
export declare const colorInGradientByName: (name: keyof typeof gradientMap, targetPosition: number) => string;
export declare const colorsForCategories: (count: number, { gradients, steps }?: {
    gradients?: LinearGradient[] | undefined;
    steps?: number[] | undefined;
}) => string[];
export declare const nlpColors: string[];
export declare const toLinearGradient: (gradient: LinearGradient, { direction }?: {
    direction?: string | undefined;
}) => string;
export {};
//# sourceMappingURL=gradients.d.ts.map