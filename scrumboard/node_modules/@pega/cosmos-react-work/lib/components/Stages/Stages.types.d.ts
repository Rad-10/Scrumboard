import { ReactNode, Ref } from 'react';
import { BaseProps, NoChildrenProp } from '@pega/cosmos-react-core';
export interface StepProps {
    /** Step name - either text or link. */
    name: ReactNode;
    /** Flag determining whether step has been completed. */
    completed: boolean;
    /** Unique step identifier. */
    id: string;
}
export interface StageProps {
    /** Stage name. */
    name: string;
    /** Unique identifier. */
    id: string;
    /** Date of completion. Accepts date object, ISO string or timestamp. */
    date?: Date | string | number;
    /** Flag determining whether the stage is completed. */
    completed: boolean;
    /** Steps data defined in this stage. The stage is treated as not loaded if undefined. */
    steps?: StepProps[];
}
export interface StagesProps extends BaseProps, NoChildrenProp {
    /** List of objects describing each stage and their state. */
    stages: StageProps[];
    /** Current stage id. */
    current: string;
    /** Case title (label) */
    caseTitle?: string;
    /**
     * Callback invoked when stage details are requested to show.
     * @param stages stages' ids requested to load details for.
     */
    onLoadStage?: (stages: StageProps['id'][]) => void;
    /** Ref to the stages container. */
    ref?: Ref<HTMLDivElement>;
}
//# sourceMappingURL=Stages.types.d.ts.map