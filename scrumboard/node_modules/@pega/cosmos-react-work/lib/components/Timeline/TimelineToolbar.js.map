{"version":3,"file":"TimelineToolbar.js","sourceRoot":"","sources":["../../../src/components/Timeline/TimelineToolbar.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAsC,OAAO,EAAE,MAAM,OAAO,CAAC;AAEhF,OAAO,EAAgB,WAAW,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAK7E,MAAM,eAAe,GAA2D,UAAU,CACxF,CACE,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,SAAS,EAAyC,EACpE,GAAgC,EAChC,EAAE;IACF,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC;IAEpB,MAAM,YAAY,GAAoB,OAAO,CAAC,GAAG,EAAE;QACjD,MAAM,QAAQ,GAAG,IAAI,EAAE,QAAQ,IAAI,YAAY,CAAC;QAChD,OAAO;YACL,IAAI,EAAE,eAAe;YACrB,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,YAAY;oBAChB,IAAI,EAAE,CAAC,CAAC,kCAAkC,CAAC;oBAC3C,IAAI,EAAE,YAAY;oBAClB,QAAQ,EAAE,QAAQ,KAAK,YAAY;iBACpC;gBACD;oBACE,EAAE,EAAE,WAAW;oBACf,IAAI,EAAE,CAAC,CAAC,iCAAiC,CAAC;oBAC1C,IAAI,EAAE,UAAU;oBAChB,QAAQ,EAAE,QAAQ,KAAK,WAAW;iBACnC;aACF;YACD,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;gBACrB,IAAI,EAAE,WAAW,CAAC,EAAuB,EAAE,CAAC,CAAC,CAAC;YAChD,CAAC;SACF,CAAC;IACJ,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;IAExC,MAAM,aAAa,GAAoB,OAAO,CAAC,GAAG,EAAE;QAClD,MAAM,QAAQ,GAAG,KAAK,EAAE,QAAQ,IAAI,MAAM,CAAC;QAC3C,OAAO;YACL,IAAI,EAAE,eAAe;YACrB,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,MAAM;oBACV,IAAI,EAAE,CAAC,CAAC,6BAA6B,CAAC;oBACtC,QAAQ,EAAE,QAAQ,KAAK,MAAM;iBAC9B;gBACD;oBACE,EAAE,EAAE,WAAW;oBACf,IAAI,EAAE,CAAC,CAAC,kCAAkC,CAAC;oBAC3C,QAAQ,EAAE,QAAQ,KAAK,WAAW;iBACnC;gBACD;oBACE,EAAE,EAAE,aAAa;oBACjB,IAAI,EAAE,CAAC,CAAC,oCAAoC,CAAC;oBAC7C,QAAQ,EAAE,QAAQ,KAAK,aAAa;iBACrC;gBACD;oBACE,EAAE,EAAE,MAAM;oBACV,IAAI,EAAE,CAAC,CAAC,6BAA6B,CAAC;oBACtC,QAAQ,EAAE,QAAQ,KAAK,MAAM;iBAC9B;gBACD;oBACE,EAAE,EAAE,MAAM;oBACV,IAAI,EAAE,CAAC,CAAC,6BAA6B,CAAC;oBACtC,QAAQ,EAAE,QAAQ,KAAK,MAAM;iBAC9B;aACF;YACD,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;gBACrB,KAAK,EAAE,WAAW,CAAC,EAAqB,EAAE,CAAC,CAAC,CAAC;YAC/C,CAAC;SACF,CAAC;IACJ,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;IAE1C,OAAO,CACL,KAAC,WAAW,OACN,SAAS,EACb,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EACrC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,EACxC,GAAG,EAAE,GAAG,GACR,CACH,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import { forwardRef, FunctionComponent, PropsWithoutRef, useMemo } from 'react';\n\nimport { ForwardProps, ListToolbar, useI18n } from '@pega/cosmos-react-core';\nimport { PresetMenuProps } from '@pega/cosmos-react-core/lib/components/ListToolbar/ListToolbar.types';\n\nimport { TimelineGroupBy, TimelineSortOrder, TimelineToolbarProps } from './Timeline.types';\n\nconst TimelineToolbar: FunctionComponent<TimelineToolbarProps & ForwardProps> = forwardRef(\n  (\n    { sort, group, ...restProps }: PropsWithoutRef<TimelineToolbarProps>,\n    ref: TimelineToolbarProps['ref']\n  ) => {\n    const t = useI18n();\n\n    const timelineSort: PresetMenuProps = useMemo(() => {\n      const selected = sort?.selected || 'descending';\n      return {\n        mode: 'single-select',\n        items: [\n          {\n            id: 'descending',\n            text: t('timeline_toolbar_sort_descending'),\n            icon: 'arrow-down',\n            selected: selected === 'descending'\n          },\n          {\n            id: 'ascending',\n            text: t('timeline_toolbar_sort_ascending'),\n            icon: 'arrow-up',\n            selected: selected === 'ascending'\n          }\n        ],\n        onItemClick: (id, e) => {\n          sort?.onItemClick(id as TimelineSortOrder, e);\n        }\n      };\n    }, [sort?.selected, sort?.onItemClick]);\n\n    const timelineGroup: PresetMenuProps = useMemo(() => {\n      const selected = group?.selected || 'date';\n      return {\n        mode: 'single-select',\n        items: [\n          {\n            id: 'date',\n            text: t('timeline_toolbar_group_date'),\n            selected: selected === 'date'\n          },\n          {\n            id: 'monthyear',\n            text: t('timeline_toolbar_group_monthyear'),\n            selected: selected === 'monthyear'\n          },\n          {\n            id: 'quarteryear',\n            text: t('timeline_toolbar_group_quarteryear'),\n            selected: selected === 'quarteryear'\n          },\n          {\n            id: 'year',\n            text: t('timeline_toolbar_group_year'),\n            selected: selected === 'year'\n          },\n          {\n            id: 'none',\n            text: t('timeline_toolbar_group_none'),\n            selected: selected === 'none'\n          }\n        ],\n        onItemClick: (id, e) => {\n          group?.onItemClick(id as TimelineGroupBy, e);\n        }\n      };\n    }, [group?.selected, group?.onItemClick]);\n\n    return (\n      <ListToolbar\n        {...restProps}\n        sort={sort ? timelineSort : undefined}\n        group={group ? timelineGroup : undefined}\n        ref={ref}\n      />\n    );\n  }\n);\n\nexport default TimelineToolbar;\n"]}