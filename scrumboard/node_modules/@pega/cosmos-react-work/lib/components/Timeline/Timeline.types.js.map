{"version":3,"file":"Timeline.types.js","sourceRoot":"","sources":["../../../src/components/Timeline/Timeline.types.ts"],"names":[],"mappings":"","sourcesContent":["import { MouseEvent, ReactNode, Ref } from 'react';\n\nimport {\n  BaseProps,\n  FieldValueListProps,\n  IconProps,\n  ListToolbarProps,\n  NoChildrenProp,\n  OmitStrict,\n  StatusProps\n} from '@pega/cosmos-react-core';\nimport { DateTimeVariant } from '@pega/cosmos-react-core/lib/components/DateTime/DateTime.types';\nimport { AcceptedMouseEventElement } from '@pega/cosmos-react-core/lib/components/Menu/Menu.types';\n\nexport interface ActivityObject {\n  /** Unique id for activity */\n  id: string;\n  /** Date as ISO8601 string, timestamp or native Date object. */\n  date: string | number | Date;\n  /** Header region for rendering text and links. */\n  title: ReactNode;\n  /** Name of the icon (to be selected from default Pega icon set) */\n  icon?: IconProps['name'];\n  /** Represents the current status of activity */\n  status?: StatusProps;\n  /** The set of field values to render in the list. */\n  content?: FieldValueListProps['fields'] | ReactNode;\n}\n\nexport type TimelineSortOrder = 'ascending' | 'descending';\nexport type TimelineGroupBy =\n  | Extract<DateTimeVariant, 'date' | 'monthyear' | 'quarteryear' | 'year'>\n  | 'none';\n\nexport default interface TimelineProps extends BaseProps, NoChildrenProp {\n  /** List of activity */\n  activity: ActivityObject[];\n  /** Current time as Date */\n  currentTime: Date;\n  /**\n   * List of activity sorted in ascending or descending order.\n   * @default \"descending\"\n   */\n  sortOrder?: TimelineSortOrder;\n  /**\n   * List of activity grouped by day, month, quarter or year.\n   * @default \"date\"\n   */\n  groupBy?: TimelineGroupBy;\n  /**\n   * Show a Progress indicator at the end of a list where newly loaded items will be appended.\n   * @default false\n   */\n  loading?: boolean;\n  /** Callback to fetch more activity items */\n  loadMore?: () => void;\n  /** Ref for the wrapping element. */\n  ref?: Ref<HTMLTableElement>;\n}\n\nexport interface TimelineToolbarProps extends OmitStrict<ListToolbarProps, 'sort' | 'group'> {\n  sort?: {\n    /** An item click handler for all item clicks. */\n    onItemClick: (id: TimelineSortOrder, e: MouseEvent<AcceptedMouseEventElement>) => void;\n    /**\n     * Currently selected sort order.\n     * @default \"descending\"\n     */\n    selected: TimelineProps['sortOrder'];\n  };\n  group?: {\n    /** An item click handler for all item clicks. */\n    onItemClick: (id: TimelineGroupBy, e: MouseEvent<AcceptedMouseEventElement>) => void;\n    /**\n     * Currently selected sort order.\n     * @default \"date\"\n     */\n    selected: TimelineProps['groupBy'];\n  };\n}\n"]}