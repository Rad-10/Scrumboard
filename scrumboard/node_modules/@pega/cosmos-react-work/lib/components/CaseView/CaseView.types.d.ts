import { ReactElement, ReactNode, MouseEvent } from 'react';
import { Tab, NoChildrenProp, ForwardProps, MenuItemProps, Action, BaseProps } from '@pega/cosmos-react-core';
export interface CaseViewProps extends NoChildrenProp, BaseProps {
    /** A unique identifier for the case instance. */
    caseId: string;
    /** Text to quickly identify a case instance. */
    heading: string;
    /** Supplemental text to identify a case instance. */
    subheading?: string;
    /** A set of props including an href that will be forwarded to the case heading and caseId. */
    caseLink?: {
        href: string;
    } & ForwardProps;
    /** A set of Link props representing the case parents, rendered as Breadcrumbs. */
    parentCases?: MenuItemProps[];
    /** An icon to serve as a visual for the CaseView. */
    icon?: ReactElement;
    /** Indicates if the current user is following the case. This should be updated based on onFollowedChange.  */
    followed?: boolean;
    /** Called when user chooses to follow or unfollow the case. Use this to update followed. */
    onFollowedChange?: (following: boolean) => void;
    /** Case level actions available in an action menu. */
    actions?: Action[];
    /** Visually promoted case level actions available outside the menu. */
    promotedActions?: Action[];
    /** A callback for when the edit button is clicked */
    onEdit?: () => void;
    /** A region to display any summary information about the CaseView. */
    summary: ReactNode;
    /**
     * Determines the layout state of the summary region.
     * @default true
     */
    summaryExpanded?: boolean;
    /**
     * Callback to toggle the case summary's layout.
     */
    onToggleSummary?: () => void;
    /** An object handling the rendering and functionality of the Tabs in CaseSummary. */
    tabs: {
        items: Tab[];
        onClick: (id: string, event?: MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void;
        currentTabId: string;
    };
    /** A region within the center column that is controlled by tabs in CaseSummary. */
    tabContent?: {
        content: ReactNode;
        id: string;
    }[];
    /** A region to hold a Stages component. */
    stages?: ReactNode;
    /** A region to hold a Tasks component. */
    tasks?: ReactNode;
    /** A region above the center column to display banners. */
    banners?: ReactNode;
    /** A region to the right reserved for persistent utilities. */
    persistentUtility?: {
        content: ReactNode;
        title: string;
    };
    /**
     * Provide an instance of IntelligentGuidance to be rendered for a case.
     */
    intelligentGuidance?: ReactNode;
    /** A region for case widgets. */
    utilities?: ReactNode;
    /** An indicator of case widgets when the utilities are collapsed. */
    utilitiesSummaryItems?: {
        iconName: string;
        count?: number;
    }[];
    /**
     * Determines the layout state of the utilities.
     * @default true
     */
    utilitiesExpanded?: boolean;
    /**
     * Callback to toggle the utilities.
     */
    onToggleUtilities?: () => void;
}
export interface CaseSummaryFieldsProps {
    /** The primary summary fields to display above secondary fields. */
    primaryFields: {
        id?: string;
        name: string;
        value: ReactNode;
    }[];
    /** The secondary summary fields to display below primary fields. */
    secondaryFields: {
        id?: string;
        name: string;
        value: ReactNode;
    }[];
}
export interface CaseViewContextValue extends Pick<CaseViewProps, 'caseId' | 'heading' | 'subheading' | 'caseLink' | 'parentCases' | 'icon' | 'followed' | 'onFollowedChange' | 'actions' | 'promotedActions' | 'onEdit' | 'summary' | 'tabs' | 'summaryExpanded' | 'onToggleSummary' | 'utilitiesExpanded' | 'persistentUtility' | 'intelligentGuidance'> {
    summaryId: string;
    aboveMD: boolean;
    aboveLG: boolean;
    aboveXL: boolean;
    isPreview: boolean;
}
//# sourceMappingURL=CaseView.types.d.ts.map