{"version":3,"file":"CaseView.types.js","sourceRoot":"","sources":["../../../src/components/CaseView/CaseView.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ReactElement, ReactNode, MouseEvent } from 'react';\n\nimport {\n  Tab,\n  NoChildrenProp,\n  ForwardProps,\n  MenuItemProps,\n  Action,\n  BaseProps\n} from '@pega/cosmos-react-core';\n\nexport interface CaseViewProps extends NoChildrenProp, BaseProps {\n  /** A unique identifier for the case instance. */\n  caseId: string;\n  /** Text to quickly identify a case instance. */\n  heading: string;\n  /** Supplemental text to identify a case instance. */\n  subheading?: string;\n  /** A set of props including an href that will be forwarded to the case heading and caseId. */\n  caseLink?: { href: string } & ForwardProps;\n  /** A set of Link props representing the case parents, rendered as Breadcrumbs. */\n  parentCases?: MenuItemProps[];\n  /** An icon to serve as a visual for the CaseView. */\n  icon?: ReactElement;\n  /** Indicates if the current user is following the case. This should be updated based on onFollowedChange.  */\n  followed?: boolean;\n  /** Called when user chooses to follow or unfollow the case. Use this to update followed. */\n  onFollowedChange?: (following: boolean) => void;\n  /** Case level actions available in an action menu. */\n  actions?: Action[];\n  /** Visually promoted case level actions available outside the menu. */\n  promotedActions?: Action[];\n  /** A callback for when the edit button is clicked */\n  onEdit?: () => void;\n\n  /** A region to display any summary information about the CaseView. */\n  summary: ReactNode;\n  /**\n   * Determines the layout state of the summary region.\n   * @default true\n   */\n  summaryExpanded?: boolean;\n  /**\n   * Callback to toggle the case summary's layout.\n   */\n  onToggleSummary?: () => void;\n\n  /** An object handling the rendering and functionality of the Tabs in CaseSummary. */\n  tabs: {\n    items: Tab[];\n    onClick: (id: string, event?: MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void;\n    currentTabId: string;\n  };\n  /** A region within the center column that is controlled by tabs in CaseSummary. */\n  tabContent?: { content: ReactNode; id: string }[];\n\n  /** A region to hold a Stages component. */\n  stages?: ReactNode;\n  /** A region to hold a Tasks component. */\n  tasks?: ReactNode;\n  /** A region above the center column to display banners. */\n  banners?: ReactNode;\n  /** A region to the right reserved for persistent utilities. */\n  persistentUtility?: { content: ReactNode; title: string };\n  /**\n   * Provide an instance of IntelligentGuidance to be rendered for a case.\n   */\n  intelligentGuidance?: ReactNode;\n\n  /** A region for case widgets. */\n  utilities?: ReactNode;\n  /** An indicator of case widgets when the utilities are collapsed. */\n  utilitiesSummaryItems?: { iconName: string; count?: number }[];\n\n  /**\n   * Determines the layout state of the utilities.\n   * @default true\n   */\n  utilitiesExpanded?: boolean;\n  /**\n   * Callback to toggle the utilities.\n   */\n  onToggleUtilities?: () => void;\n  /**\n   * Indicates CaseView is rendered within a CasePreview.\n   * @internal\n   */\n  isPreview?: boolean;\n}\n\nexport interface CaseSummaryFieldsProps {\n  /** The primary summary fields to display above secondary fields. */\n  primaryFields: {\n    id?: string;\n    name: string;\n    value: ReactNode;\n  }[];\n  /** The secondary summary fields to display below primary fields. */\n  secondaryFields: {\n    id?: string;\n    name: string;\n    value: ReactNode;\n  }[];\n}\n\nexport interface CaseViewContextValue\n  extends Pick<\n    CaseViewProps,\n    | 'caseId'\n    | 'heading'\n    | 'subheading'\n    | 'caseLink'\n    | 'parentCases'\n    | 'icon'\n    | 'followed'\n    | 'onFollowedChange'\n    | 'actions'\n    | 'promotedActions'\n    | 'onEdit'\n    | 'summary'\n    | 'tabs'\n    | 'summaryExpanded'\n    | 'onToggleSummary'\n    | 'utilitiesExpanded'\n    | 'persistentUtility'\n    | 'intelligentGuidance'\n  > {\n  summaryId: string;\n  aboveMD: boolean;\n  aboveLG: boolean;\n  aboveXL: boolean;\n  isPreview: boolean;\n}\n"]}