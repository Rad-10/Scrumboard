{"version":3,"file":"CaseHeader.js","sourceRoot":"","sources":["../../../src/components/CaseView/CaseHeader.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC, MouseEvent, useRef } from 'react';\n\nimport {\n  Breadcrumbs,\n  Flex,\n  Icon,\n  registerIcon,\n  Text,\n  Link,\n  MenuItemProps,\n  Button,\n  MenuButton,\n  useI18n,\n  useAfterInitialEffect\n} from '@pega/cosmos-react-core';\nimport * as pencilIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/pencil.icon';\nimport * as moreIcon from '@pega/cosmos-react-core/lib/components/Icon/icons/more.icon';\n\nimport {\n  StyledCaseHeader,\n  StyledCaseIconWrap,\n  StyledCaseHeaderText,\n  StyledPromotedActions,\n  StyledExpandCollapseButton,\n  StyledSubheading\n} from './CaseView.styles';\nimport { useCaseViewContext } from './CaseView.context';\n\nregisterIcon(pencilIcon, moreIcon);\n\nconst CaseHeader: FC = () => {\n  const t = useI18n();\n\n  const {\n    caseId,\n    icon,\n    heading,\n    subheading,\n    actions,\n    caseLink,\n    parentCases,\n    onEdit,\n    followed,\n    onFollowedChange,\n    promotedActions,\n    summaryId,\n    summaryExpanded,\n    onToggleSummary,\n    isPreview,\n    aboveMD,\n    persistentUtility\n  } = useCaseViewContext();\n\n  const caseActions: MenuItemProps[] | undefined = actions\n    ? actions.map(action => {\n        return {\n          ...action,\n          primary: action.text,\n          visual: action.icon ? <Icon name={action.icon} /> : null\n        };\n      })\n    : undefined;\n\n  const toggleButtonRef = useRef<HTMLButtonElement>(null);\n\n  // FIXME: This is a hack to get the Tooltip to reset its position when the summary changes layout.\n  useAfterInitialEffect(() => {\n    if (toggleButtonRef.current && toggleButtonRef.current === document.activeElement) {\n      toggleButtonRef.current.blur();\n      setTimeout(() => {\n        toggleButtonRef.current?.focus();\n      }, 0);\n    }\n  }, [summaryExpanded]);\n\n  return (\n    <div>\n      <Flex as={StyledCaseHeader} container={{ gap: 2, alignItems: 'start' }}>\n        {!isPreview && aboveMD && onToggleSummary && !persistentUtility && (\n          <StyledExpandCollapseButton\n            ref={toggleButtonRef}\n            onClick={onToggleSummary}\n            label={t(summaryExpanded ? 'collapse' : 'expand')}\n            aria-label={t(summaryExpanded ? 'collapse_summary_panel' : 'expand_summary_panel')}\n            icon\n            compact\n            aria-expanded={summaryExpanded ? 'true' : 'false'}\n            aria-controls={summaryId}\n          >\n            <Icon name='arrow-micro-left' />\n          </StyledExpandCollapseButton>\n        )}\n\n        {icon && (\n          <Flex container item={{ shrink: 0 }} as={StyledCaseIconWrap}>\n            {icon}\n          </Flex>\n        )}\n        <Flex\n          as={StyledCaseHeaderText}\n          container={{ direction: 'column' }}\n          item={{ grow: 1, shrink: 0, basis: '0' }}\n        >\n          <Text variant='h1'>{caseLink ? <Link {...caseLink}>{heading}</Link> : heading}</Text>\n          {subheading && (!parentCases || subheading !== caseId) && (\n            <StyledSubheading>{subheading}</StyledSubheading>\n          )}\n          {parentCases && (\n            <Breadcrumbs\n              forwardedAs='p'\n              path={[\n                ...parentCases,\n                { ...caseLink, id: caseId, primary: caseId, href: caseLink?.href }\n              ]}\n            />\n          )}\n        </Flex>\n        <div>\n          {onEdit && (\n            <Button icon variant='simple' onClick={onEdit} label={t('edit')}>\n              <Icon name='pencil' />\n            </Button>\n          )}\n\n          {caseActions && (\n            <MenuButton\n              icon='more'\n              iconOnly\n              variant='simple'\n              text={t('actions')}\n              menu={{\n                items:\n                  followed !== undefined\n                    ? [\n                        {\n                          id: 'follow',\n                          primary: followed ? t('unfollow') : t('follow'),\n                          onClick: () => onFollowedChange?.(!followed)\n                        },\n                        ...caseActions\n                      ]\n                    : caseActions,\n                scrollAt: 20\n              }}\n            />\n          )}\n        </div>\n      </Flex>\n\n      {promotedActions && promotedActions.length > 0 ? (\n        <Flex as={StyledPromotedActions} container={{ wrap: 'wrap', gap: 1, pad: [1, 2] }}>\n          {promotedActions.map(promotedAction => (\n            <Button\n              variant='secondary'\n              onClick={(e: MouseEvent<HTMLButtonElement>) =>\n                promotedAction.onClick?.(promotedAction.id, e)\n              }\n            >\n              {promotedAction.text}\n            </Button>\n          ))}\n        </Flex>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CaseHeader;\n"]}