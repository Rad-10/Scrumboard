import { FunctionComponent, ReactNode, Ref, MouseEvent } from 'react';
import { ForwardProps } from '@pega/cosmos-react-core';
export interface TaskItemProps {
    id: string;
    /** Name of the task displayed in the list. */
    name: string;
    /** Name of the process for the task. */
    processName?: string;
    /** Avatar element to represent the task's assignee. */
    avatar?: ReactNode;
    /** MetaList element with info related to the task. */
    meta?: ReactNode;
    /** Provide a callback to render a button for a task. */
    onOpen?: (id: TaskItemProps['id'], e: MouseEvent<HTMLButtonElement>) => void;
    /** Content for the task when open. */
    content?: ReactNode;
    [key: string]: unknown;
}
export interface TaskListProps {
    items: TaskItemProps[];
    hasFooter?: boolean;
    /** Ref for the wrapping element. */
    ref?: Ref<HTMLElement>;
}
export declare const TaskItem: ({ id, name, avatar, meta, processName, onOpen, content, ...restProps }: TaskItemProps) => JSX.Element;
declare const TaskList: FunctionComponent<TaskListProps & ForwardProps>;
export default TaskList;
//# sourceMappingURL=TaskList.d.ts.map