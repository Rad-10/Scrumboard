import styled, { css, keyframes } from 'styled-components';
import { lighten } from 'polished';
import { Button, defaultThemeProp, StyledButton, StyledCard, StyledFlex, StyledIcon, StyledEmptyState, SummaryList, StyledText, tryCatch, StyledSummaryItem, StyledVisual } from '@pega/cosmos-react-core';
import { StyledCount } from '@pega/cosmos-react-core/lib/components/Badges/Count';
import { StyledCardHeader } from '@pega/cosmos-react-core/lib/components/Card/CardHeader';
import { StyledSummaryListContent } from '@pega/cosmos-react-core/lib/components/SummaryList/SummaryList';
const itemIconSize = '2rem';
export const StyledIntelligentGuidanceList = styled(SummaryList)(({ theme }) => {
    const borderColor = tryCatch(() => lighten(0.1, theme.components['app-shell'].nav['background-color']));
    const hoverColor = tryCatch(() => lighten(0.05, theme.components['app-shell'].nav['background-color']));
    return css `
    min-width: 20rem;
    max-width: 20rem;
    color: ${theme.base.palette.light};
    overflow: hidden;
    box-shadow: ${theme.base.shadow.low};
    @media (min-width: ${theme.base.breakpoints.lg}) {
      min-width: 23rem;
      max-width: 23rem;
    }
    &:not(& &) {
      background-color: ${theme.components['app-shell'].nav['background-color']};
    }
    ${StyledCardHeader} {
      &:not(${StyledCard} ${StyledCard} > &) {
        padding: ${theme.base.spacing};
      }
      ${StyledFlex} > ${StyledIcon} {
        width: ${itemIconSize};
        height: ${itemIconSize};
        padding: calc(0.75 * ${theme.base.spacing});
        border-radius: calc(3 * ${theme.base['border-radius']});
        background-color: ${theme.base.palette.success};
      }
    }
    ${StyledSummaryListContent} {
      &:not(${StyledCard} ${StyledCard} > &) {
        padding: 0;
      }
    }
    ${StyledButton}:enabled:focus {
      box-shadow: ${theme.base.shadow['focus-inverted']};
    }
    ${StyledSummaryItem} {
      padding: ${theme.base.spacing};
      border-top: ${theme.components.button['border-width']} solid ${borderColor};
      outline: none;
      ${StyledVisual} ${StyledIcon} {
        width: ${itemIconSize};
        height: ${itemIconSize};
        padding: calc(0.75 * ${theme.base.spacing});
      }
      ${StyledButton} {
        visibility: hidden;
      }
      &:not(:last-child) {
        border-bottom: none;
      }
      &:hover {
        background-color: ${hoverColor};
        cursor: pointer;
      }
      &:hover,
      &:focus,
      &:focus-within {
        ${StyledButton} {
          visibility: visible;
        }
      }
      &:enabled:focus,
      &:not([disabled]):focus {
        box-shadow: inset ${theme.base.shadow['focus-inverted']};
      }
    }
    ${StyledEmptyState} {
      padding-bottom: ${theme.base.spacing};
      ${StyledIcon}, ${StyledText} {
        color: ${theme.base.palette.light};
      }
    }
  `;
});
StyledIntelligentGuidanceList.defaultProps = defaultThemeProp;
export const StyledIntelligentGuidanceButton = styled(Button)(({ theme }) => {
    return css `
    box-shadow: ${theme.base.shadow.low};
    color: ${theme.base.palette.light};
    background-color: ${theme.base.palette.success};
    width: 4rem;
    height: 4rem;
    svg {
      width: 2.25rem;
      height: 2.25rem;
    }
    ${StyledCount} {
      position: absolute;
      right: 0;
      top: 0;
    }
  `;
});
StyledIntelligentGuidanceButton.defaultProps = defaultThemeProp;
const slideIn = keyframes `
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0);
  }
`;
export const StyledIntelligentGuidance = styled.div(({ theme, isCollapsed }) => {
    return css `
      position: fixed;
      inset-inline-start: calc(2 * ${theme.base.spacing} + var(--appshell-horizontal-offset, 0rem));
      transition: inset-inline-start ${theme.base.animation.speed}
        ${theme.base.animation.timing.ease};
      bottom: ${isCollapsed ? `calc(2 * ${theme.base.spacing}) ` : 0};
      @media (min-width: ${theme.base.breakpoints.md}) {
        bottom: 0;
      }
      z-index: ${theme.base['z-index'].popover};
      ${StyledIntelligentGuidanceList}:not(${StyledIntelligentGuidanceList} ${StyledIntelligentGuidanceList}) {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        transition: transform calc(4 * ${theme.base.animation.speed})
          ${theme.base.animation.timing.ease};
        ${isCollapsed &&
        css `
          transform: translateY(calc(100% - var(--headerHeight)));
        `}
        ${StyledCardHeader} ${StyledButton} {
          transition: transform calc(2 * ${theme.base.animation.speed})
            ${theme.base.animation.timing.ease};
          transform: ${isCollapsed ? 'rotate(-180deg)' : 'rotate(0)'};
        }
      }
      ${StyledIntelligentGuidanceButton} {
        animation: ${slideIn} calc(4 * ${theme.base.animation.speed});
      }
    `;
});
StyledIntelligentGuidance.defaultProps = defaultThemeProp;
//# sourceMappingURL=IntelligentGuidance.styles.js.map