import styled, { css } from 'styled-components';
import { StyledFormControl } from '../FormControl';
import StyledInput from '../Input/Input.styles';
import { StyledText } from '../Text/Text';
import { defaultThemeProp } from '../../theme';
import { StyledButton } from '../Button';
import { StyledFlex } from '../Flex';
export const StyledStepperInput = styled(StyledFormControl)(props => {
    const { theme: { base: { spacing, 'border-radius': baseBorderRadius, palette }, components: { input: { height }, 'form-control': { 'border-radius': formBorderRadius, 'foreground-color': fgColor, 'border-width': borderWidth, ':focus': { 'border-color': focusBorderColor, 'box-shadow': shadow } } } }, size } = props;
    return css `
    &:focus-within:not([disabled]) {
      border-color: ${focusBorderColor};
      box-shadow: ${shadow};
    }
    ${StyledFlex} {
      overflow: auto;
      margin-inline-start: ${spacing};
      margin-inline-end: ${spacing};
    }
    ${StyledInput} {
      color: ${fgColor};
      width: ${size}ch;
      min-width: 1ch;
      outline: none;
      border: 0;
      padding: 0;
      background-color: ${palette['primary-background']};
      &:focus:not([disabled]) {
        box-shadow: none;
      }
    }
    ${StyledText} {
      padding: 0 calc(0.5 * ${spacing});
      white-space: nowrap;
    }
    > ${StyledButton} {
      border-radius: calc(${baseBorderRadius} * ${formBorderRadius});
      margin-inline-start: auto;
      border: 0;
      &:enabled {
        color: ${fgColor};
      }
      min-height: calc(${height} - 2 * ${borderWidth});
      height: calc(${height} - 2 * ${borderWidth});
    }
  `;
});
StyledStepperInput.defaultProps = defaultThemeProp;
const StyledNumberInput = styled(StyledFormControl)(props => {
    const { readOnly, theme: { base: { spacing, palette }, components: { 'form-control': { 'foreground-color': fgColor, ':focus': { 'border-color': focusBorderColor, 'box-shadow': shadow }, ':read-only': { 'background-color': readOnlyBackgroundColor } } } } } = props;
    return css `
    padding: 0 calc(0.5 * ${spacing});
    &:focus-within:not([disabled]) {
      border-color: ${focusBorderColor};
      box-shadow: ${shadow};
    }
    ${StyledInput} {
      color: ${fgColor};
      outline: none;
      border: 0;
      padding: 0 calc(0.5 * ${spacing});
      background-color: ${readOnly ? readOnlyBackgroundColor : palette['primary-background']};
      &:focus:not([disabled]) {
        box-shadow: none;
      }
    }
    ${StyledText} {
      padding: 0 calc(0.5 * ${spacing});
      white-space: nowrap;
    }
  `;
});
StyledNumberInput.defaultProps = defaultThemeProp;
export default StyledNumberInput;
//# sourceMappingURL=NumberInput.styles.js.map