import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { rgba } from 'polished';
import Flex from '../Flex';
import Icon, { StyledIcon, registerIcon } from '../Icon';
import * as galaxyIcon from '../Icon/icons/galaxy.icon';
import Text from '../Text';
import { tryCatch } from '../../utils';
import { useI18n } from '../../hooks';
import { defaultThemeProp } from '../../theme';
registerIcon(galaxyIcon);
export const StyledEmptyState = styled.div(({ theme }) => {
    const color = tryCatch(() => rgba(theme.base.palette['foreground-color'], theme.base.transparency['transparent-2']));
    return css `
    height: 100%;

    ${StyledIcon} {
      font-size: 1.5rem;
      height: 1.5rem;
      width: 1.5rem;
      color: ${color};
    }
  `;
});
StyledEmptyState.defaultProps = defaultThemeProp;
const EmptyState = forwardRef((props, ref) => {
    const t = useI18n();
    const { message = t('no_items'), ...restProps } = props;
    return (_jsxs(Flex, { ...restProps, as: StyledEmptyState, ref: ref, container: { direction: 'column', alignItems: 'center', justify: 'center', gap: 1 }, children: [_jsx(Icon, { name: 'galaxy' }), _jsx(Text, { variant: 'secondary', children: message })] }));
});
export default EmptyState;
//# sourceMappingURL=EmptyState.js.map