import { FunctionComponent, ReactNode, Ref } from 'react';
import { BaseProps, ForwardProps, NoChildrenProp } from '../../types';
export interface BannerProps extends BaseProps, NoChildrenProp {
    /** Controls the styling of the Banner. */
    variant: 'urgent' | 'success' | 'warning' | 'info';
    /**  Heading text for the Banner. */
    heading?: string;
    /**
     * The heading tag to render the provided heading as. This is agnostic to the styling of the heading.
     * @default "h2"
     */
    headingTag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
    /** Pass one or more descriptive messages to inform the user. */
    messages: string[];
    /** ID for the Banner. Used both as onDismiss callback arg and DOM id. */
    id: string;
    /** Link or Button provided to the user for next steps. Link should use regular href and Button should use an onClick handler. */
    action?: ReactNode;
    /** Callback when user explicitly dismisses the Banner. */
    onDismiss?: (id: string) => void;
    ref?: Ref<HTMLDivElement>;
}
export declare const StyledBannerMessages: import("styled-components").StyledComponent<"ul", import("styled-components").DefaultTheme, {
    inline: boolean;
}, never>;
export declare const StyledBannerContent: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
    hasDismiss: boolean;
}, never>;
export declare const StyledBannerMessage: import("styled-components").StyledComponent<"li", import("styled-components").DefaultTheme, {
    inline: boolean;
}, never>;
export declare const StyledBannerDismissColumn: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledBannerDismissButton: import("styled-components").StyledComponent<FunctionComponent<import("../Button").ButtonProps & ForwardProps>, import("styled-components").DefaultTheme, {}, never>;
export declare const StyledBannerStatus: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, Pick<BannerProps, "variant">, never>;
export declare const StyledBanner: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const Banner: FunctionComponent<BannerProps & ForwardProps>;
export default Banner;
//# sourceMappingURL=Banner.d.ts.map