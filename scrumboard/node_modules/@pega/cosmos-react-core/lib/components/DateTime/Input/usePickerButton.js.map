{"version":3,"file":"usePickerButton.js","sourceRoot":"","sources":["../../../../src/components/DateTime/Input/usePickerButton.ts"],"names":[],"mappings":"AAAA,OAAO,EAA4B,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE3D,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAEtE,MAAM,eAAe,GAAG,CACtB,OAAoB,EAQpB,EAAE;IACF,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,CAAC,SAAS,EAAE,aAAa,CAAC,GAAG,UAAU,EAAe,CAAC;IAC7D,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,UAAU,EAAe,CAAC;IAE1D;;aAES;IACT,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,GAAG,EAAE;QACrD,IAAI,IAAI,EAAE;YACR,OAAO,EAAE,EAAE,CAAC;YACZ,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SAClC;IACH,CAAC,CAAC,CAAC;IAEH,SAAS,CACP,CAAC,CAAC,EAAE;QACF,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,OAAO,EAAE,EAAE,CAAC;QACZ,OAAO,CAAC,KAAK,CAAC,CAAC;QACf,6EAA6E;QAC7E,IAAI,CAAC,CAAC,aAAa,KAAK,SAAS,EAAE;YACjC,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,QAAQ,EAAE,KAAK,EAAE,CAAC;SACnB;IACH,CAAC,EACD,SAAS,EACT,CAAC,SAAS,CAAC,CACZ,CAAC;IAEF,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC1E,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["import { Dispatch, SetStateAction, useState } from 'react';\n\nimport { useElement, useEscape, useOuterEvent } from '../../../hooks';\n\nconst usePickerButton = (\n  onClose?: () => void\n): [\n  boolean,\n  Dispatch<SetStateAction<boolean>>,\n  HTMLElement | null,\n  (instance: HTMLElement | null) => void,\n  HTMLElement | null,\n  (instance: HTMLElement | null) => void\n] => {\n  const [open, setOpen] = useState(false);\n  const [popoverEl, setPopoverRef] = useElement<HTMLElement>();\n  const [buttonEl, setButtonEl] = useElement<HTMLElement>();\n\n  /* Input calls onBlur callback in 'focusout' handler, so any immediate changes to the value, like setting midnight by default in DateTimeInput,\n     must be made earlier - in 'mousedown' event. Although, we can't close the popover before all the events' processing ends, so we need to delay\n     it. */\n  useOuterEvent('mousedown', [popoverEl, buttonEl], () => {\n    if (open) {\n      onClose?.();\n      setTimeout(() => setOpen(false));\n    }\n  });\n\n  useEscape(\n    e => {\n      e.preventDefault();\n      onClose?.();\n      setOpen(false);\n      // Stop propagation if triggered inside the picker to prevent closing a modal\n      if (e.currentTarget === popoverEl) {\n        e.stopPropagation();\n        buttonEl?.focus();\n      }\n    },\n    popoverEl,\n    [popoverEl]\n  );\n\n  return [open, setOpen, popoverEl, setPopoverRef, buttonEl, setButtonEl];\n};\n\nexport default usePickerButton;\n"]}