{"version":3,"file":"DateTimeInput.js","sourceRoot":"","sources":["../../../../src/components/DateTime/Input/DateTimeInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeEvent,\n  ClipboardEvent,\n  forwardRef,\n  FunctionComponent,\n  MouseEvent,\n  PropsWithoutRef,\n  Ref,\n  RefObject,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport styled from 'styled-components';\n\nimport { hasProp } from '@pega/cosmos-react-core/lib/utils';\n\nimport { defaultThemeProp } from '../../../theme';\nimport { ForwardProps } from '../../../types';\nimport { FormControlProps, StyledFormControl } from '../../FormControl';\nimport FormField from '../../FormField';\nimport {\n  useConfiguration,\n  useConsolidatedRef,\n  useFocusWithin,\n  useI18n,\n  useOuterEvent\n} from '../../../hooks';\nimport Select, { Option } from '../../Select';\nimport Flex from '../../Flex';\nimport Button from '../../Button';\nimport Icon, { registerIcon } from '../../Icon';\nimport * as timesIcon from '../../Icon/icons/times.icon';\nimport * as calendarIcon from '../../Icon/icons/calendar.icon';\nimport Popover from '../../Popover';\nimport DatePicker from '../Picker/DatePicker';\nimport { MinuteInterval } from '../Picker/TimePicker';\nimport DateTimeProps, { DateTimeCallbackParameter } from '../DateTime.types';\n\nimport StyledDateTime, { StyledInputContainer } from './DateTime.styles';\nimport {\n  ClockFormat,\n  generatePickerButtonAriaLabel,\n  getDateFormat,\n  getTimeOptions,\n  is12HClockFormat,\n  parsePastedTextToDate,\n  parseToDate,\n  validateDate,\n  validateTime\n} from './utils';\nimport TimeInput from './TimeInput';\nimport useAutoFocusNextInput from './useAutoFocusNextInput';\nimport PartInput from './PartInput';\nimport usePickerButton from './usePickerButton';\nimport { DateParts, DateTimeParts, TimeParts } from './DateTimeInput.types';\n\nregisterIcon(timesIcon, calendarIcon);\n\nexport interface DateTimeInputProps extends DateTimeProps {\n  /**\n   * Display the time with seconds.\n   * @default false\n   */\n  withSeconds?: boolean;\n  /**\n   * Display additional column with week number in date picker popover.\n   * @default false\n   */\n  showWeekNumber?: boolean;\n  /**\n   * Defines interval for time picker options (in minutes).\n   * @default 30\n   */\n  pickerInterval?: MinuteInterval;\n  /**\n   * Defines clock format that overrides locale based format.\n   */\n  clockFormat?: ClockFormat;\n  /** Pass a heading and content to show additional information on the field. */\n  additionalInfo?: FormControlProps['additionalInfo'];\n}\n\nexport const StyledDateTimeInput = styled(StyledDateTime)<DateTimeInputProps>`\n  padding-inline-end: 0;\n  min-width: 0;\n`;\n\nStyledDateTimeInput.defaultProps = defaultThemeProp;\n\nconst StyledDateTimeFieldset = styled.fieldset`\n  min-width: 0;\n`;\n\nfunction getMeridiem(hour: number) {\n  return hour >= 12 ? 'PM' : 'AM';\n}\n\nconst convertTo12h = (hour: number) => {\n  let converted: number = hour;\n  if (hour > 12) converted = hour - 12;\n  else if (hour === 0) converted = 12;\n  return converted;\n};\n\nconst convertTo24h = (hour: number, meridiem: string) => {\n  let converted: number = hour;\n  if (meridiem === 'PM' && hour < 12) converted = hour + 12;\n  else if (meridiem === 'AM' && hour === 12) converted = 0;\n  return converted;\n};\n\nfunction validateDateTimeState(\n  year: number,\n  month: number,\n  day: number,\n  hour: number,\n  minute: number,\n  second: number,\n  is12h: boolean\n) {\n  return validateDate(year, month, day) && validateTime(hour, minute, second, is12h);\n}\n\nconst convertToCallbackParameter = (\n  date: Date,\n  parts: DateTimeParts<string | undefined>\n): DateTimeCallbackParameter => {\n  const withSeconds = hasProp(parts, 'second');\n  const {\n    year,\n    month: monthIndex,\n    day,\n    hour,\n    minute,\n    second = date.getUTCSeconds().toString(),\n    dayPeriod: meridiem\n  } = parts;\n  const toValidate = withSeconds\n    ? [year, monthIndex, day, hour, minute, second]\n    : [year, monthIndex, day, hour, minute];\n\n  if (toValidate.every(Boolean)) {\n    const is12h = meridiem !== undefined;\n\n    if (\n      !validateDateTimeState(\n        Number(year),\n        Number(monthIndex) + 1,\n        Number(day),\n        Number(hour),\n        Number(minute),\n        Number(second),\n        is12h\n      )\n    ) {\n      return {\n        valueAsISOString: '',\n        valueAsTimestamp: NaN,\n        state: 'invalid'\n      };\n    }\n\n    const resultDate = new Date(date);\n    resultDate.setUTCFullYear(Number(year), Number(monthIndex), Number(day));\n    resultDate.setUTCHours(\n      is12h ? convertTo24h(Number(hour), meridiem!) : Number(hour),\n      Number(minute),\n      Number(second)\n    );\n\n    return {\n      valueAsISOString: resultDate.toISOString(),\n      valueAsTimestamp: resultDate.getTime()\n    };\n  }\n  if (toValidate.every(p => !p)) {\n    return {\n      valueAsISOString: '',\n      valueAsTimestamp: undefined\n    };\n  }\n  return {\n    valueAsISOString: '',\n    valueAsTimestamp: NaN,\n    state: 'incomplete'\n  };\n};\n\nfunction dateOptions() {\n  return {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n  } as const;\n}\n\nconst DateTimeInput: FunctionComponent<DateTimeInputProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<DateTimeInputProps>, ref: Ref<HTMLDivElement>) => {\n    const { locale } = useConfiguration();\n    const {\n      defaultValue,\n      value = defaultValue,\n      min,\n      max,\n      id,\n      label,\n      labelHidden,\n      withSeconds = false,\n      clockFormat,\n      info = `${getDateFormat(locale).join('')} ${getDateFormat(\n        locale,\n        getTimeOptions(withSeconds),\n        true\n      ).join('')}`,\n      status,\n      required,\n      readOnly,\n      disabled,\n      showWeekNumber,\n      pickerInterval = 30,\n      onChange,\n      onFocus,\n      onBlur,\n      onResolveSuggestion,\n      additionalInfo,\n      autoFocus,\n      ...restProps\n    } = props;\n\n    const t = useI18n();\n    const containerRef = useConsolidatedRef(ref);\n\n    const dateTime = value !== undefined ? parseToDate(value) : undefined;\n    const is12h = clockFormat ? clockFormat === 12 : is12HClockFormat(locale);\n\n    const [meridiem, setMeridiem] = useState<'AM' | 'PM' | undefined>(\n      is12h ? () => (dateTime ? getMeridiem(dateTime.getUTCHours()) : 'AM') : undefined\n    );\n\n    const newMeridiem = dateTime ? getMeridiem(dateTime.getUTCHours()) : 'AM';\n\n    useEffect(() => {\n      setMeridiem(newMeridiem);\n    }, [newMeridiem]);\n\n    const [\n      yearInputRef,\n      monthInputRef,\n      dayInputRef,\n      hourInputRef,\n      minuteInputRef,\n      secondInputRef,\n      meridiemSelectRef\n    ] = [\n      useRef<HTMLInputElement>(null),\n      useRef<HTMLInputElement>(null),\n      useRef<HTMLInputElement>(null),\n      useRef<HTMLInputElement>(null),\n      useRef<HTMLInputElement>(null),\n      useRef<HTMLInputElement>(null),\n      useRef<HTMLSelectElement>(null)\n    ];\n\n    useAutoFocusNextInput([\n      yearInputRef,\n      monthInputRef,\n      dayInputRef,\n      hourInputRef,\n      minuteInputRef,\n      secondInputRef\n    ]);\n\n    const pickDateParts = (): DateParts<string | undefined> => {\n      return {\n        day: dayInputRef.current?.value || undefined,\n        month: monthInputRef.current?.value\n          ? (Number(monthInputRef.current.value) - 1).toString()\n          : undefined,\n        year: yearInputRef.current?.value || undefined\n      };\n    };\n\n    const pickTimeParts = (): TimeParts<string | undefined> => {\n      const parts: TimeParts<string | undefined> = {\n        hour: hourInputRef.current?.value || undefined,\n        minute: minuteInputRef.current?.value || undefined\n      };\n      if (withSeconds) parts.second = secondInputRef.current?.value;\n      if (is12h) parts.dayPeriod = meridiemSelectRef.current?.value;\n      return parts;\n    };\n\n    const pickParts = (): DateTimeParts<string | undefined> => {\n      return { ...pickDateParts(), ...pickTimeParts() };\n    };\n\n    const currentlySelectedDate = () => {\n      const parts = pickDateParts();\n      if (Object.values(parts).every(Boolean)) {\n        const year = Number(parts.year);\n        const month = Number(parts.month);\n        const day = Number(parts.day);\n\n        return validateDate(year, month + 1, day)\n          ? new Date(Date.UTC(year, month, day))\n          : undefined;\n      }\n    };\n\n    const currentlySelectedTime = () => {\n      const parts = pickParts();\n\n      if (Object.values(parts).every(Boolean)) {\n        const hour = Number(parts.hour);\n        const minute = Number(parts.minute);\n        const second = parts.second ? Number(parts.second) : 0;\n\n        const current = dateTime ?? new Date();\n        return validateTime(hour, minute, second, is12h)\n          ? new Date(\n              current.setUTCHours(\n                is12h ? convertTo24h(hour, parts.dayPeriod!) : hour,\n                minute,\n                second\n              )\n            )\n          : undefined;\n      }\n    };\n\n    const currentlySelectedDateTime = () => {\n      const selectedDate = currentlySelectedDate();\n      const selectedTime = currentlySelectedTime();\n      return selectedDate && selectedTime\n        ? new Date(\n            selectedDate.setUTCHours(\n              selectedTime.getUTCHours(),\n              selectedTime.getUTCMinutes(),\n              selectedTime.getUTCSeconds()\n            )\n          )\n        : undefined;\n    };\n\n    const setDefaultTimeIfEmpty = () => {\n      // set value to midnight if time empty, skip if date not fully set\n      if (\n        Object.values(pickDateParts()).every(Boolean) &&\n        Object.values(pickTimeParts()).every(p => !p)\n      ) {\n        if (hourInputRef.current) hourInputRef.current.value = is12h ? '12' : '00';\n\n        if (minuteInputRef.current) minuteInputRef.current.value = '00';\n\n        if (withSeconds && secondInputRef.current) secondInputRef.current.value = '00';\n\n        if (is12h && meridiemSelectRef.current) {\n          meridiemSelectRef.current.value = 'AM';\n          setMeridiem('AM');\n        }\n      }\n    };\n\n    const [open, setOpen, , setPopoverRef, buttonEl, setButtonEl] =\n      usePickerButton(setDefaultTimeIfEmpty);\n\n    const onInputChange = () => {\n      onChange?.(\n        convertToCallbackParameter(dateTime ? new Date(dateTime) : new Date(), pickParts())\n      );\n      buttonEl?.setAttribute(\n        'aria-label',\n        generatePickerButtonAriaLabel(currentlySelectedDateTime(), 'datetime', locale, t, open)\n      );\n    };\n\n    const setInputValue = (newValue: Date) => {\n      dayInputRef.current!.value = newValue.getUTCDate().toString().padStart(2, '0');\n      monthInputRef.current!.value = (newValue.getUTCMonth() + 1).toString().padStart(2, '0');\n      yearInputRef.current!.value = newValue.getUTCFullYear().toString();\n      const hours = newValue.getUTCHours();\n      hourInputRef.current!.value = (is12h ? convertTo12h(hours) : hours)\n        .toString()\n        .padStart(2, '0');\n      minuteInputRef.current!.value = newValue.getUTCMinutes().toString().padStart(2, '0');\n      if (withSeconds) {\n        secondInputRef.current!.value = newValue.getUTCSeconds().toString().padStart(2, '0');\n      }\n      if (meridiemSelectRef.current) {\n        meridiemSelectRef.current.value = newValue ? getMeridiem(newValue.getUTCHours()) : 'AM';\n      }\n\n      setMeridiem(newValue ? getMeridiem(newValue.getUTCHours()) : 'AM');\n    };\n\n    const onPaste = (e: ClipboardEvent) => {\n      const text = e.clipboardData.getData('text');\n      const date = parsePastedTextToDate(text, locale, dateTime || new Date());\n      if (date) {\n        e.preventDefault();\n        setInputValue(date);\n        onInputChange();\n      }\n    };\n\n    const inputContainerRef = useRef<HTMLDivElement>(null);\n\n    const onFocusChange = (focused: boolean) => {\n      const callbackParam = convertToCallbackParameter(\n        dateTime ? new Date(dateTime) : new Date(),\n        pickParts()\n      );\n      if (onFocus && focused) onFocus(callbackParam);\n      if (!focused) {\n        if (inputContainerRef.current) inputContainerRef.current.scrollTop = 0;\n        onBlur?.(callbackParam);\n      }\n    };\n\n    // autoclose picker on focusing out\n    useOuterEvent('focusin', [containerRef], e => {\n      if (containerRef.current?.contains(e.relatedTarget as HTMLElement)) setOpen(false);\n    });\n\n    const displayNames = new Intl.DisplayNames(locale, { style: 'long', type: 'dateTimeField' });\n\n    const DayInput = (\n      <PartInput\n        key='day'\n        placeholder={t('day_placeholder')}\n        aria-label={displayNames.of('day')}\n        value={dateTime?.getUTCDate()}\n        onChange={onInputChange}\n        size={2}\n        maxLength={2}\n        readOnly={readOnly}\n        min={1}\n        max={31}\n        ref={dayInputRef}\n      />\n    );\n\n    const MonthInput = (\n      <PartInput\n        key='month'\n        placeholder={t('month_placeholder')}\n        aria-label={displayNames.of('month')}\n        value={dateTime ? dateTime.getUTCMonth() + 1 : undefined}\n        onChange={onInputChange}\n        size={2}\n        maxLength={2}\n        readOnly={readOnly}\n        min={1}\n        max={12}\n        ref={monthInputRef}\n      />\n    );\n\n    const YearInput = (\n      <PartInput\n        key='year'\n        placeholder={t('year_placeholder')}\n        aria-label={displayNames.of('year')}\n        value={dateTime?.getUTCFullYear()}\n        onChange={onInputChange}\n        size={4}\n        maxLength={4}\n        padWithZeros={false}\n        readOnly={readOnly}\n        min={1}\n        ref={yearInputRef}\n      />\n    );\n\n    const hour = dateTime && is12h ? convertTo12h(dateTime.getUTCHours()) : dateTime?.getUTCHours();\n\n    const HourInput = (\n      <PartInput\n        key='hour'\n        placeholder={t('hour_placeholder')}\n        aria-label={displayNames.of('hour')}\n        value={hour}\n        onChange={onInputChange}\n        size={2}\n        maxLength={2}\n        readOnly={readOnly}\n        min={is12h ? 1 : 0}\n        max={is12h ? 12 : 23}\n        ref={hourInputRef}\n      />\n    );\n\n    const MinuteInput = (\n      <PartInput\n        key='minute'\n        placeholder={t('minute_placeholder')}\n        aria-label={displayNames.of('minute')}\n        value={dateTime?.getUTCMinutes()}\n        onChange={onInputChange}\n        size={2}\n        maxLength={2}\n        readOnly={readOnly}\n        max={59}\n        ref={minuteInputRef}\n      />\n    );\n\n    const SecondInput = (\n      <PartInput\n        key='second'\n        placeholder={t('second_placeholder')}\n        aria-label={displayNames.of('second')}\n        value={dateTime?.getUTCSeconds()}\n        onChange={onInputChange}\n        size={2}\n        maxLength={2}\n        readOnly={readOnly}\n        max={59}\n        ref={secondInputRef}\n      />\n    );\n\n    const Period = (\n      <Select\n        ref={meridiemSelectRef}\n        aria-label={displayNames.of('dayPeriod')}\n        key='period'\n        value={meridiem}\n        required={required}\n        disabled={disabled}\n        onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n          setMeridiem(e.target.value as 'AM' | 'PM');\n          if (Object.values(pickParts()).every(Boolean)) onInputChange();\n        }}\n        readOnly={readOnly}\n      >\n        <Option value='AM'>{t('meridiem_value_am')}</Option>\n        <Option value='PM'>{t('meridiem_value_pm')}</Option>\n      </Select>\n    );\n\n    const orderedRefs: RefObject<HTMLInputElement>[] = [];\n\n    const dateInputs = getDateFormat(locale, dateOptions()).map(part => {\n      switch (part) {\n        case 'DD':\n          orderedRefs.push(dayInputRef);\n          return DayInput;\n        case 'MM':\n          orderedRefs.push(monthInputRef);\n          return MonthInput;\n        case 'YYYY':\n          orderedRefs.push(yearInputRef);\n          return YearInput;\n        default:\n          return part;\n      }\n    });\n\n    const timeInputs = getDateFormat(locale, getTimeOptions(withSeconds, is12h)).map(part => {\n      switch (part) {\n        case 'hh':\n          orderedRefs.push(hourInputRef);\n          return HourInput;\n        case 'mm':\n          orderedRefs.push(minuteInputRef);\n          return MinuteInput;\n        case 'ss':\n          orderedRefs.push(secondInputRef);\n          return SecondInput;\n        case 'AM':\n        case 'PM':\n          return Period;\n        default:\n          return part;\n      }\n    });\n\n    useEffect(() => {\n      if (autoFocus) orderedRefs[0].current?.focus();\n    }, [autoFocus]);\n\n    useFocusWithin([containerRef], onFocusChange);\n\n    const [timeInputStatus, setTimeInputStatus] = useState<FormControlProps['status']>();\n\n    const Picker = (\n      <>\n        <Button\n          variant='simple'\n          icon\n          ref={setButtonEl}\n          onClick={() => {\n            setTimeInputStatus(undefined);\n            setOpen(cur => !cur);\n          }}\n          aria-label={generatePickerButtonAriaLabel(\n            currentlySelectedDateTime(),\n            'datetime',\n            locale,\n            t,\n            open\n          )}\n          readOnly={readOnly}\n          disabled={disabled}\n        >\n          <Icon name={open ? 'times' : 'calendar'} />\n        </Button>\n        {open && (\n          <Popover\n            ref={setPopoverRef}\n            target={buttonEl}\n            placement='bottom-end'\n            strategy='fixed'\n            modifiers={[\n              {\n                name: 'flip',\n                options: {\n                  fallbackPlacements: ['top-end', 'right', 'left']\n                }\n              }\n            ]}\n          >\n            <DatePicker\n              selected={currentlySelectedDate()}\n              onChange={selected => {\n                dayInputRef.current!.value = selected.getUTCDate().toString().padStart(2, '0');\n                monthInputRef.current!.value = (selected.getUTCMonth() + 1)\n                  .toString()\n                  .padStart(2, '0');\n                yearInputRef.current!.value = selected.getUTCFullYear().toString();\n                onInputChange();\n              }}\n              min={min}\n              max={max}\n              showWeekNumber={showWeekNumber}\n            />\n\n            <TimeInput\n              label={t('time_text')}\n              pickerInterval={pickerInterval}\n              value={currentlySelectedTime()}\n              withSeconds={withSeconds}\n              clockFormat={clockFormat}\n              status={timeInputStatus}\n              onChange={selected => {\n                if (Number.isNaN(selected.valueAsTimestamp)) {\n                  if (selected.state !== 'incomplete') {\n                    setTimeInputStatus('warning');\n                  }\n                  return;\n                }\n                setTimeInputStatus(undefined);\n                const selectedDate = selected.valueAsTimestamp\n                  ? new Date(selected.valueAsTimestamp)\n                  : undefined;\n                hourInputRef.current!.value = selectedDate\n                  ? (is12h ? convertTo12h(selectedDate.getUTCHours()) : selectedDate.getUTCHours())\n                      .toString()\n                      .padStart(2, '0')\n                  : '';\n                minuteInputRef.current!.value = selectedDate\n                  ? selectedDate.getUTCMinutes().toString().padStart(2, '0')\n                  : '';\n                if (withSeconds)\n                  secondInputRef.current!.value = selectedDate\n                    ? selectedDate.getUTCSeconds().toString().padStart(2, '0')\n                    : '';\n                if (selectedDate) {\n                  if (meridiemSelectRef.current) {\n                    meridiemSelectRef.current!.value = getMeridiem(selectedDate.getUTCHours());\n                  }\n                  setMeridiem(getMeridiem(selectedDate.getUTCHours()));\n                }\n                onInputChange();\n              }}\n              onBlur={selected => {\n                if (Number.isNaN(selected.valueAsTimestamp)) setTimeInputStatus('warning');\n                else setTimeInputStatus(undefined);\n              }}\n            />\n          </Popover>\n        )}\n      </>\n    );\n\n    const Comp = (\n      <Flex\n        as={StyledDateTimeInput}\n        forwardedAs={StyledFormControl}\n        hasSuggestion={status === 'pending' && !!onResolveSuggestion}\n        container={{ alignItems: 'center', wrap: 'nowrap' }}\n        status={status}\n        readOnly={readOnly}\n        disabled={disabled}\n        ref={containerRef}\n        onClick={(e: MouseEvent) => {\n          if (e.target === containerRef.current) orderedRefs[0].current?.focus();\n        }}\n        {...restProps}\n      >\n        <Flex\n          ref={inputContainerRef}\n          as={StyledInputContainer}\n          container={{ alignItems: 'center', wrap: 'wrap' }}\n          onPaste={onPaste}\n        >\n          {dateInputs}\n          {timeInputs}\n        </Flex>\n        {!readOnly && Picker}\n      </Flex>\n    );\n\n    useAutoFocusNextInput(orderedRefs);\n\n    return label ? (\n      <FormField\n        as={StyledDateTimeFieldset}\n        labelAs='legend'\n        aria-labelledby={id}\n        ref={ref}\n        {...{\n          label,\n          labelHidden,\n          id,\n          info,\n          status,\n          required,\n          disabled,\n          onResolveSuggestion,\n          additionalInfo\n        }}\n      >\n        {Comp}\n      </FormField>\n    ) : (\n      Comp\n    );\n  }\n);\n\nexport default DateTimeInput;\n"]}