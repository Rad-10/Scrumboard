{"version":3,"file":"DurationInput.types.js","sourceRoot":"","sources":["../../../../../src/components/DateTime/Input/Duration/DurationInput.types.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,MAMX;AAND,WAAY,MAAM;IAChB,6BAAmB,CAAA;IACnB,6BAAmB,CAAA;IACnB,yBAAe,CAAA;IACf,uBAAa,CAAA;IACb,iCAAuB,CAAA;AACzB,CAAC,EANW,MAAM,KAAN,MAAM,QAMjB","sourcesContent":["import { FormControlProps } from '../../../FormControl';\n\nexport enum Format {\n  Seconds = 'seconds',\n  Minutes = 'minutes',\n  Hours = 'hours',\n  Days = 'days',\n  Formatted = 'formatted'\n}\n\nexport default interface DurationInputProps {\n  /** Number of milliseconds value for controlled input. */\n  value?: number;\n  /** Number of milliseconds value for uncontrolled input.\n   * @default 0\n   */\n  defaultValue?: number;\n  /**\n   * Sets the duration format.\n   * @default seconds\n   */\n  format?: Format;\n  /** Callback fired on lost focus of the input field. */\n  onChange?: (value: number | undefined) => void;\n  /** Callback fired after new format option selected. */\n  onSelect?: (value: Format) => void;\n  /**\n   * Sets DOM id for the control and associates label element via 'for' attribute.\n   * If an id is not pass, a random id will be generated for any render.\n   */\n  id?: FormControlProps['id'];\n  /** Set visual state based on a validation state. */\n  status?: FormControlProps['status'];\n  /** Pass a string or a fragment with an Icon and string. */\n  label?: FormControlProps['label'];\n  /** Visually hides the label region. */\n  labelHidden?: FormControlProps['labelHidden'];\n  /** It is recommended to pass a simple string to offer guidance. Text will be styled based on status prop. */\n  info?: FormControlProps['info'];\n  /** Indicate if the field is required. The browser defaults to false. */\n  required?: FormControlProps['required'];\n  /** Disable the control. The browser defaults to false. */\n  disabled?: FormControlProps['disabled'];\n  /** Makes the input non editable and non clickable. The browser defaults to false. */\n  readOnly?: FormControlProps['readOnly'];\n  /** Sets html name attribute for the underlying control. Useful for mapping to a data field. */\n  name?: FormControlProps['name'];\n  /** Automatically focuses the input on render. */\n  autoFocus?: boolean;\n  /** Pass a heading and content to show additional information on the field. */\n  additionalInfo?: FormControlProps['additionalInfo'];\n}\n"]}