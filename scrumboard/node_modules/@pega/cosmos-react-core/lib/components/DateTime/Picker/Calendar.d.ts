import { FunctionComponent } from 'react';
import { ForwardProps } from '../../../types';
import { FormControlProps } from '../../FormControl';
export interface CalendarProps {
    /**
     * Sets DOM id for the control and associates label element via 'for' attribute.
     * If an id is not pass, a random id will be generated for any render.
     */
    id?: FormControlProps['id'];
    /**
     * Defines default date that will be selected initially when the Calendar is visible.
     */
    selected?: Date;
    /**
     * Defines currently visible month.
     * @default new Date()
     */
    current?: Date;
    /** Defines dates range with start date and end date that can be set by the user. */
    selectedRange?: {
        startDate: Date | undefined;
        endDate: Date | undefined;
    };
    /** Defines if days should be highlighted for range selection  */
    showHighlight?: boolean;
    /** Defines if week numbers should be displayed in calendar  */
    showWeekNumber?: boolean;
    /**
     * The mode of the calendar that will be rendered, ie. whether single date or week are selectable.
     * @default "date"
     */
    mode?: 'date' | 'week';
    /** Callback fired when new day is selected. */
    onSelect?: (date: Date) => void;
    /** Callback fired when user focuses new day. */
    onFocus?: (date: Date) => void;
    /** Sets the type of calendar to be used. This will be determined by locale if no value is provided. */
    calendarType?: string;
    /** Defines minimum available value that can be selected by the user. */
    min?: string | number | Date;
    /** Defines maximum available value that can be selected by the user. */
    max?: string | number | Date;
    /** Set the calendar to disabled state, ie. non-interactive. */
    disabled?: boolean;
}
declare const Calendar: FunctionComponent<CalendarProps & ForwardProps>;
export default Calendar;
//# sourceMappingURL=Calendar.d.ts.map