import { FC } from 'react';
import { ForwardProps } from '../../../types';
import { FormControlProps } from '../../FormControl';
export interface WeeksProps {
    /**
     * Sets DOM id for the control and associates label element via 'for' attribute.
     * If an id is not pass, a random id will be generated for any render.
     */
    id?: FormControlProps['id'];
    /**
     * Defines default week that will be selected when the Date Picker is opened.
     */
    selected?: Date;
    /**
     * Defines default week that will be focused initially when the Date Picker is opened.
     * @default new Date()
     */
    current?: Date;
    /** Callback fired when user focuses new week. */
    onFocus?: (date: Date) => void;
    /** Callback fired when new week is selected. */
    onSelect?: (date: Date) => void;
    /** Sets the type of calendar to be used. This will be determined by locale if no value is provided. */
    calendarType?: string;
    /** Defines minimum available value that can be selected by the user. */
    min?: string | number | Date;
    /** Defines maximum available value that can be selected by the user. */
    max?: string | number | Date;
    /** Set the calendar to disabled state, ie. non-interactive. */
    disabled?: boolean;
    /** Should text be in long or short format (ie. only number). */
    size?: 'short' | 'long';
}
export declare const StyledWeekNumbers: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
declare const Weeks: FC<WeeksProps & ForwardProps>;
export default Weeks;
//# sourceMappingURL=Weeks.d.ts.map