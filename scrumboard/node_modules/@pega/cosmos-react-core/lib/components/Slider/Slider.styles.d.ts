import { PropsWithDefaults } from '../../types';
import { FormControlProps } from '../FormControl';
import SliderProps from './Slider.types';
export declare type SliderPropsWithDefaults = PropsWithDefaults<SliderProps>;
export declare const StyledThumb: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledBar: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
    showProgress?: boolean | undefined;
}, never>;
export declare const StyledTrack: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledTicksContainer: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledSliderTrackWrapper: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledPreview: import("styled-components").StyledComponent<import("react").FunctionComponent<import("../Number").NumberDisplayProps & import("../../types").ForwardProps>, import("styled-components").DefaultTheme, {
    size: number;
}, never>;
export declare const StyledSlider: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {
    orientation: 'vertical' | 'horizontal';
    status: FormControlProps['status'];
}, never>;
export declare const StyledTickItem: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, ({} & import("../Grid/Grid.types").default) & {
    lowerBoundaryItem?: boolean | undefined;
    upperBoundaryItem?: boolean | undefined;
    orientation: 'horizontal' | 'vertical';
}, never>;
export declare const StyledTickButton: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, {}, never>;
//# sourceMappingURL=Slider.styles.d.ts.map