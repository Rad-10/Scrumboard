import type { FormattingOptions } from './CreditCard.types';
/**
 * Returns a formatted and obfuscated on demand partial credit card number.
 * @param value starting, partial number.
 * @param formattingOptions additional formatting options
 */
export declare const formatCreditCard: (value: string, { obfuscation }?: FormattingOptions) => string;
/** Returns maximum total length of formatted credit card of given type including gaps. */
export declare const creditCardTotalLength: (cardType: string) => number;
/** Returns true if given first numbers match a pattern of any card, false otherwise.  */
export declare const isPossibleCardNumber: (cardNumber: string) => boolean;
/** Returns true if given card number is valid (matches the pattern and length of a card type), false otherwise. */
export declare const isValidCreditCard: (cardNumber: number) => boolean;
//# sourceMappingURL=utils.d.ts.map