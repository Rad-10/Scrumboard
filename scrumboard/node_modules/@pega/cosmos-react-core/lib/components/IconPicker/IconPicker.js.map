{"version":3,"file":"IconPicker.js","sourceRoot":"","sources":["../../../src/components/IconPicker/IconPicker.tsx"],"names":[],"mappings":";AAAA,OAAO,EAEL,UAAU,EACV,QAAQ,EACR,WAAW,EACX,MAAM,EAEN,SAAS,EAGV,MAAM,OAAO,CAAC;AAGf,OAAO,QAA2B,MAAM,aAAa,CAAC;AACtD,OAAO,KAAK,MAAM,mBAAmB,CAAC;AACtC,OAAO,IAAI,MAAM,SAAS,CAAC;AAC3B,OAAO,EAAE,WAAW,EAA4B,MAAM,SAAS,CAAC;AAChE,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAwBlD,MAAM,gBAAgB,GAAG,CAAC,QAAyB,EAAE,WAAmB,EAAE,EAAE;IAC1E,IAAI,CAAC,WAAW;QAAE,OAAO,QAAQ,CAAC;IAElC,MAAM,MAAM,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;IAChD,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC;AAEF,MAAM,QAAQ,GAAoB,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACjD,OAAO;QACL,EAAE,EAAE,IAAI;QACR,OAAO,EAAE,IAAI;QACb,MAAM,EAAE,KAAC,IAAI,IAAC,IAAI,EAAE,IAAI,GAAI;QAC5B,QAAQ,EAAE,KAAK;KAChB,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,QAAQ,GAAG,EAAE,CAAC;AAEpB,MAAM,UAAU,GAAsD,UAAU,CAC9E,CAAC,KAAuC,EAAE,GAA0B,EAAE,EAAE;IACtE,MAAM,EAAE,gBAAgB,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;IAErE,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAqB,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;IAE1F,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClD,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;IACzE,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnD,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC;IACpB,MAAM,iBAAiB,GAAG,MAAM,EAAiC,CAAC;IAElE,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE;QAClC,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAC9D,QAAQ,CACN,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,YAAY,EAAE,eAAe,CAAC,CACxF,CAAC;QACF,UAAU,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;IAC9C,CAAC,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC;IAEhC,SAAS,CAAC,GAAG,EAAE;QACb,UAAU,EAAE,CAAC;IACf,CAAC,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC;IAEhC,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,GAAG,EAAE;YACV,IAAI,iBAAiB,CAAC,OAAO;gBAAE,YAAY,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACzE,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE;QAChC,IAAI,CAAC,SAAS,EAAE;YACd,YAAY,CAAC,IAAI,CAAC,CAAC;YACnB,IAAI,iBAAiB,CAAC,OAAO;gBAAE,YAAY,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YACvE,iBAAiB,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;gBAC1C,YAAY,CAAC,KAAK,CAAC,CAAC;gBACpB,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACnB,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAClC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,KAAK,CAC3C,SAAS,CAAC,MAAM,EAChB,SAAS,CAAC,MAAM,GAAG,QAAQ,CAC5B,EACD,IAAI,CAAC,EAAE,CAAC,CAAC;wBACP,GAAG,IAAI;wBACP,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,EAAE;qBAC5D,CAAC,CACH,CAAC;oBAEF,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;wBAAE,UAAU,CAAC,KAAK,CAAC,CAAC;oBAE7C,OAAO,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,CAAC;SACT;IACH,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC;IAE7B,MAAM,UAAU,GAAG,WAAW,CAC5B,CAAC,QAAgB,EAAE,EAAE;QACnB,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC1B,cAAc,CAAC,EAAE,CAAC,CAAC;QACnB,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;IACvB,CAAC,EACD,CAAC,QAAQ,CAAC,CACX,CAAC;IAEF,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE;QACtC,eAAe,CAAC,EAAE,CAAC,CAAC;QACpB,QAAQ,CAAC,GAAG,CAAC,EAAE,CACb,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YAC9B,OAAO;gBACL,GAAG,IAAI;gBACP,QAAQ,EAAE,KAAK;aAChB,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,KAAC,QAAQ,OACH,SAAS,EACb,GAAG,EAAE,GAAG,EACR,QAAQ,EACN,YAAY;YACV,CAAC,CAAC;gBACE,KAAK,EAAE;oBACL,EAAE,EAAE,YAAY;oBAChB,IAAI,EAAE,YAAY;iBACnB;aACF;YACH,CAAC,CAAC,SAAS,EAEf,KAAK,EAAE,WAAW,EAClB,QAAQ,EAAE,CAAC,CAAgC,EAAE,EAAE;YAC7C,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;gBAAE,cAAc,EAAE,CAAC;YACtC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,EACD,MAAM,EAAE,GAAG,EAAE;YACX,UAAU,EAAE,CAAC;YACb,cAAc,CAAC,EAAE,CAAC,CAAC;QACrB,CAAC,EACD,IAAI,EAAE;YACJ,KAAK;YACL,WAAW,EAAE,UAAU;YACvB,QAAQ;YACR,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS;YAClE,SAAS,EAAE,CAAC,CAAC,UAAU,CAAC;YACxB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;SACzC,EACD,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,KAAC,IAAI,IAAC,IAAI,EAAE,YAAY,GAAI,CAAC,CAAC,CAAC,mBAAK,GAC3D,CACH,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,UAAU,CAAC","sourcesContent":["import {\n  FunctionComponent,\n  forwardRef,\n  useState,\n  useCallback,\n  useRef,\n  ChangeEvent,\n  useEffect,\n  PropsWithoutRef,\n  Ref\n} from 'react';\n\nimport { ForwardProps } from '../../types';\nimport ComboBox, { ComboBoxProps } from '../ComboBox';\nimport icons from '../Icon/iconNames';\nimport Icon from '../Icon';\nimport { menuHelpers, MenuProps, MenuItemProps } from '../Menu';\nimport { useI18n } from '../../hooks';\nimport { createStringMatcher } from '../../utils';\n\nexport interface IconPickerProps\n  extends Pick<\n      ComboBoxProps,\n      | 'id'\n      | 'label'\n      | 'labelHidden'\n      | 'required'\n      | 'disabled'\n      | 'readOnly'\n      | 'name'\n      | 'status'\n      | 'info'\n      | 'placeholder'\n      | 'autoFocus'\n    >,\n    Pick<MenuProps, 'scrollAt'> {\n  /** Default selection for the input. */\n  defaultSelection: string;\n  /** Callback fired when user chooses icon from the list of icons. */\n  onSelect?: (iconName: string) => void;\n}\n\nconst getFilteredItems = (iconList: MenuItemProps[], filterValue: string) => {\n  if (!filterValue) return iconList;\n\n  const regExp = createStringMatcher(filterValue);\n  return iconList.filter(({ primary }) => regExp.test(primary));\n};\n\nconst iconList: MenuItemProps[] = icons.map(icon => {\n  return {\n    id: icon,\n    primary: icon,\n    visual: <Icon name={icon} />,\n    selected: false\n  };\n});\n\nconst pageSize = 20;\n\nconst IconPicker: FunctionComponent<IconPickerProps & ForwardProps> = forwardRef(\n  (props: PropsWithoutRef<IconPickerProps>, ref: Ref<HTMLInputElement>) => {\n    const { defaultSelection, scrollAt, onSelect, ...restProps } = props;\n\n    const [items, setItems] = useState<MenuProps['items']>(() => iconList.slice(0, pageSize));\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasMore, setHasMore] = useState(true);\n    const [selectedIcon, setSelectedIcon] = useState(defaultSelection ?? '');\n    const [filterValue, setFilterValue] = useState('');\n    const t = useI18n();\n    const loadMoreTimeoutId = useRef<ReturnType<typeof setTimeout>>();\n\n    const resetItems = useCallback(() => {\n      const filteredItems = getFilteredItems(iconList, filterValue);\n      setItems(\n        menuHelpers.selectItem(filteredItems.slice(0, pageSize), selectedIcon, 'single-select')\n      );\n      setHasMore(filteredItems.length > pageSize);\n    }, [filterValue, selectedIcon]);\n\n    useEffect(() => {\n      resetItems();\n    }, [filterValue, selectedIcon]);\n\n    useEffect(() => {\n      return () => {\n        if (loadMoreTimeoutId.current) clearTimeout(loadMoreTimeoutId.current);\n      };\n    }, []);\n\n    const loadMore = useCallback(() => {\n      if (!isLoading) {\n        setIsLoading(true);\n        if (loadMoreTimeoutId.current) clearTimeout(loadMoreTimeoutId.current);\n        loadMoreTimeoutId.current = setTimeout(() => {\n          setIsLoading(false);\n          setItems(prevItems => {\n            const newItems = menuHelpers.mapTree(\n              getFilteredItems(iconList, filterValue).slice(\n                prevItems.length,\n                prevItems.length + pageSize\n              ),\n              item => ({\n                ...item,\n                selected: item.items ? undefined : selectedIcon === item.id\n              })\n            );\n\n            if (newItems.length === 0) setHasMore(false);\n\n            return menuHelpers.appendTo(prevItems, newItems);\n          });\n        }, 500);\n      }\n    }, [filterValue, isLoading]);\n\n    const selectItem = useCallback(\n      (iconName: string) => {\n        setSelectedIcon(iconName);\n        setFilterValue('');\n        onSelect?.(iconName);\n      },\n      [onSelect]\n    );\n\n    const clearSelection = useCallback(() => {\n      setSelectedIcon('');\n      setItems(cur =>\n        menuHelpers.mapTree(cur, item => {\n          return {\n            ...item,\n            selected: false\n          };\n        })\n      );\n    }, []);\n\n    return (\n      <ComboBox\n        {...restProps}\n        ref={ref}\n        selected={\n          selectedIcon\n            ? {\n                items: {\n                  id: selectedIcon,\n                  text: selectedIcon\n                }\n              }\n            : undefined\n        }\n        value={filterValue}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n          if (!e.target.value) clearSelection();\n          setFilterValue(e.target.value);\n        }}\n        onBlur={() => {\n          resetItems();\n          setFilterValue('');\n        }}\n        menu={{\n          items,\n          onItemClick: selectItem,\n          scrollAt,\n          accent: filterValue ? createStringMatcher(filterValue) : undefined,\n          emptyText: t('no_items'),\n          loading: isLoading,\n          loadMore: hasMore ? loadMore : undefined\n        }}\n        visual={selectedIcon ? <Icon name={selectedIcon} /> : <></>}\n      />\n    );\n  }\n);\n\nexport default IconPicker;\n"]}