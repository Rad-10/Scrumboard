import { MutableRefObject } from 'react';
import { openCloseStates } from '../../hooks/useTransitionState';
import { AppShellProps, UtilItemProps } from './AppShell.types';
export interface AppShellDrawerContextValue {
    drawerOpen: boolean;
    openDrawer: (item: UtilItemProps) => void;
    closeDrawer: () => void;
}
export declare const AppShellDrawerContext: import("react").Context<AppShellDrawerContextValue>;
export interface AppShellContextValue {
    navOpen: boolean;
    navState: typeof openCloseStates[keyof typeof openCloseStates];
    focusedImperatively: MutableRefObject<boolean>;
    headerEl: HTMLDivElement | null;
    previewTriggerRef: MutableRefObject<HTMLElement | null>;
    searchContainerEl: HTMLElement | null;
    setSearchContainerEl: (el: HTMLElement | null) => void;
    collapsedHoverMenus?: AppShellProps['collapsedHoverMenus'];
    mobileNavOpen: boolean;
}
declare const AppShellContext: import("react").Context<AppShellContextValue>;
export default AppShellContext;
//# sourceMappingURL=AppShellContext.d.ts.map