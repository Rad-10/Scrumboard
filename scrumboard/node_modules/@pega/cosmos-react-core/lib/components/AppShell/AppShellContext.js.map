{"version":3,"file":"AppShellContext.js","sourceRoot":"","sources":["../../../src/components/AppShell/AppShellContext.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAoB,MAAM,OAAO,CAAC;AAYxD,MAAM,CAAC,MAAM,qBAAqB,GAAG,aAAa,CAA6B;IAC7E,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,GAAG,EAAE,GAAE,CAAC;IACpB,WAAW,EAAE,GAAG,EAAE,GAAE,CAAC;CACtB,CAAC,CAAC;AAcH,MAAM,eAAe,GAAG,aAAa,CAAuB;IAC1D,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,QAAQ;IAClB,mBAAmB,EAAE,KAAK;IAC1B,mBAAmB,EAAE;QACnB,IAAI,OAAO;YACT,OAAO,KAAK,CAAC;QACf,CAAC;KACF;IACD,QAAQ,EAAE,IAAI;IACd,iBAAiB,EAAE;QACjB,IAAI,OAAO;YACT,OAAO,IAAI,CAAC;QACd,CAAC;QACD,gEAAgE;QAChE,IAAI,OAAO,CAAC,GAAG,IAAG,CAAC;KACpB;IACD,iBAAiB,EAAE,IAAI;IACvB,oBAAoB,EAAE,GAAG,EAAE,GAAE,CAAC;IAC9B,aAAa,EAAE,KAAK;CACrB,CAAC,CAAC;AAEH,eAAe,eAAe,CAAC","sourcesContent":["import { createContext, MutableRefObject } from 'react';\n\nimport { openCloseStates } from '../../hooks/useTransitionState';\n\nimport { AppShellProps, UtilItemProps } from './AppShell.types';\n\nexport interface AppShellDrawerContextValue {\n  drawerOpen: boolean;\n  openDrawer: (item: UtilItemProps) => void;\n  closeDrawer: () => void;\n}\n\nexport const AppShellDrawerContext = createContext<AppShellDrawerContextValue>({\n  drawerOpen: false,\n  openDrawer: () => {},\n  closeDrawer: () => {}\n});\n\nexport interface AppShellContextValue {\n  navOpen: boolean;\n  navState: typeof openCloseStates[keyof typeof openCloseStates];\n  focusedImperatively: MutableRefObject<boolean>;\n  headerEl: HTMLDivElement | null;\n  previewTriggerRef: MutableRefObject<HTMLElement | null>;\n  searchContainerEl: HTMLElement | null;\n  setSearchContainerEl: (el: HTMLElement | null) => void;\n  collapsedHoverMenus?: AppShellProps['collapsedHoverMenus'];\n  mobileNavOpen: boolean;\n}\n\nconst AppShellContext = createContext<AppShellContextValue>({\n  navOpen: false,\n  navState: 'closed',\n  collapsedHoverMenus: false,\n  focusedImperatively: {\n    get current() {\n      return false;\n    }\n  },\n  headerEl: null,\n  previewTriggerRef: {\n    get current() {\n      return null;\n    },\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    set current(val) {}\n  },\n  searchContainerEl: null,\n  setSearchContainerEl: () => {},\n  mobileNavOpen: false\n});\n\nexport default AppShellContext;\n"]}