{"version":3,"file":"SelectableCard.js","sourceRoot":"","sources":["../../../src/components/Card/SelectableCard.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAmC,QAAQ,EAAE,MAAM,OAAO,CAAC;AAClE,OAAO,MAAM,MAAM,mBAAmB,CAAC;AAGvC,OAAO,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAChD,OAAO,UAAU,MAAM,eAAe,CAAC;AAGvC,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAgBpC,MAAM,YAAY,GAAiC;IACjD,cAAc,EAAE,KAAK;CACtB,CAAC;AAMF,MAAM,oBAAoB,GAAG,MAAM,CAAC,UAAU,CAAC,CAA2B;;MAEpE,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;;;;QAIzE,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC;;;IAG5E,UAAU,GAAG,UAAU;;;;IAIvB,UAAU,GAAG,UAAU;;;CAG1B,CAAC;AAEF,oBAAoB,CAAC,YAAY,GAAG,gBAAgB,CAAC;AAErD,MAAM,cAAc,GAA0D,CAC5E,KAA0B,EAC1B,EAAE;IACF,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAC3D,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;IAE5D,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;QACxB,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;SACjC;IACH,CAAC,CAAC;IAEF,MAAM,sBAAsB,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,CAAC;IAElE,OAAO,CACL,KAAC,oBAAoB,IACnB,IAAI,EAAE,IAAI,EACV,WAAW,QACX,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,GAAG,EAAE,CAAC,sBAAsB,EAAE,YAEvC,KAAC,WAAW,cACV,KAAC,IAAI,IAAC,SAAS,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,YACtC,wBACE,KAAC,UAAU,IACT,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,QAAQ,EACf,QAAQ,EAAE,GAAG,EAAE,CAAC,sBAAsB,EAAE,GACxC,GACE,GACD,GACK,GACO,CACxB,CAAC;AACJ,CAAC,CAAC;AAEF,cAAc,CAAC,YAAY,GAAG,YAAY,CAAC;AAE3C,eAAe,cAAc,CAAC","sourcesContent":["import { FunctionComponent, ReactElement, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { BaseProps, ForwardProps } from '../../types';\nimport { defaultThemeProp } from '../../theme';\nimport { debounce } from '../../utils';\nimport Flex, { StyledFlex } from '../Flex/Flex';\nimport RadioCheck from '../RadioCheck';\nimport { RadioCheckProps } from '../RadioCheck/RadioCheck';\n\nimport CardContent from './CardContent';\nimport { StyledCard } from './Card';\n\nexport interface SelectableCardProps extends BaseProps {\n  /** The type of Card selection. Either 'checkbox' or 'radio'. */\n  type: RadioCheckProps['type'];\n  /** The content of the Card. */\n  children: ReactElement<any>;\n  /**\n   * Determines whether the Card is selected by default.\n   * @default false\n   */\n  defaultChecked?: RadioCheckProps['defaultChecked'];\n  /** Callback when the Card is selected or de-selected. */\n  onChange?: (event: { checked: boolean }) => void;\n}\n\nconst defaultProps: Partial<SelectableCardProps> = {\n  defaultChecked: false\n};\n\ninterface StyledSelectableCardProps extends SelectableCardProps {\n  checked: boolean;\n}\n\nconst StyledSelectableCard = styled(StyledCard)<StyledSelectableCardProps>`\n  border: 0.0625rem solid\n    ${props => (props.checked ? props.theme.base.palette.interactive : '#f4f4f4')};\n\n  &:hover {\n    border: 0.0625rem solid\n      ${props => (props.checked ? props.theme.base.palette.interactive : 'gray')};\n  }\n\n  ${StyledFlex}${StyledFlex}:nth-child(1) {\n    margin-right: 0.625rem;\n  }\n\n  ${StyledFlex}${StyledFlex}:nth-child(2) {\n    margin-top: -0.1875rem;\n  }\n`;\n\nStyledSelectableCard.defaultProps = defaultThemeProp;\n\nconst SelectableCard: FunctionComponent<SelectableCardProps & ForwardProps> = (\n  props: SelectableCardProps\n) => {\n  const { type, defaultChecked, onChange, children } = props;\n  const [checked, changeChecked] = useState(!!defaultChecked);\n\n  const onCardClick = () => {\n    changeChecked(!checked);\n    if (onChange) {\n      onChange({ checked: !checked });\n    }\n  };\n\n  const debouncedClickListener = () => debounce(onCardClick, 100)();\n\n  return (\n    <StyledSelectableCard\n      type={type}\n      interactive\n      checked={checked}\n      onClick={() => debouncedClickListener()}\n    >\n      <CardContent>\n        <Flex container={{ alignItems: 'start' }}>\n          <div>\n            <RadioCheck\n              checked={checked}\n              type={type}\n              label={children}\n              onChange={() => debouncedClickListener()}\n            />\n          </div>\n        </Flex>\n      </CardContent>\n    </StyledSelectableCard>\n  );\n};\n\nSelectableCard.defaultProps = defaultProps;\n\nexport default SelectableCard;\n"]}