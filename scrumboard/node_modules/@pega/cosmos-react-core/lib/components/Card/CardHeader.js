import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { defaultThemeProp } from '../../theme';
import Flex from '../Flex';
import { StyledPopover } from '../Popover';
import { StyledCard } from './Card';
import { StyledCardContent } from './CardContent';
export const StyledCardHeader = styled.header(({ theme, onClick }) => {
    return css `
    ${StyledPopover} &, &:not(${StyledCard} ${StyledCard} > &) {
      padding: calc(1.5 * ${theme.base.spacing}) calc(${theme.components.card.padding} * 2);

      + ${StyledCardContent} {
        padding-block-start: 0;
      }

      &:hover {
        ${onClick ? 'cursor: pointer;' : undefined}
      }
    }
  `;
});
StyledCardHeader.defaultProps = defaultThemeProp;
const CardHeader = forwardRef(({ children, actions, ...restProps }, ref) => {
    return (_jsx(Flex, { container: { alignItems: 'center', justify: 'between' }, as: StyledCardHeader, ...restProps, ref: ref, children: actions ? (_jsxs(_Fragment, { children: [_jsx(Flex, { container: { alignItems: 'center' }, item: { grow: 1 }, children: children }), _jsx("div", { children: actions })] })) : (children) }));
});
CardHeader.displayName = 'CardHeader';
export default CardHeader;
//# sourceMappingURL=CardHeader.js.map