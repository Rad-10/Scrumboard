import { FunctionComponent, Ref, ReactNode } from 'react';
import { ActionsProps } from '../Actions';
import { BaseProps, ForwardProps } from '../../types';
import { AdditionalInfoProps } from '../AdditionalInfo';
export interface FieldGroupProps extends BaseProps {
    /** The content of the Field Group. */
    children: ReactNode;
    /** A description of the field group to be displayed above the controls. */
    description?: string;
    /**
     * If true, the Field Group will be able to collapse the content of its children by clicking on the name.
     * @default false
     */
    collapsible?: boolean;
    /**
     * If true, the Field Group will be collapsed on the first render.
     * @default false
     */
    defaultCollapsed?: boolean;
    /** The name associated with the Field Group. */
    name?: string;
    /** Provides additional info relevant to the field group. */
    additionalInfo?: {
        heading: AdditionalInfoProps['heading'];
        content: AdditionalInfoProps['children'];
    };
    /** An array of actions to add to the header. */
    actions?: ActionsProps['items'];
    /** A reference to the wrapping element. */
    ref?: Ref<HTMLFieldSetElement>;
}
export declare const StyledFieldGroupName: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, {}, never>;
export declare const StyledFieldGroupLegend: import("styled-components").StyledComponent<"legend", import("styled-components").DefaultTheme, {
    open: boolean;
}, never>;
export declare const StyledFieldGroup: import("styled-components").StyledComponent<"fieldset", import("styled-components").DefaultTheme, {}, never>;
declare const FieldGroup: FunctionComponent<FieldGroupProps & ForwardProps>;
export default FieldGroup;
//# sourceMappingURL=FieldGroup.d.ts.map