{"version":3,"file":"LocationView.js","sourceRoot":"","sources":["../../../src/components/Location/LocationView.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC, useContext, useRef, useState, useEffect, Ref } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { BaseProps } from '../../types';\nimport { defaultThemeProp } from '../../theme';\nimport { hasProp } from '../../utils';\nimport Progress from '../Progress';\nimport { Status } from '../Badges';\n\nimport { LatLng } from './types';\nimport { loadMapsAPI, getCoords, toGoogleLatLng, getPlaceById, isLatLngObject } from './utils';\nimport BaseLocationProps from './Location.types';\nimport MapsContext from './MapsContext';\n\nexport const StyledLocationError = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nStyledLocationError.defaultProps = defaultThemeProp;\n\nexport const StyledLocationView = styled.div<{ height?: string }>(props => {\n  const { height, theme } = props;\n\n  return css`\n    height: ${height};\n    position: relative;\n    flex: auto;\n    border-radius: ${theme.base['border-radius']};\n    mask-image: radial-gradient(white, black);\n    -webkit-mask-image: radial-gradient(white, black);\n  `;\n});\n\nStyledLocationView.defaultProps = defaultThemeProp;\n\nconst StyledMap = styled.div<{\n  height?: string;\n  status: string;\n  disabled: boolean;\n  eMessage: string;\n}>(\n  ({\n    height,\n    disabled,\n    status,\n    eMessage,\n    theme: {\n      base: { 'disabled-opacity': disabledOpacity }\n    }\n  }) => {\n    return css`\n      height: ${height};\n      ${disabled &&\n      css`\n        opacity: ${disabledOpacity};\n      `}\n      ${status === 'error' &&\n      eMessage &&\n      css`\n        opacity: ${disabledOpacity};\n      `}\n    `;\n  }\n);\n\nStyledMap.defaultProps = defaultThemeProp;\n\nexport interface LocationViewProps extends BaseLocationProps, BaseProps {\n  /**\n   * Location string as either coordinates, name of a place, or 'current' for the current location.\n   * @default 'current'\n   */\n  location?: LatLng | string | 'current';\n  /**\n   * Set to true to always center the map when the selected location changes. Toggling this from false to true will re-center map on the last pinned location.\n   * @default false\n   */\n  centerMapOnChange?: boolean;\n  /**\n   * Height of the map container.\n   * @default '25rem'\n   */\n  height?: string;\n  /**\n   * How much the map should zoom.\n   * @default 13\n   */\n  zoomLevel?: number;\n  /** Callback fired when user clicks on a location on the map. This function will be passed the coordinates of the location that was clicked. */\n  onClick?: (coords: {\n    latitude: number;\n    longitude: number;\n    name?: string;\n    address?: string;\n  }) => void;\n}\n\nenum LoadStatus {\n  Init = 'init',\n  Ready = 'ready',\n  Error = 'error'\n}\n\nconst LocationView: FC<LocationViewProps> = (props: LocationViewProps) => {\n  const {\n    location = 'current',\n    zoomLevel = 13,\n    height = '25rem',\n    centerMapOnChange = false,\n    onClick,\n    onError,\n    disabled = false,\n    ...restProps\n  } = props;\n  const { name, ...providerOpts } = useContext(MapsContext);\n  const [status, setStatus] = useState<LoadStatus>(LoadStatus.Init);\n  const [eMessage, setEMessage] = useState('');\n  const mapElemRef = useRef<HTMLDivElement>();\n  const map = useRef<google.maps.Map>();\n  const marker = useRef<google.maps.Marker>();\n\n  function initialize(): void {\n    if (mapElemRef.current) {\n      const position = toGoogleLatLng({ latitude: 0, longitude: 0 });\n      map.current = new google.maps.Map(mapElemRef.current, {\n        center: position,\n        zoom: 2,\n        draggable: !disabled\n      });\n      marker.current = new google.maps.Marker({\n        map: map.current,\n        position\n      });\n      marker.current?.setVisible(false);\n      if (onClick)\n        map.current.addListener('click', (event: unknown) => {\n          if (\n            event &&\n            typeof event === 'object' &&\n            hasProp(event, 'placeId') &&\n            typeof event.placeId === 'string'\n          ) {\n            getPlaceById(event.placeId).then(placeInfo => {\n              if (hasProp(event, 'latLng') && isLatLngObject(event.latLng))\n                onClick?.({\n                  ...placeInfo,\n                  latitude: event.latLng.lat(),\n                  longitude: event.latLng.lng()\n                });\n            });\n          }\n        });\n    }\n  }\n\n  useEffect(() => {\n    let unMounted = false;\n    loadMapsAPI(name, providerOpts)\n      .then(() => {\n        if (!unMounted) {\n          initialize();\n          setStatus(LoadStatus.Ready);\n        }\n      })\n      .catch((error: Error) => {\n        setStatus(LoadStatus.Error);\n        setEMessage(error.message);\n        onError?.(error);\n      });\n\n    return () => {\n      unMounted = true;\n      if (map.current) google.maps.event.clearInstanceListeners(map.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    getCoords(location!)\n      .then(coords => {\n        if (map.current) {\n          map.current.setOptions({\n            zoom: zoomLevel,\n            draggable: !disabled\n          });\n          marker.current?.setPosition(toGoogleLatLng(coords));\n          marker.current?.setVisible(true);\n          if (centerMapOnChange) map.current.setCenter(toGoogleLatLng(coords));\n          if (status !== LoadStatus.Ready) setStatus(LoadStatus.Ready);\n        }\n      })\n      .catch((error: Error) => {\n        if (status !== LoadStatus.Error) setStatus(LoadStatus.Error);\n        marker.current?.setVisible(false);\n        setEMessage(error.message);\n        onError?.(error);\n      });\n  }, [location, status, zoomLevel, disabled, centerMapOnChange, onError]);\n\n  return (\n    <StyledLocationView height={height}>\n      <StyledMap\n        ref={mapElemRef as Ref<HTMLDivElement>}\n        height={height}\n        disabled={disabled}\n        status={status}\n        eMessage={eMessage}\n        {...restProps}\n      />\n      {status === LoadStatus.Init && <Progress placement='local' />}\n      {status === LoadStatus.Error && eMessage && (\n        <Status as={StyledLocationError} aria-label={eMessage} variant='info'>\n          {eMessage}\n        </Status>\n      )}\n    </StyledLocationView>\n  );\n};\n\nexport default LocationView;\n"]}