import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { forwardRef, useContext } from 'react';
import Text from '../Text';
import Link from '../Link';
import LocationView from './LocationView';
import MapsContext from './MapsContext';
const LocationDisplay = forwardRef(({ value = '', displayText, variant = 'text-map', height = '25rem', zoomLevel = 13, ...restProps }, ref) => {
    const { name } = useContext(MapsContext);
    const valueString = typeof value === 'string' ? value : `${value?.latitude}, ${value?.longitude}`;
    return !value ? (_jsx(Text, { ref: ref, ...restProps, "aria-hidden": 'true', children: _jsx("span", { "aria-hidden": 'true', children: "\u2013\u2013" }) })) : (_jsxs(_Fragment, { children: [(variant === 'text' || variant === 'text-map') &&
                (name === 'google' ? (_jsx(Link, { ref: ref, ...restProps, target: '_blank', rel: 'noopener noreferrer', href: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(typeof value === 'string' ? value : `${value?.latitude}, ${value?.longitude}`)}`, children: displayText || valueString })) : (_jsx(Text, { ref: ref, ...restProps, children: displayText || valueString }))), (variant === 'text-map' || variant === 'map') && (_jsx(LocationView, { ...{
                    location: value,
                    centerMapOnChange: true,
                    height,
                    zoomLevel
                } }))] }));
});
export default LocationDisplay;
//# sourceMappingURL=LocationDisplay.js.map