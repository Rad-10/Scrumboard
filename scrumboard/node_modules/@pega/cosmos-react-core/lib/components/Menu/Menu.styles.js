import { hideVisually, mix, readableColor, rgba } from 'polished';
import styled, { css } from 'styled-components';
import { defaultThemeProp } from '../../theme';
import { StyledEmptyState } from '../EmptyState';
import { StyledIcon } from '../Icon';
import { StyledGrid } from '../Grid';
import { StyledBareButton } from '../Button/BareButton';
import { tryCatch } from '../../utils';
import { StyledText } from '../Text';
import { StyledVisuallyHiddenText } from '../VisuallyHiddenText/VisuallyHiddenText';
import Button from '../Button';
const listMaxHeight = '50vh';
export const StyledExpandButton = styled(Button) `
  align-self: center;
`;
export const StyledItemLabel = styled.label(({ theme }) => {
    const hoverCheckColor = tryCatch(() => rgba(theme.components['radio-check'][':checked']['background-color'], theme.base.transparency['transparent-5']));
    const checkedBackground = theme.components['radio-check'][':checked']['background-color'];
    const checkedForeground = tryCatch(() => readableColor(checkedBackground));
    return css `
    padding: calc(0.5 * ${theme.base.spacing}) ${theme.base.spacing};
    cursor: pointer;

    &:hover {
      & > input[type='radio']:not(:checked) + ${StyledIcon} {
        color: ${hoverCheckColor};
      }

      & > input[type='checkbox'] + ${StyledIcon} {
        border-color: ${theme.components['form-control'][':hover']['border-color']};
      }
    }

    > ${StyledGrid} {
      flex-grow: 1;
    }

    > input {
      ${hideVisually}

      & + ${StyledIcon} {
        margin-inline-start: 0;
        flex-shrink: 0;
      }

      &[type='radio'] + ${StyledIcon} {
        color: transparent;
      }

      &[type='radio']:checked + ${StyledIcon} {
        color: ${checkedBackground};
      }

      &[type='checkbox'] + ${StyledIcon} {
        border: 0.0625rem solid ${theme.components['radio-check']['border-color']};
        border-radius: min(
          calc(${theme.base['border-radius']} * ${theme.components.checkbox['border-radius']}),
          0.25rem
        );
        color: transparent;
        background-color: ${theme.components['radio-check']['background-color']};
      }

      &[type='checkbox']:checked + ${StyledIcon} {
        background-color: ${checkedBackground};
        border-color: ${theme.components['radio-check'][':checked']['border-color']};
        color: ${checkedForeground};
      }
    }
  `;
});
StyledItemLabel.defaultProps = defaultThemeProp;
export const StyledMenuItem = styled.li(({ theme: { base, components }, isParentItem }) => {
    const activeColor = tryCatch(() => mix(0.85, base.palette['primary-background'], base.palette.interactive));
    const hoverColor = tryCatch(() => mix(0.95, base.palette['primary-background'], base.palette.interactive));
    return css `
      min-height: ${base['hit-area']['mouse-min']};

      @media (pointer: coarse) {
        min-height: ${base['hit-area']['finger-min']};
      }

      &:focus-within {
        background-color: ${activeColor};
      }

      &:hover:not([aria-disabled='true']) {
        background-color: ${hoverColor};
      }

      > button:first-child,
      > a:first-child {
        display: block;
        width: 100%;
        padding: calc(0.5 * ${base.spacing}) ${base.spacing};
        text-align: start;
        text-decoration: none;
        color: inherit;
        ${isParentItem &&
        css `
          padding-inline-start: calc(1.125rem + 2 * ${base.spacing});
        `}
      }

      &[aria-disabled='true'] {
        label,
        ${StyledBareButton} {
          background-color: ${components['form-control'][':disabled']['background-color']};
          opacity: ${base['disabled-opacity']};
        }
      }
    `;
});
StyledMenuItem.defaultProps = defaultThemeProp;
export const StyledAncestors = styled.div `
  ${StyledIcon} {
    width: 1em;
    height: 1em;
  }

  & > ${StyledText} {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
`;
export const StyledVisibilityHidden = styled.p `
  ${hideVisually}
`;
export const StyledSeparator = styled.li(({ theme }) => {
    return css `
    height: 0.0625rem;
    background-color: ${theme.base.palette['border-line']};
    margin: ${theme.base.spacing} 0;
  `;
});
StyledSeparator.defaultProps = defaultThemeProp;
export const StyledMenuGroupList = styled.ul(({ theme }) => {
    return css `
    ${StyledMenuItem} button {
      padding-inline-start: calc(1.5 * ${theme.base.spacing});
    }
  `;
});
StyledMenuGroupList.defaultProps = defaultThemeProp;
export const StyledMenuGroupHeader = styled.div(({ theme }) => {
    return css `
    min-height: ${theme.base['hit-area']['mouse-min']};
    font-weight: ${theme.base['font-weight']['semi-bold']};
    background-color: ${theme.base.palette['secondary-background']};

    @media (pointer: coarse) {
      min-height: ${theme.base['hit-area']['finger-min']};
    }
  `;
});
StyledMenuGroupHeader.defaultProps = defaultThemeProp;
export const StyledMenuListHeader = styled.legend(({ theme: { base } }) => {
    const hoverColor = tryCatch(() => mix(0.95, base.palette['primary-background'], base.palette.interactive));
    const activeColor = tryCatch(() => mix(0.85, base.palette['primary-background'], base.palette.interactive));
    return css `
    width: 100%;
    background-color: ${base.palette['primary-background']};

    &:first-child {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }

    &:last-child {
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
    }

    &:focus-within {
      box-shadow: inset ${base.shadow.focus};
      background-color: ${activeColor};
    }

    &:hover:not([aria-disabled='true']):not([data-current='true']) {
      background-color: ${hoverColor};
    }

    & > ${StyledBareButton}, & > button {
      color: ${base.palette['foreground-color']};
      width: 100%;
      padding: calc(0.5 * ${base.spacing}) ${base.spacing};
      text-align: start;
      border-radius: inherit;

      > ${StyledGrid} {
        grid-column-gap: ${base.spacing};
      }

      ${StyledIcon} {
        /* Fixes vertical align issue increasing box size beyond square */
        display: block;
      }
    }
  `;
});
StyledMenuListHeader.defaultProps = defaultThemeProp;
export const StyledMenuList = styled.ul(({ theme }) => css `
    overflow-x: hidden;
    overflow-y: auto;
    list-style: none;
    height: 100%;
    border-radius: inherit;

    ${StyledEmptyState} {
      padding: ${theme.base.spacing};
      height: auto;
    }

    li:not(:first-child):not([role='presentation']) > ${StyledMenuGroupHeader} {
      margin-block-start: ${theme.base.spacing};
    }
  `);
StyledMenuList.defaultProps = defaultThemeProp;
export const StyledMenuListContainer = styled.fieldset(({ theme }) => {
    return css `
    background-color: ${theme.base.palette['primary-background']};
    max-height: ${listMaxHeight};
    border: 0;
    border-radius: inherit;
  `;
});
StyledMenuListContainer.defaultProps = defaultThemeProp;
export const StyledFlyoutMenuListContainer = styled(StyledMenuListContainer) `
  min-width: 10rem;
`;
export const StyledLoadingItem = styled.li `
  display: block;
  position: relative;
  height: 2.8rem;
`;
export const StyledMenuListWrapper = styled.div(({ theme }) => css `
    position: relative;
    overflow: hidden;
    transition: height ${theme.base.animation.speed} ${theme.base.animation.timing.ease};
    max-height: ${listMaxHeight};

    & > fieldset:first-child {
      position: relative;
    }

    &:first-child {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }

    &:last-child {
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
    }
  `);
StyledMenuListWrapper.defaultProps = defaultThemeProp;
export const StyledMenu = styled.div(({ theme }) => {
    const borderStyle = `0.0625rem solid ${theme.base.palette['border-line']}`;
    const activeColor = tryCatch(() => mix(0.85, theme.base.palette['primary-background'], theme.base.palette.interactive));
    return css `
    &:first-child {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }

    &:last-child {
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
    }

    &[data-active-scope='true'] [data-current='true'] {
      background-color: ${activeColor};
    }

    ${StyledVisuallyHiddenText}:first-child {
      + ${StyledMenuListWrapper}, + header {
        border-top-left-radius: inherit;
        border-top-right-radius: inherit;
      }
    }

    > header,
    > footer {
      padding: ${theme.base.spacing};
    }

    > header {
      border-bottom: ${borderStyle};
    }

    > footer {
      border-top: ${borderStyle};
    }
  `;
});
StyledMenu.defaultProps = defaultThemeProp;
//# sourceMappingURL=Menu.styles.js.map