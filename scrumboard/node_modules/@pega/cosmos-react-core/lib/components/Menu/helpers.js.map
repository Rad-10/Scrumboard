{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../src/components/Menu/helpers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAItC,MAAM,OAAO,GAAG;IACd,MAAM,CAAC,IAAoC;QACzC,OAAO,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAClC,CAAC;IAED,OAAO,CAAC,KAAyB,EAAE,EAAyB;QAC1D,IAAI,KAAgC,CAAC;QACrC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvC,KAAK,GAAG,IAAI,CAAC;gBACb,OAAO,IAAI,CAAC;aACb;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrC,OAAO,CAAC,CAAC,KAAK,CAAC;aAChB;YAED,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,CAAC,KAAyB,EAAE,EAAyB;QAC1D,IAAI,IAAI,GAAuC,EAAE,CAAC;QAClD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBAClB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;gBACd,OAAO,IAAI,CAAC;aACb;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAC/C,IAAI,SAAS,CAAC,MAAM;oBAAE,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACpD,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;aACtB;YAED,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CACL,KAAyB,EACzB,EAAuB,EACvB,OAAsB;QAEtB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAoC,EAAE,EAAE;YACxD,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE;gBAAE,OAAO,EAAE,GAAG,OAAO,EAAE,CAAC;YAE1C,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,OAAO;oBACL,GAAG,IAAI;oBACP,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,CAAoB;iBAChE,CAAC;aACH;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CACL,KAAyB,EACzB,EAAuB,EACvB,EAAoF;QAEpF,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;YACtC,IAAI,OAAO,GAAG,IAAI,CAAC;YAEnB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,OAAO,GAAG;oBACR,GAAG,OAAO;oBACV,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,CAAoB;iBAC3D,CAAC;aACH;YAED,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBAC1C,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aACrC;YAED,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CACL,KAAyB,EACzB,EAAoF;QAEpF,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;YACtC,IAAI,OAAO,GAAG,IAAI,CAAC;YAEnB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,OAAO,GAAG;oBACR,GAAG,OAAO;oBACV,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAoB;iBACvD,CAAC;aACH;YAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QACpE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CACL,KAAyC,EACzC,YAAgD,EAAE,EAClD,UAAqC,EAAE,WAAW,EAAE,KAAK,EAAE;QAE3D,IAAI,QAAQ,GAAoB,EAAE,CAAC;QACnC,IAAI,SAAS,GAAoB,EAAE,CAAC;QAEpC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACnB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACrB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACrE;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;gBAEzE,IAAI,OAAO,CAAC,WAAW,EAAE;oBACvB,SAAS,GAAG,CAAC,GAAG,SAAS,EAAE,GAAG,QAAQ,CAAC,CAAC;iBACzC;qBAAM;oBACL,QAAQ,GAAG,CAAC,GAAG,QAAQ,EAAE,GAAG,QAAQ,CAAC,CAAC;iBACvC;aACF;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IACtE,CAAC;IAED,cAAc,CACZ,KAAyB,EACzB,EAAuB,EACvB,IAAwB,EACxB,IAAc;QAEd,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACrB,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;oBAClB,OAAO;wBACL,GAAG,IAAI;wBACP,QAAQ,EAAE,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;qBACrD,CAAC;iBACH;gBAED,IAAI,IAAI,KAAK,eAAe,EAAE;oBAC5B,OAAO;wBACL,GAAG,IAAI;wBACP,QAAQ,EAAE,KAAK;qBAChB,CAAC;iBACH;aACF;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CACR,KAAyB,EACzB,EAAuB,EACvB,IAAwB;QAExB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,YAAY,CACV,KAAyB,EACzB,EAAuB,EACvB,IAAwB;QAExB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,WAAW,CAAC,KAAyB;QACnC,OAAO,KAAK,CAAC,MAAM,CAAkB,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE;YACxD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACtC,UAAU,GAAG,CAAC,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;aACpC;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,UAAU,GAAG,CAAC,GAAG,UAAU,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/D;YACD,OAAO,UAAU,CAAC;QACpB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,SAAS,CACP,KAAyB,EACzB,QAA4B,EAC5B,EAA0B;QAE1B,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;gBACtC,GAAG,IAAI;gBACP,KAAK,EAAE,CAAC,GAAG,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;aAC5C,CAAC,CAAC,CAAC;SACL;QACD,OAAO,CAAC,GAAG,QAAQ,EAAE,GAAG,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,QAAQ,CACN,KAAyB,EACzB,QAA4B,EAC5B,EAA0B;QAE1B,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;gBACtC,GAAG,IAAI;gBACP,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,GAAG,QAAQ,CAAC;aAC5C,CAAC,CAAC,CAAC;SACL;QACD,OAAO,CAAC,GAAG,KAAK,EAAE,GAAG,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CACT,KAAyB,EACzB,MAA8B;QAE9B,IAAI,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,QAAoD,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;YAChD,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,WAAW,CACT,KAAyB,EACzB,MAA8B;QAE9B,IAAI,CAAC,MAAM;YAAE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,QAAoD,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;YAChD,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,aAAa,CACX,KAAyB,EACzB,MAA4B;QAE5B,IAAI,CAAC,MAAM;YAAE,OAAO,SAAS,CAAC;QAC9B,MAAM,CAAC,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACnD,OAAO,UAAU,CAAC;IACpB,CAAC;CACF,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import { hasProp } from '../../utils';\n\nimport { MenuProps, MenuObjectProps, MenuItemProps, MenuGroupProps } from './Menu.types';\n\nconst helpers = {\n  isItem(item: MenuItemProps | MenuGroupProps): item is MenuItemProps {\n    return hasProp(item, 'primary');\n  },\n\n  getItem(items: MenuProps['items'], id: MenuObjectProps['id']): MenuItemProps | undefined {\n    let found: MenuItemProps | undefined;\n    items.some(item => {\n      if (this.isItem(item) && item.id === id) {\n        found = item;\n        return true;\n      }\n\n      if (item.items) {\n        found = this.getItem(item.items, id);\n        return !!found;\n      }\n\n      return false;\n    });\n\n    return found;\n  },\n\n  getPath(items: MenuProps['items'], id: MenuObjectProps['id']): MenuProps['items'] {\n    let path: (MenuItemProps | MenuGroupProps)[] = [];\n    items.some(item => {\n      if (item.id === id) {\n        path = [item];\n        return true;\n      }\n\n      if (item.items) {\n        const innerPath = this.getPath(item.items, id);\n        if (innerPath.length) path = innerPath.concat(item);\n        return !!path.length;\n      }\n\n      return false;\n    });\n\n    return path;\n  },\n\n  setItem(\n    items: MenuProps['items'],\n    id: MenuItemProps['id'],\n    newItem: MenuItemProps\n  ): MenuProps['items'] {\n    return items.map((item: MenuItemProps | MenuGroupProps) => {\n      if (item.id === id) return { ...newItem };\n\n      if (item.items) {\n        return {\n          ...item,\n          items: this.setItem(item.items, id, newItem) as MenuItemProps[]\n        };\n      }\n\n      return item;\n    });\n  },\n\n  mapItem(\n    items: MenuProps['items'],\n    id: MenuItemProps['id'],\n    fn: (item: MenuItemProps, index: number, array: MenuProps['items']) => MenuItemProps\n  ): MenuProps['items'] {\n    return items.map((item, index, array) => {\n      let newItem = item;\n\n      if (item.items) {\n        newItem = {\n          ...newItem,\n          items: this.mapItem(item.items, id, fn) as MenuItemProps[]\n        };\n      }\n\n      if (this.isItem(newItem) && item.id === id) {\n        newItem = fn(newItem, index, array);\n      }\n\n      return newItem;\n    });\n  },\n\n  mapTree(\n    items: MenuProps['items'],\n    fn: (item: MenuItemProps, index: number, array: MenuProps['items']) => MenuItemProps\n  ): MenuProps['items'] {\n    return items.map((item, index, array) => {\n      let newItem = item;\n\n      if (item.items) {\n        newItem = {\n          ...newItem,\n          items: this.mapTree(item.items, fn) as MenuItemProps[]\n        };\n      }\n\n      return this.isItem(newItem) ? fn(newItem, index, array) : newItem;\n    });\n  },\n\n  flatten(\n    items: (MenuItemProps | MenuGroupProps)[],\n    ancestors: (MenuItemProps | MenuGroupProps)[] = [],\n    options: { parentFirst?: boolean } = { parentFirst: false }\n  ): MenuItemProps[] {\n    let allItems: MenuItemProps[] = [];\n    let leafItems: MenuItemProps[] = [];\n\n    items.forEach(item => {\n      if (this.isItem(item)) {\n        allItems.push(ancestors.length > 0 ? { ...item, ancestors } : item);\n      }\n\n      if (item.items) {\n        const children = this.flatten(item.items, [...ancestors, item], options);\n\n        if (options.parentFirst) {\n          leafItems = [...leafItems, ...children];\n        } else {\n          allItems = [...allItems, ...children];\n        }\n      }\n    });\n\n    return options.parentFirst ? [...allItems, ...leafItems] : allItems;\n  },\n\n  toggleSelected(\n    items: MenuProps['items'],\n    id: MenuItemProps['id'],\n    mode?: MenuProps['mode'],\n    bool?: boolean\n  ): MenuProps['items'] {\n    return this.mapTree(items, item => {\n      if (this.isItem(item)) {\n        if (item.id === id) {\n          return {\n            ...item,\n            selected: bool !== undefined ? bool : !item.selected\n          };\n        }\n\n        if (mode === 'single-select') {\n          return {\n            ...item,\n            selected: false\n          };\n        }\n      }\n\n      return item;\n    });\n  },\n\n  selectItem(\n    items: MenuProps['items'],\n    id: MenuItemProps['id'],\n    mode?: MenuProps['mode']\n  ): MenuProps['items'] {\n    return this.toggleSelected(items, id, mode, true);\n  },\n\n  deselectItem(\n    items: MenuProps['items'],\n    id: MenuItemProps['id'],\n    mode?: MenuProps['mode']\n  ): MenuProps['items'] {\n    return this.toggleSelected(items, id, mode, false);\n  },\n\n  getSelected(items: MenuProps['items']): MenuItemProps[] {\n    return items.reduce<MenuItemProps[]>((selections, item) => {\n      if (this.isItem(item) && item.selected) {\n        selections = [...selections, item];\n      }\n\n      if (item.items) {\n        selections = [...selections, ...this.getSelected(item.items)];\n      }\n      return selections;\n    }, []);\n  },\n\n  prependTo(\n    items: MenuProps['items'],\n    newItems: MenuProps['items'],\n    id?: MenuObjectProps['id']\n  ): MenuProps['items'] {\n    if (id) {\n      return this.mapItem(items, id, item => ({\n        ...item,\n        items: [...newItems, ...(item.items ?? [])]\n      }));\n    }\n    return [...newItems, ...items];\n  },\n\n  appendTo(\n    items: MenuProps['items'],\n    newItems: MenuProps['items'],\n    id?: MenuObjectProps['id']\n  ): MenuProps['items'] {\n    if (id) {\n      return this.mapItem(items, id, item => ({\n        ...item,\n        items: [...(item.items ?? []), ...newItems]\n      }));\n    }\n    return [...items, ...newItems];\n  },\n\n  getNextItem(\n    items: MenuProps['items'],\n    itemId?: MenuObjectProps['id']\n  ): MenuItemProps | MenuGroupProps | undefined {\n    if (!itemId) return items[0];\n    let nextItem: MenuItemProps | MenuGroupProps | undefined;\n    this.mapItem(items, itemId, (item, index, list) => {\n      nextItem = list[index + 1];\n      return item;\n    });\n    return nextItem;\n  },\n\n  getPrevItem(\n    items: MenuProps['items'],\n    itemId?: MenuObjectProps['id']\n  ): MenuItemProps | MenuGroupProps | undefined {\n    if (!itemId) return items[0];\n    let prevItem: MenuItemProps | MenuGroupProps | undefined;\n    this.mapItem(items, itemId, (item, index, list) => {\n      prevItem = list[index - 1];\n      return item;\n    });\n    return prevItem;\n  },\n\n  getParentItem(\n    items: MenuProps['items'],\n    itemId?: MenuItemProps['id']\n  ): MenuItemProps | MenuGroupProps | undefined {\n    if (!itemId) return undefined;\n    const [, parentItem] = this.getPath(items, itemId);\n    return parentItem;\n  }\n};\n\nexport default helpers;\n"]}