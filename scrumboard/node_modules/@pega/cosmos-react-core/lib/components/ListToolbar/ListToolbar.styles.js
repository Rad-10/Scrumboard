import styled, { css } from 'styled-components';
import { StyledSearchInput } from '../SearchInput';
import MenuButton from '../MenuButton';
import Text, { StyledText } from '../Text';
import { defaultThemeProp } from '../../theme';
import { calculateFontSize } from '../../styles';
import { StyledButton } from '../Button';
export const StyledSearchForm = styled.div `
  ${StyledSearchInput} {
    flex-grow: 1;
    max-width: min(100%, 40ch);
  }
`;
export const StyledViewSelector = styled(MenuButton)(({ theme, required }) => {
    const fontSizes = calculateFontSize(theme.base['font-size'], theme.base['font-scale']);
    const { urgent } = theme.base.palette;
    const hitAreaMouse = theme.base['hit-area']['mouse-min'];
    const hitAreaFinger = theme.base['hit-area']['finger-min'];
    return css `
    flex-shrink: initial;
    white-space: initial;
    ${StyledText} {
      font-size: ${fontSizes[theme.components.text.h3['font-size']]};
      font-weight: ${theme.components.text.h3['font-weight']};
      line-height: ${hitAreaMouse};
      word-break: break-word;
      @media (pointer: coarse) {
        line-height: ${hitAreaFinger};
      }
    }

    ${StyledText}::after {
      display: ${required ? 'inline-block' : 'none'};
      content: '\\00a0*';
      vertical-align: top;
      color: ${urgent};
    }
  `;
});
StyledViewSelector.defaultProps = defaultThemeProp;
export const StyledListToolbar = styled.div `
  ${StyledButton} + ${StyledButton} {
    margin-inline-start: 0;
  }
`;
export const StyledHeadingText = styled(Text)(({ theme, required }) => {
    const { urgent } = theme.base.palette;
    const hitAreaMouse = theme.base['hit-area']['mouse-min'];
    const hitAreaFinger = theme.base['hit-area']['finger-min'];
    return css `
    line-height: ${hitAreaMouse};
    word-break: break-word;
    @media (pointer: coarse) {
      line-height: ${hitAreaFinger};
    }
    &::after {
      display: ${required ? 'inline' : 'none'};
      content: '\\00a0*';
      vertical-align: top;
      color: ${urgent};
    }
  `;
});
StyledHeadingText.defaultProps = defaultThemeProp;
//# sourceMappingURL=ListToolbar.styles.js.map