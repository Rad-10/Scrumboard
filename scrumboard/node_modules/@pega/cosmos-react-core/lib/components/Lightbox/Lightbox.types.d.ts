import { ReactNode, SyntheticEvent } from 'react';
import { NoChildrenProp, BaseProps } from '../../types';
import { BackdropProps } from '../Backdrop/Backdrop';
import { ImageProps } from '../Image';
export interface LightboxProps extends NoChildrenProp, BaseProps {
    /** A list of compatible content to present in the lightbox. */
    items: LightboxItem[];
    /**
     * The index of the item to present on mount.
     * @default 0
     * */
    defaultIndex?: number;
    /** Allow cycling through the items in either direction. */
    cycle?: true;
    /** Called when an item's file is loaded. */
    onItemLoad?: (id: LightboxItem['id'], e: SyntheticEvent<HTMLImageElement>) => void;
    /** Called when an item's file encounters an error while loading. */
    onItemError?: (id: LightboxItem['id'], e: SyntheticEvent<HTMLImageElement>) => void;
    /** Called when the user navigates between items. */
    onNavigate?: (id: LightboxItem['id']) => void;
    /** Called when a download action is triggered for an item's file. */
    onItemDownload?: (id: LightboxItem['id']) => void;
    /** Called after the lightbox has transitioned out. */
    onAfterClose?: BackdropProps['onAfterTransitionOut'];
    /** A ref to the underlying root element of the lightbox. */
    ref?: BackdropProps['ref'];
}
export interface LightboxItem {
    /** A unique identifier for the item. */
    id: string;
    /** The item's name e.g. filename. */
    name: string;
    /** Text to describe the item. */
    description: ImageProps['alt'];
    /** URL for the item's binary file. */
    src: string;
    /** Additional info about the item. */
    metadata?: ReactNode[];
    /** A ref to the item's underlying element. */
    ref?: ImageProps['ref'];
}
//# sourceMappingURL=Lightbox.types.d.ts.map