{"version":3,"file":"CategorySubPage.js","sourceRoot":"","sources":["../../../src/components/PageTemplates/CategorySubPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  createRef,\n  Ref,\n  forwardRef,\n  PropsWithoutRef,\n  FunctionComponent,\n  ReactNode,\n  useCallback,\n  useMemo,\n  MouseEventHandler\n} from 'react';\n\nimport { hasProp } from '../../utils';\nimport { useConsolidatedRef, useUID } from '../../hooks';\nimport Button, { ButtonProps } from '../Button';\nimport Flex from '../Flex';\nimport Icon from '../Icon';\nimport MenuButton from '../MenuButton';\nimport Text from '../Text';\nimport Progress from '../Progress';\nimport { Action, ForwardProps } from '../../types';\n\nimport {\n  StyledTemplate,\n  StyledTemplateRow,\n  StyledPageArticle,\n  StyledArticleHeader,\n  StyledPageActionCol,\n  StyledPageTitle,\n  StyledMenuColumn,\n  StyledCategoryHeadingRow,\n  StyledCategoryIconBlock,\n  StyledNav,\n  StyledNavList,\n  StyledNavGroup,\n  StyledNavGroupList,\n  StyledNavGroupHeader,\n  StyledNavItem,\n  StyledSkipNavigation\n} from './CategorySubPage.styles';\n\nexport interface NavItemType extends ForwardProps {\n  text: string;\n  active?: boolean;\n  onClick?: MouseEventHandler;\n  href?: string;\n}\n\nexport interface NavGroupType {\n  title?: string;\n  items: NavItemType[];\n}\n\nexport interface PageAction\n  extends Pick<Action, 'id' | 'icon' | 'href' | 'onClick' | 'disabled'>,\n    Pick<ButtonProps, 'variant' | 'label' | 'aria-label' | 'loading'>,\n    ForwardProps {\n  /** Optional text to replace required text string in Action type */\n  text?: string;\n}\n\nexport interface TemplateProps {\n  /** Indicates that the primary view for the page cannot yet be rendered */\n  /** @default false */\n  viewLoading?: boolean;\n  /** Parent Category of page and all navigation items */\n  category: string;\n  /** Parent Category icon */\n  categoryIcon?: string;\n  navItemGroups: NavGroupType[];\n  pageTitle?: string;\n  /** Actions to render in fixed page header. Ordered by priority */\n  pageActions?: PageAction[];\n  /** Maximum top-level action buttons to render in header. Actions passed exceeding this limit will render in an action menu. */\n  /** @default 3 */\n  maxActions?: number;\n  /** Primary page content region */\n  region: ReactNode;\n  /** Ref forwarded to the wrapping element. */\n  ref?: Ref<HTMLDivElement>;\n}\n\nconst NavItem = ({ item: { href, text, active, ...restProps } }: { item: NavItemType }) => {\n  const isAnchor = !!href;\n\n  return (\n    <StyledNavItem\n      as='li'\n      selected={!!active}\n      tabType='horizontal'\n      inverted={false}\n      aria-current={active ? 'page' : undefined}\n    >\n      <Button {...restProps} href={isAnchor ? href : undefined} variant='text'>\n        {text}\n      </Button>\n    </StyledNavItem>\n  );\n};\n\nconst NavGroup = ({ item }: { item: NavGroupType }) => {\n  const mappedGroupedItems = useMemo(() => {\n    return item.items.map(groupedItem => {\n      const key = groupedItem.text;\n      return <NavItem item={groupedItem} key={key} />;\n    });\n  }, [item.items]);\n\n  const titledGroup: boolean = useMemo(() => {\n    return !!item.title && !!item.items.length;\n  }, [item.title, item.items]);\n\n  const anonGroup: boolean = useMemo(() => {\n    return !item.title && item.items.length > 1;\n  }, [item.title, item.items]);\n\n  const groupLabelId = useUID();\n  if (titledGroup) {\n    return (\n      <StyledNavGroup as='li'>\n        <StyledNavGroupHeader variant='h3' id={groupLabelId}>\n          {(item as NavGroupType).title}\n        </StyledNavGroupHeader>\n\n        <StyledNavGroupList aria-labelledby={groupLabelId}>{mappedGroupedItems}</StyledNavGroupList>\n      </StyledNavGroup>\n    );\n  }\n\n  if (anonGroup) {\n    return <StyledNavGroup>{mappedGroupedItems}</StyledNavGroup>;\n  }\n\n  if (item.items.length === 1) {\n    return <NavItem item={item.items[0]} />;\n  }\n\n  return null;\n};\n\nconst CategorySubPage: FunctionComponent<TemplateProps & ForwardProps> = forwardRef(\n  (\n    {\n      viewLoading = false,\n      category,\n      categoryIcon,\n      navItemGroups,\n      pageTitle,\n      pageActions,\n      region,\n      maxActions = 3,\n      ...restProps\n    }: PropsWithoutRef<TemplateProps>,\n    ref: TemplateProps['ref']\n  ) => {\n    const articleRef = createRef<HTMLElement>();\n    const templateRef = useConsolidatedRef(ref);\n\n    const mappedAction = useCallback((action: PageAction) => {\n      const { id, text, icon, label, ...rest } = action;\n\n      return (\n        <Button {...rest} key={id} icon={!!icon && !text} label={label || text}>\n          {!!icon && <Icon name={icon} />}\n          {!!text && text}\n        </Button>\n      );\n    }, []);\n\n    return (\n      <StyledTemplate>\n        <Flex\n          {...restProps}\n          ref={templateRef}\n          as={StyledTemplateRow}\n          container={{ alignItems: 'stretch', wrap: 'nowrap' }}\n        >\n          <StyledMenuColumn>\n            <StyledSkipNavigation\n              onClick={() => {\n                if (articleRef.current) articleRef.current.focus();\n              }}\n            >\n              Skip to page content\n            </StyledSkipNavigation>\n\n            <Flex as={StyledCategoryHeadingRow} container={{ alignItems: 'center' }}>\n              {categoryIcon && (\n                <Flex\n                  as={StyledCategoryIconBlock}\n                  container={{ alignItems: 'center', justify: 'center' }}\n                >\n                  <Icon name={categoryIcon} />\n                </Flex>\n              )}\n              <Text variant='h1'>{category}</Text>\n            </Flex>\n\n            <StyledNav>\n              <StyledNavList>\n                {navItemGroups.map((navItem, index) => {\n                  const key = hasProp(navItem, 'title') ? navItem.title : `navItem${index}`;\n\n                  return <NavGroup key={key} item={navItem} />;\n                })}\n              </StyledNavList>\n            </StyledNav>\n          </StyledMenuColumn>\n\n          <Flex\n            as={StyledPageArticle}\n            item={{ grow: 1 }}\n            ref={articleRef}\n            aria-label={pageTitle || 'Main Content'}\n            tabIndex={0}\n          >\n            {viewLoading && <Progress placement='local' />}\n\n            {!viewLoading && (\n              <>\n                {(pageTitle || pageActions) && (\n                  <Flex\n                    as={StyledArticleHeader}\n                    container={{\n                      justify: 'between',\n                      alignItems: 'center',\n                      wrap: 'wrap'\n                    }}\n                  >\n                    {pageTitle && <StyledPageTitle>{pageTitle}</StyledPageTitle>}\n\n                    {pageActions && !!pageActions.length && (\n                      <>\n                        {pageActions.length <= maxActions && (\n                          <StyledPageActionCol>\n                            {pageActions.reverse().map(mappedAction)}\n                          </StyledPageActionCol>\n                        )}\n\n                        {pageActions.length > maxActions && (\n                          <StyledPageActionCol>\n                            <MenuButton\n                              text='Actions'\n                              menu={{\n                                items: (pageActions as Action[])\n                                  .slice(maxActions - 1)\n                                  .map(({ id, text, onClick, ...rest }) => ({\n                                    id,\n                                    primary: text,\n                                    onClick,\n                                    ...rest\n                                  }))\n                              }}\n                            />\n\n                            {pageActions\n                              .slice(0, maxActions - 1)\n                              .reverse()\n                              .map(mappedAction)}\n                          </StyledPageActionCol>\n                        )}\n                      </>\n                    )}\n                  </Flex>\n                )}\n\n                {region}\n              </>\n            )}\n          </Flex>\n        </Flex>\n      </StyledTemplate>\n    );\n  }\n);\n\nexport default CategorySubPage;\n"]}