{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/styles/utils.ts"],"names":[],"mappings":"AACA,OAAO,EACL,UAAU,EACV,OAAO,EACP,aAAa,EACb,MAAM,EACN,WAAW,EACX,GAAG,EACH,YAAY,EACb,MAAM,UAAU,CAAC;AAIlB,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AAEpC,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAa,EAAE,EAAE;IAC9C,MAAM,mBAAmB,GAAG,QAAQ,CAClC,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,EACjC,GAAG,EAAE,CAAC,CAAC,CACR,CAAC;IACF,IAAI,UAAU,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IACrD,IAAI,kBAAkB,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5E,IAAI,mBAAmB,GAAG,IAAI,EAAE;QAC9B,UAAU,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;QAChD,kBAAkB,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;KACxE;IAED,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,kBAAkB,EAAE,CAAC;AACpE,CAAC,CAAC;AAEF,MAAM,YAAY,GAAuD;IACvE,iDAAiD;IACjD,EAAE,EAAE,GAAG;IACP,OAAO,EAAE,CAAC;IACV,kDAAkD;IAClD,GAAG,EAAE,CAAC;IACN,QAAQ,EAAE,GAAG;IACb,kDAAkD;IAClD,SAAS,EAAE,CAAC;CACb,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,MAAc,EACd,MAAc,EACd,EACE,IAAI,GAAG,MAAM,EACb,KAAK,GAAG,IAAI,KACwE,EAAE,EAChF,EAAE;IACV,MAAM,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAE5E,IAAI,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,WAAW;QAAE,OAAO,MAAM,CAAC;IAE9D,MAAM,EAAE,SAAS,EAAE,GAAG,aAAa,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;IAE3D,IAAI,aAAa,GAAG,IAAI,CAAC;IACzB,IAAI,YAAY,GAAG,IAAI,CAAC;IAExB,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,IAAI,UAAU,GAAG,EAAE,CAAC;IAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;QACjC,IAAI,aAAa,EAAE;YACjB,MAAM,UAAU,GAAG,GAAG,CAAC;gBACrB,GAAG,aAAa;gBAChB,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;aACtC,CAAC,CAAC;YAEH,IAAI,WAAW,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,WAAW,EAAE;gBAClD,IAAI,IAAI,KAAK,MAAM;oBAAE,OAAO,UAAU,CAAC;gBAEvC,aAAa,GAAG,KAAK,CAAC;gBACtB,WAAW,GAAG,UAAU,CAAC;aAC1B;YAED,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC;gBAAE,aAAa,GAAG,KAAK,CAAC;SAC/C;QAED,IAAI,YAAY,EAAE;YAChB,MAAM,QAAQ,GAAG,GAAG,CAAC;gBACnB,GAAG,aAAa;gBAChB,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;aACtC,CAAC,CAAC;YAEH,IAAI,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,WAAW,EAAE;gBAChD,IAAI,IAAI,KAAK,OAAO;oBAAE,OAAO,QAAQ,CAAC;gBAEtC,YAAY,GAAG,KAAK,CAAC;gBACrB,UAAU,GAAG,QAAQ,CAAC;aACvB;YAED,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC;gBAAE,YAAY,GAAG,KAAK,CAAC;SAC9C;QAED,IAAI,CAAC,aAAa,IAAI,CAAC,YAAY;YAAE,MAAM;KAC5C;IAED,IAAI,WAAW;QAAE,OAAO,WAAW,CAAC;IACpC,IAAI,UAAU;QAAE,OAAO,UAAU,CAAC;IAElC,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,GAAG,KAA6C,EAC/B,EAAE,CAAC,CAAC;IACrB,iBAAiB,EAAE,CAAC,IAAI,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC;CACnG,CAAC,CAAC;AAGH,MAAM,QAAQ,GAAG;IACf,GAAG,EAAE,CAAC,CAAC;IACP,EAAE,EAAE,CAAC,CAAC;IACN,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,EAAE,EAAE,CAAC;IACL,GAAG,EAAE,CAAC;CACP,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,YAAoB,EAAE,aAA8B,EAAE,EAAE;IACxF,IAAI,aAAa,KAAK,QAAQ;QAC5B,OAAO,MAAM,CAAC,WAAW,CACvB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC;YAC9C,IAAI;YACJ,QAAQ,YAAY,OAAO,KAAK,gBAAgB;SACjD,CAAC,CACyB,CAAC;IAEhC,OAAO,MAAM,CAAC,WAAW,CACvB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC;QAC9C,IAAI;QACJ,QAAQ,CACN,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,EAAE,aAAkC,CAAC,EAC3E,GAAG,EAAE,CAAC,YAAY,CACnB;KACF,CAAC,CACyB,CAAC;AAChC,CAAC,CAAC","sourcesContent":["import { StyledConfig } from 'styled-components';\nimport {\n  parseToHsl,\n  lighten,\n  readableColor,\n  darken,\n  getContrast,\n  hsl,\n  modularScale\n} from 'polished';\nimport { ContrastScores } from 'polished/lib/types/color';\nimport { ModularScaleRatio } from 'polished/lib/types/modularScaleRatio';\n\nimport { tryCatch } from '../utils';\n\nexport const getHoverColors = (color: string) => {\n  const backgroundLightness = tryCatch(\n    () => parseToHsl(color).lightness,\n    () => 1\n  );\n  let hoverColor = tryCatch(() => lighten(0.1, color));\n  let hoverContrastColor = tryCatch(() => readableColor(lighten(0.1, color)));\n  if (backgroundLightness > 0.35) {\n    hoverColor = tryCatch(() => darken(0.1, color));\n    hoverContrastColor = tryCatch(() => readableColor(darken(0.1, color)));\n  }\n\n  return { background: hoverColor, foreground: hoverContrastColor };\n};\n\nconst wcagContrast: Record<keyof ContrastScores | 'AANonText', number> = {\n  // https://www.w3.org/TR/WCAG21/#contrast-minimum\n  AA: 4.5,\n  AALarge: 3,\n  // https://www.w3.org/TR/WCAG21/#contrast-enhanced\n  AAA: 7,\n  AAALarge: 4.5,\n  // https://www.w3.org/TR/WCAG21/#non-text-contrast\n  AANonText: 3\n};\n\nexport const readableHue = (\n  color1: string,\n  color2: string,\n  {\n    mode = 'both',\n    level = 'AA'\n  }: { mode?: 'light' | 'dark' | 'both'; level?: keyof typeof wcagContrast | number } = {}\n): string => {\n  const minContrast = typeof level === 'string' ? wcagContrast[level] : level;\n\n  if (getContrast(color1, color2) >= minContrast) return color1;\n\n  const { lightness, ...hueSaturation } = parseToHsl(color1);\n\n  let shouldLighten = true;\n  let shouldDarken = true;\n\n  let lightEnough = '';\n  let darkEnough = '';\n\n  for (let i = 0; i <= 1; i += 0.01) {\n    if (shouldLighten) {\n      const lightented = hsl({\n        ...hueSaturation,\n        lightness: Math.min(lightness + i, 1)\n      });\n\n      if (getContrast(lightented, color2) >= minContrast) {\n        if (mode !== 'dark') return lightented;\n\n        shouldLighten = false;\n        lightEnough = lightented;\n      }\n\n      if (lightness + i >= 1) shouldLighten = false;\n    }\n\n    if (shouldDarken) {\n      const darkened = hsl({\n        ...hueSaturation,\n        lightness: Math.max(lightness - i, 0)\n      });\n\n      if (getContrast(darkened, color2) >= minContrast) {\n        if (mode !== 'light') return darkened;\n\n        shouldDarken = false;\n        darkEnough = darkened;\n      }\n\n      if (lightness - i <= 0) shouldDarken = false;\n    }\n\n    if (!shouldLighten && !shouldDarken) break;\n  }\n\n  if (lightEnough) return lightEnough;\n  if (darkEnough) return darkEnough;\n\n  return readableColor(color2);\n};\n\nexport const omitProps = <O extends object = Record<PropertyKey, unknown>>(\n  ...props: [prop: keyof O, ...props: (keyof O)[]]\n): StyledConfig<O> => ({\n  shouldForwardProp: (prop, defaultValidatorFn) => !props.includes(prop) && defaultValidatorFn(prop)\n});\n\nexport type FontSize = 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl' | 'xxl';\nconst stepsMap = {\n  xxs: -2,\n  xs: -1,\n  s: 0,\n  m: 1,\n  l: 2,\n  xl: 3,\n  xxl: 4\n};\n\nexport const calculateFontSize = (baseFontSize: string, baseFontScale: string | number) => {\n  if (baseFontScale === 'linear')\n    return Object.fromEntries(\n      Object.entries(stepsMap).map(([size, steps]) => [\n        size,\n        `calc(${baseFontSize} + (${steps} * 0.0625rem))`\n      ])\n    ) as Record<FontSize, string>;\n\n  return Object.fromEntries(\n    Object.entries(stepsMap).map(([size, steps]) => [\n      size,\n      tryCatch(\n        () => modularScale(steps, baseFontSize, baseFontScale as ModularScaleRatio),\n        () => baseFontSize\n      )\n    ])\n  ) as Record<FontSize, string>;\n};\n"]}