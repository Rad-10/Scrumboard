{"version":3,"file":"useOS.js","sourceRoot":"","sources":["../../src/hooks/useOS.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE5C,OAAO,EAAE,oBAAoB,EAAE,MAAM,UAAU,CAAC;AAEhD,IAAI,EAA0C,CAAC;AAE/C,MAAM,kBAAkB,GAAG,GAAc,EAAE;IACzC,IAAI,EAAE;QAAE,OAAO,EAAE,CAAC;IAElB,EAAE,GAAG,oBAAoB;QACvB,CAAC,CAAE,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAGvC,IAAI,OAAO;QAC3B,CAAC,CAAC,EAAE,CAAC;IACP,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,MAAM,KAAK,GAAG,GAAG,EAAE;IACjB,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAE3E,UAAU;IACV,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,eAAe,EAAE;YACpB,kBAAkB,CAAC,kBAAkB,EAAE,CAAC,CAAC;SAC1C;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO;QACL,OAAO,EAAE,eAAe,KAAK,SAAS;QACtC,SAAS,EAAE,eAAe,KAAK,WAAW;QAC1C,IAAI,EAAE,eAAe;KACtB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,KAAK,CAAC","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { navigatorIsAvailable } from '../utils';\n\nlet os: 'Windows' | 'Macintosh' | 'Other' | '';\n\nconst getOperatingSystem = (): typeof os => {\n  if (os) return os;\n\n  os = navigatorIsAvailable\n    ? (navigator.userAgent.match(/(Windows|Macintosh)/)?.[0] as\n        | 'Windows'\n        | 'Macintosh'\n        | undefined) || 'Other'\n    : '';\n  return os;\n};\n\nconst useOS = () => {\n  const [operatingSystem, setOperatingSystem] = useState(getOperatingSystem);\n\n  // For SSR\n  useEffect(() => {\n    if (!operatingSystem) {\n      setOperatingSystem(getOperatingSystem());\n    }\n  }, []);\n\n  return {\n    windows: operatingSystem === 'Windows',\n    macintosh: operatingSystem === 'Macintosh',\n    name: operatingSystem\n  };\n};\n\nexport default useOS;\n"]}