{"version":3,"file":"usePrevious.js","sourceRoot":"","sources":["../../src/hooks/usePrevious.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AAEhD;;;;GAIG;AACH,MAAM,WAAW,GAAG,CAAI,KAAQ,EAAE,EAAE;IAClC,MAAM,GAAG,GAAG,MAAM,EAAK,CAAC;IACxB,eAAe,CAAC,GAAG,EAAE;QACnB,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;IACtB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,OAAO,GAAG,CAAC,OAAO,CAAC;AACrB,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import { useRef, useLayoutEffect } from 'react';\n\n/**\n * @example const previousValue = usePrevious(value);\n * @param value The value to store before a re-render.\n * @returns previousValue:: The value that was stored prior to a re-render.\n */\nconst usePrevious = <T>(value: T) => {\n  const ref = useRef<T>();\n  useLayoutEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n\nexport default usePrevious;\n"]}