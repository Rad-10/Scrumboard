{"version":3,"file":"useConsolidatedRef.js","sourceRoot":"","sources":["../../src/hooks/useConsolidatedRef.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAoC,MAAM,OAAO,CAAC;AAE1E;;;;GAIG;AACH,MAAM,kBAAkB,GAAG,CAAI,GAAG,IAA4B,EAAgB,EAAE;IAC9E,MAAM,SAAS,GAA+B,MAAM,CAAI,IAAI,CAAC,CAAC;IAE9D,MAAM,QAAQ,GAAiB,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEtE,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,EAAE;QACzC,YAAY,EAAE,IAAI;QAClB,UAAU,EAAE,IAAI;QAChB,GAAG,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,OAAO;QAC5B,GAAG,EAAE,KAAK,CAAC,EAAE;YACX,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,GAAG;oBAAE,OAAO;gBAEjB,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;oBAC7B,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;iBACxB;qBAAM;oBACJ,GAAkC,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;iBACjE;YACH,CAAC,CAAC,CAAC;QACL,CAAC;KACF,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF,eAAe,kBAAkB,CAAC","sourcesContent":["import { useRef, useMemo, Ref, MutableRefObject, RefObject } from 'react';\n\n/**\n * @example const ref = useConsolidatedRefs(refs);\n * @param refs The ref or refs to consolidate.\n * @returns ref:: The consolidated ref.\n */\nconst useConsolidatedRef = <T>(...refs: (Ref<T> | undefined)[]): RefObject<T> => {\n  const targetRef: MutableRefObject<T | null> = useRef<T>(null);\n\n  const refProxy: RefObject<T> = useMemo(() => ({ current: null }), []);\n\n  Object.defineProperty(refProxy, 'current', {\n    configurable: true,\n    enumerable: true,\n    get: () => targetRef.current,\n    set: value => {\n      targetRef.current = value;\n      refs.forEach(ref => {\n        if (!ref) return;\n\n        if (typeof ref === 'function') {\n          ref(targetRef.current);\n        } else {\n          (ref as MutableRefObject<T | null>).current = targetRef.current;\n        }\n      });\n    }\n  });\n\n  return refProxy;\n};\n\nexport default useConsolidatedRef;\n"]}