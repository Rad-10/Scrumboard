import { CSSProperties, RefObject } from 'react';
export declare const expandCollapseStates: Readonly<{
    readonly low: "collapsed";
    readonly rising: "expanding";
    readonly high: "expanded";
    readonly falling: "collapsing";
}>;
export declare const openCloseStates: Readonly<{
    readonly low: "closed";
    readonly rising: "opening";
    readonly high: "open";
    readonly falling: "closing";
}>;
declare const useTransitionState: <Low extends string = "low", Rising extends string = "rising", High extends string = "high", Falling extends string = "falling">({ ref, property, states, defaultState }: {
    ref: RefObject<HTMLElement>;
    property: keyof CSSProperties;
} & ({
    states: {
        low: Low;
        rising: Rising;
        high: High;
        falling: Falling;
    };
    defaultState?: Low | High | undefined;
} | {
    states?: {
        low: 'low';
        rising: 'rising';
        high: 'high';
        falling: 'falling';
    } | undefined;
    defaultState?: "high" | "low" | undefined;
})) => {
    state: Low | Rising | High | Falling;
    set: (wantsToGo: Low | High) => void;
    toggle: () => void;
};
export default useTransitionState;
//# sourceMappingURL=useTransitionState.d.ts.map