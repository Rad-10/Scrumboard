{"version":3,"file":"useLongPress.js","sourceRoot":"","sources":["../../src/hooks/useLongPress.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nconst isTouchEvent = (e: Event): e is TouchEvent => {\n  return 'touches' in e;\n};\n\nconst preventDefault = (e: Event) => {\n  if (!isTouchEvent(e)) return;\n\n  if (e.touches.length < 2 && e.preventDefault) {\n    e.preventDefault();\n  }\n};\n\ninterface Options {\n  key?: string;\n  delay?: number;\n  shouldPreventDefault?: boolean;\n}\n\nconst useLongPress = <T>(\n  onLongPress: () => void,\n  onClick?: () => void,\n  { key = 'Enter', shouldPreventDefault = true, delay = 500 }: Options = {}\n) => {\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const target = useRef<EventTarget>();\n\n  const start = useCallback(\n    (event: React.MouseEvent<T> | React.KeyboardEvent<T> | React.TouchEvent<T>) => {\n      if (shouldPreventDefault && event.target) {\n        event.target.addEventListener('touchend', preventDefault, {\n          passive: false\n        });\n        target.current = event.target;\n      }\n      timeout.current = setTimeout(() => {\n        onLongPress();\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault]\n  );\n\n  const clear = useCallback(\n    (shouldTriggerClick = true) => {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n      if (shouldTriggerClick && !longPressTriggered) {\n        onClick?.();\n      }\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener('touchend', preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered]\n  );\n\n  return {\n    onMouseDown: (e: React.MouseEvent<T>) => start(e),\n    onTouchStart: (e: React.TouchEvent<T>) => start(e),\n    onKeyDown: (e: React.KeyboardEvent<T>) => {\n      if (e.repeat || e.key !== key) return;\n      start(e);\n    },\n    onMouseUp: () => clear(),\n    onKeyUp: (e: React.KeyboardEvent<T>) => {\n      if (e.repeat || e.key !== key) return;\n      clear();\n    },\n    onMouseLeave: () => clear(false),\n    onTouchEnd: () => clear()\n  };\n};\n\nexport default useLongPress;\n"]}