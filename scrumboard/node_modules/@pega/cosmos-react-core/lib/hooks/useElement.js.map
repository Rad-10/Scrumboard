{"version":3,"file":"useElement.js","sourceRoot":"","sources":["../../src/hooks/useElement.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAe,MAAM,OAAO,CAAC;AAE9C;;;;;GAKG;AACH,MAAM,UAAU,GAAG,CAAoB,UAAoB,IAAI,EAA8B,EAAE,CAC7F,QAAQ,CAAW,OAAO,CAAC,CAAC;AAE9B,eAAe,UAAU,CAAC","sourcesContent":["import { useState, RefCallback } from 'react';\n\n/**\n * @example const [element, setElementFunction] = useElement(initial);\n * @param initial The initial value to set to element.\n * @returns * element:: A DOM Element.\n *          * setElementFunction:: The function responsible for setting and resetting the element variable. This function is typically passed to the ref attribute of the element you wish to reference.\n */\nconst useElement = <T extends Element>(initial: T | null = null): [T | null, RefCallback<T>] =>\n  useState<T | null>(initial);\n\nexport default useElement;\n"]}